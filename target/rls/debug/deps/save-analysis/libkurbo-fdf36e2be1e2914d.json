{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3","program":"C:\\Users\\falik\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","kurbo","--edition=2018","C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=fdf36e2be1e2914d","-C","extra-filename=-fdf36e2be1e2914d","--out-dir","c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps","--extern","arrayvec=c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps\\libarrayvec-3c9548306eb7f73b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\falik\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps\\libkurbo-fdf36e2be1e2914d.rmeta"},"prelude":{"crate_id":{"name":"kurbo","disambiguator":[10145121447980278301,12936751777751430686]},"crate_root":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src","external_crates":[{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[45344308337484766,904807583985397655]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[17608585110195136257,12532935013018738971]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10644633998059158352,10345665241509147306]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18212625787733517551,4937265065110821766]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2699922135837212616,11588109643627721037]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16653465091603201180,18239440457404116996]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3073254730555026972,7758270140448631200]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13759999943095835806,4978516890064261122]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4575299228079760236,9361028770882531394]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10307147502021998988,15592389341950453369]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2670035867216739096,10315597156951015330]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7309248630993686720,3186694738066578297]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","num":13,"id":{"name":"arrayvec","disambiguator":[9092535797533170815,16642564076026226512]}}],"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":593,"byte_end":1815,"line_start":15,"line_end":65,"column_start":1,"column_end":24}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1362,"byte_end":1363,"line_start":48,"line_end":48,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Affine","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1362,"byte_end":1363,"line_start":48,"line_end":48,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Arc, ArcAppendIter","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1362,"byte_end":1363,"line_start":48,"line_end":48,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"PathSeg, PathEl, BezPath","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1362,"byte_end":1363,"line_start":48,"line_end":48,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Circle","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1362,"byte_end":1363,"line_start":48,"line_end":48,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"CubicBez","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1362,"byte_end":1363,"line_start":48,"line_end":48,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Ellipse","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1362,"byte_end":1363,"line_start":48,"line_end":48,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Insets","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1362,"byte_end":1363,"line_start":48,"line_end":48,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Line","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1362,"byte_end":1363,"line_start":48,"line_end":48,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"ParamCurveArea, DEFAULT_ACCURACY, ParamCurveCurvature, ParamCurveExtrema, ParamCurve, MAX_EXTREMA, ParamCurveDeriv, ParamCurveNearest, ParamCurveArclen","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1362,"byte_end":1363,"line_start":48,"line_end":48,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Point","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1362,"byte_end":1363,"line_start":48,"line_end":48,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"QuadBez","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1362,"byte_end":1363,"line_start":48,"line_end":48,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Rect","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1362,"byte_end":1363,"line_start":48,"line_end":48,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"RoundedRect","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1362,"byte_end":1363,"line_start":48,"line_end":48,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Shape","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1362,"byte_end":1363,"line_start":48,"line_end":48,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Size","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1362,"byte_end":1363,"line_start":48,"line_end":48,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1362,"byte_end":1363,"line_start":48,"line_end":48,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"TranslateScale","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1362,"byte_end":1363,"line_start":48,"line_end":48,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Vec2","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":593,"byte_end":1815,"line_start":15,"line_end":65,"column_start":1,"column_end":24},"name":"","qualname":"::","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":42},{"krate":0,"index":80},{"krate":0,"index":243},{"krate":0,"index":317},{"krate":0,"index":336},{"krate":0,"index":398},{"krate":0,"index":448},{"krate":0,"index":487},{"krate":0,"index":565},{"krate":0,"index":599},{"krate":0,"index":642},{"krate":0,"index":702},{"krate":0,"index":790},{"krate":0,"index":842},{"krate":0,"index":878},{"krate":0,"index":942},{"krate":0,"index":994},{"krate":0,"index":1064},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148}],"decl_id":null,"docs":" A garden of data structures for manipulating 2D shapes and curves.","sig":null,"attributes":[{"value":"/ A garden of data structures for manipulating 2D shapes and curves.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":593,"byte_end":663,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":664,"byte_end":667,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The kurbo library contains data structures and algorithms for curves and","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":668,"byte_end":744,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ vector paths. It is probably most appropriate for creative tools,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":745,"byte_end":814,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/ but is general enough it might be useful for other applications.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":815,"byte_end":883,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":885,"byte_end":908,"line_start":21,"line_end":21,"column_start":1,"column_end":24}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":909,"byte_end":931,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"allow(clippy :: unreadable_literal)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":932,"byte_end":969,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":970,"byte_end":1011,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"allow(clippy :: excessive_precision)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1012,"byte_end":1050,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"deny(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1051,"byte_end":1095,"line_start":26,"line_end":26,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1149},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2063,"byte_end":2069,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Affine","qualname":"::affine::Affine","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 2D affine transform.\n","sig":null,"attributes":[{"value":"/ A 2D affine transform.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":1907,"byte_end":1933,"line_start":7,"line_end":7,"column_start":1,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2223,"byte_end":2229,"line_start":15,"line_end":15,"column_start":15,"column_end":21},"name":"FLIP_Y","qualname":"::affine::Affine::FLIP_Y","value":"Affine","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" A transform that is flipped on the y-axis. Useful for converting between\n y-up and y-down spaces.\n","sig":null,"attributes":[{"value":"/ A transform that is flipped on the y-axis. Useful for converting between","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2100,"byte_end":2176,"line_start":13,"line_end":13,"column_start":5,"column_end":81}},{"value":"/ y-up and y-down spaces.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2181,"byte_end":2208,"line_start":14,"line_end":14,"column_start":5,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2348,"byte_end":2354,"line_start":18,"line_end":18,"column_start":15,"column_end":21},"name":"FLIP_X","qualname":"::affine::Affine::FLIP_X","value":"Affine","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" A transform that is flipped on the x-axis.\n","sig":null,"attributes":[{"value":"/ A transform that is flipped on the x-axis.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2287,"byte_end":2333,"line_start":17,"line_end":17,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":3129,"byte_end":3132,"line_start":38,"line_end":38,"column_start":18,"column_end":21},"name":"new","qualname":"<Affine>::new","value":"pub const fn new([f64; ]) -> Affine","parent":null,"children":[],"decl_id":null,"docs":" Construct an affine transform from coefficients.","sig":null,"attributes":[{"value":"/ Construct an affine transform from coefficients.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2412,"byte_end":2464,"line_start":20,"line_end":20,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2469,"byte_end":2472,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ If the coefficients are `(a, b, c, d, e, f)`, then the resulting","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2477,"byte_end":2545,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/ transformation represents this augmented matrix:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2550,"byte_end":2602,"line_start":23,"line_end":23,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2607,"byte_end":2610,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2615,"byte_end":2626,"line_start":25,"line_end":25,"column_start":5,"column_end":16}},{"value":"/ | a c e |","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2631,"byte_end":2644,"line_start":26,"line_end":26,"column_start":5,"column_end":18}},{"value":"/ | b d f |","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2649,"byte_end":2662,"line_start":27,"line_end":27,"column_start":5,"column_end":18}},{"value":"/ | 0 0 1 |","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2667,"byte_end":2680,"line_start":28,"line_end":28,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2685,"byte_end":2692,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2697,"byte_end":2700,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note that this convention is transposed from PostScript and","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2705,"byte_end":2768,"line_start":31,"line_end":31,"column_start":5,"column_end":68}},{"value":"/ Direct2D, but is consistent with the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2773,"byte_end":2813,"line_start":32,"line_end":32,"column_start":5,"column_end":45}},{"value":"/ [Wikipedia](https://en.wikipedia.org/wiki/Affine_transformation)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2818,"byte_end":2886,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ formulation of affine transformation as augmented matrix. The","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2891,"byte_end":2956,"line_start":34,"line_end":34,"column_start":5,"column_end":70}},{"value":"/ idea is that `(A * B) * v == A * (B * v)`, where `*` is the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2961,"byte_end":3024,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/ [`Mul`](https://doc.rust-lang.org/std/ops/trait.Mul.html) trait.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":3029,"byte_end":3097,"line_start":36,"line_end":36,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":3102,"byte_end":3111,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":3272,"byte_end":3277,"line_start":44,"line_end":44,"column_start":18,"column_end":23},"name":"scale","qualname":"<Affine>::scale","value":"pub const fn scale(f64) -> Affine","parent":null,"children":[],"decl_id":null,"docs":" An affine transform representing uniform scaling.\n","sig":null,"attributes":[{"value":"/ An affine transform representing uniform scaling.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":3187,"byte_end":3240,"line_start":42,"line_end":42,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":3245,"byte_end":3254,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":3488,"byte_end":3505,"line_start":51,"line_end":51,"column_start":18,"column_end":35},"name":"scale_non_uniform","qualname":"<Affine>::scale_non_uniform","value":"pub const fn scale_non_uniform(f64, f64) -> Affine","parent":null,"children":[],"decl_id":null,"docs":" An affine transform representing non-uniform scaling\n with different scale values for x and y\n","sig":null,"attributes":[{"value":"/ An affine transform representing non-uniform scaling","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":3352,"byte_end":3408,"line_start":48,"line_end":48,"column_start":5,"column_end":61}},{"value":"/ with different scale values for x and y","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":3413,"byte_end":3456,"line_start":49,"line_end":49,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":3461,"byte_end":3470,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":4018,"byte_end":4024,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"rotate","qualname":"<Affine>::rotate","value":"pub fn rotate(f64) -> Affine","parent":null,"children":[],"decl_id":null,"docs":" An affine transform representing rotation.","sig":null,"attributes":[{"value":"/ An affine transform representing rotation.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":3596,"byte_end":3642,"line_start":55,"line_end":55,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":3647,"byte_end":3650,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The convention for rotation is that a positive angle rotates a","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":3655,"byte_end":3721,"line_start":57,"line_end":57,"column_start":5,"column_end":71}},{"value":"/ positive X direction into positive Y. Thus, in a Y-down coordinate","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":3726,"byte_end":3796,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ system (as is common for graphics), it is a clockwise rotation, and","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":3801,"byte_end":3872,"line_start":59,"line_end":59,"column_start":5,"column_end":76}},{"value":"/ in Y-up (traditional for math), it is anti-clockwise.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":3877,"byte_end":3934,"line_start":60,"line_end":60,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":3939,"byte_end":3942,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The angle, `th`, is expressed in radians.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":3947,"byte_end":3992,"line_start":62,"line_end":62,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":3997,"byte_end":4006,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":4224,"byte_end":4233,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"translate","qualname":"<Affine>::translate","value":"pub fn translate<V: Into<Vec2>>(V) -> Affine","parent":null,"children":[],"decl_id":null,"docs":" An affine transform representing translation.\n","sig":null,"attributes":[{"value":"/ An affine transform representing translation.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":4149,"byte_end":4198,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":4203,"byte_end":4212,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":4419,"byte_end":4428,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"as_coeffs","qualname":"<Affine>::as_coeffs","value":"pub fn as_coeffs(Self) -> [f64; ]","parent":null,"children":[],"decl_id":null,"docs":" Get the coefficients of the transform.\n","sig":null,"attributes":[{"value":"/ Get the coefficients of the transform.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":4351,"byte_end":4393,"line_start":77,"line_end":77,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":4398,"byte_end":4407,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":4533,"byte_end":4544,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"determinant","qualname":"<Affine>::determinant","value":"pub fn determinant(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Compute the determinant of this transform.\n","sig":null,"attributes":[{"value":"/ Compute the determinant of this transform.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":4475,"byte_end":4521,"line_start":83,"line_end":83,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":4737,"byte_end":4744,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Affine>::inverse","value":"pub fn inverse(Self) -> Affine","parent":null,"children":[],"decl_id":null,"docs":" Compute the inverse transform.","sig":null,"attributes":[{"value":"/ Compute the inverse transform.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":4625,"byte_end":4659,"line_start":88,"line_end":88,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":4664,"byte_end":4667,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Produces NaN values when the determinant is zero.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":4672,"byte_end":4725,"line_start":90,"line_end":90,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":5530,"byte_end":5549,"line_start":110,"line_end":110,"column_start":12,"column_end":31},"name":"transform_rect_bbox","qualname":"<Affine>::transform_rect_bbox","value":"pub fn transform_rect_bbox(Self, Rect) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Compute the bounding box of a transformed rectangle.","sig":null,"attributes":[{"value":"/ Compute the bounding box of a transformed rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":5128,"byte_end":5184,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":5189,"byte_end":5192,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Returns the minimal `Rect` that encloses the given `Rect` after affine transformation.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":5197,"byte_end":5287,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ If the transform is axis-aligned, then this bounding box is \"tight\", in other words the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":5292,"byte_end":5383,"line_start":106,"line_end":106,"column_start":5,"column_end":96}},{"value":"/ returned `Rect` is the transformed rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":5388,"byte_end":5437,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":5442,"byte_end":5445,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ The returned rectangle always has non-negative width and height.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":5450,"byte_end":5518,"line_start":109,"line_end":109,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1163},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":12128,"byte_end":12131,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Arc","qualname":"::arc::Arc","value":"Arc { center, radii, start_angle, sweep_angle, x_rotation }","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168}],"decl_id":null,"docs":" A single arc segment.\n","sig":null,"attributes":[{"value":"/ A single arc segment.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":11973,"byte_end":11998,"line_start":9,"line_end":9,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1164},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":12174,"byte_end":12180,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"name":"center","qualname":"::arc::Arc::center","value":"point::Point","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" The arc's centre point.\n","sig":null,"attributes":[{"value":"/ The arc's centre point.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":12138,"byte_end":12165,"line_start":13,"line_end":13,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":12332,"byte_end":12337,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"name":"radii","qualname":"::arc::Arc::radii","value":"vec2::Vec2","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" The arc's radii, where the vector's x-component is the radius in the\n positive x direction after applying `x_rotation`.\n","sig":null,"attributes":[{"value":"/ The arc's radii, where the vector's x-component is the radius in the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":12193,"byte_end":12265,"line_start":15,"line_end":15,"column_start":5,"column_end":77}},{"value":"/ positive x direction after applying `x_rotation`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":12270,"byte_end":12323,"line_start":16,"line_end":16,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1166},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":12389,"byte_end":12400,"line_start":19,"line_end":19,"column_start":9,"column_end":20},"name":"start_angle","qualname":"::arc::Arc::start_angle","value":"f64","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" The start angle in radians.\n","sig":null,"attributes":[{"value":"/ The start angle in radians.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":12349,"byte_end":12380,"line_start":18,"line_end":18,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":12483,"byte_end":12494,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"name":"sweep_angle","qualname":"::arc::Arc::sweep_angle","value":"f64","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" The angle between the start and end of the arc, in radians.\n","sig":null,"attributes":[{"value":"/ The angle between the start and end of the arc, in radians.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":12411,"byte_end":12474,"line_start":20,"line_end":20,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":12558,"byte_end":12568,"line_start":23,"line_end":23,"column_start":9,"column_end":19},"name":"x_rotation","qualname":"::arc::Arc::x_rotation","value":"f64","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" How much the arc is rotated, in radians.\n","sig":null,"attributes":[{"value":"/ How much the arc is rotated, in radians.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":12505,"byte_end":12549,"line_start":22,"line_end":22,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":12740,"byte_end":12751,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"name":"append_iter","qualname":"<Arc>::append_iter","value":"pub fn append_iter(&Self, f64) -> ArcAppendIter","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator generating Bezier path elements.","sig":null,"attributes":[{"value":"/ Create an iterator generating Bezier path elements.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":12593,"byte_end":12648,"line_start":27,"line_end":27,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":12653,"byte_end":12656,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ The generated elemets can be append to an existing bezier path.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":12661,"byte_end":12728,"line_start":29,"line_end":29,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":13864,"byte_end":13880,"line_start":61,"line_end":61,"column_start":12,"column_end":28},"name":"to_cubic_beziers","qualname":"<Arc>::to_cubic_beziers","value":"pub fn to_cubic_beziers<P>(Self, f64, P) where P: FnMut(Point, Point, Point)\n-> ()","parent":null,"children":[],"decl_id":null,"docs":" Converts an Arc into a series of cubic bezier segments.","sig":null,"attributes":[{"value":"/ Converts an Arc into a series of cubic bezier segments.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":13735,"byte_end":13794,"line_start":58,"line_end":58,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":13799,"byte_end":13802,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Closure will be invoked for each segment.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":13807,"byte_end":13852,"line_start":60,"line_end":60,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":14163,"byte_end":14176,"line_start":73,"line_end":73,"column_start":12,"column_end":25},"name":"ArcAppendIter","qualname":"::arc::ArcAppendIter","value":"ArcAppendIter {  }","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":17490,"byte_end":17497,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"BezPath","qualname":"::bezpath::BezPath","value":"","parent":null,"children":[],"decl_id":null,"docs":" A path that can Bézier segments up to cubic, possibly with multiple subpaths.\n","sig":null,"attributes":[{"value":"/ A path that can Bézier segments up to cubic, possibly with multiple subpaths.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":17286,"byte_end":17368,"line_start":17,"line_end":17,"column_start":1,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1188},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":17838,"byte_end":17844,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"MoveTo","qualname":"::bezpath::PathEl::MoveTo","value":"PathEl::MoveTo(Point)","parent":{"krate":0,"index":1187},"children":[],"decl_id":null,"docs":" Move directly to the point without drawing anything, starting a new\n subpath.\n","sig":null,"attributes":[{"value":"/ Move directly to the point without drawing anything, starting a new","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":17745,"byte_end":17816,"line_start":28,"line_end":28,"column_start":5,"column_end":76}},{"value":"/ subpath.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":17821,"byte_end":17833,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":17917,"byte_end":17923,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"LineTo","qualname":"::bezpath::PathEl::LineTo","value":"PathEl::LineTo(Point)","parent":{"krate":0,"index":1187},"children":[],"decl_id":null,"docs":" Draw a line from the current location to the point.\n","sig":null,"attributes":[{"value":"/ Draw a line from the current location to the point.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":17857,"byte_end":17912,"line_start":31,"line_end":31,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1194},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18015,"byte_end":18021,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"QuadTo","qualname":"::bezpath::PathEl::QuadTo","value":"PathEl::QuadTo(Point, Point)","parent":{"krate":0,"index":1187},"children":[],"decl_id":null,"docs":" Draw a quadratic bezier using the current location and the two points.\n","sig":null,"attributes":[{"value":"/ Draw a quadratic bezier using the current location and the two points.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":17936,"byte_end":18010,"line_start":33,"line_end":33,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18118,"byte_end":18125,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"name":"CurveTo","qualname":"::bezpath::PathEl::CurveTo","value":"PathEl::CurveTo(Point, Point, Point)","parent":{"krate":0,"index":1187},"children":[],"decl_id":null,"docs":" Draw a cubic bezier using the current location and the three points.\n","sig":null,"attributes":[{"value":"/ Draw a cubic bezier using the current location and the three points.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18041,"byte_end":18113,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1203},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18180,"byte_end":18189,"line_start":38,"line_end":38,"column_start":5,"column_end":14},"name":"ClosePath","qualname":"::bezpath::PathEl::ClosePath","value":"PathEl::ClosePath","parent":{"krate":0,"index":1187},"children":[],"decl_id":null,"docs":" Close off the path.\n","sig":null,"attributes":[{"value":"/ Close off the path.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18152,"byte_end":18175,"line_start":37,"line_end":37,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":1187},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":17732,"byte_end":17738,"line_start":27,"line_end":27,"column_start":10,"column_end":16},"name":"PathEl","qualname":"::bezpath::PathEl","value":"pub enum PathEl {\n\n    /// Move directly to the point without drawing anything, starting a new\n    /// subpath.\n    MoveTo(Point),\n\n    /// Draw a line from the current location to the point.\n    LineTo(Point),\n\n    /// Draw a quadratic bezier using the current location and the two points.\n    QuadTo(Point, Point),\n\n    /// Draw a cubic bezier using the current location and the three points.\n    CurveTo(Point, Point, Point),\n\n    /// Close off the path.\n    ClosePath,\n}","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1191},{"krate":0,"index":1194},{"krate":0,"index":1198},{"krate":0,"index":1203}],"decl_id":null,"docs":" The element of a Bézier path.","sig":null,"attributes":[{"value":"/ The element of a Bézier path.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":17513,"byte_end":17547,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":17548,"byte_end":17551,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ A valid path has `Moveto` at the beginning of each subpath.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":17552,"byte_end":17615,"line_start":24,"line_end":24,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18392,"byte_end":18396,"line_start":46,"line_end":46,"column_start":5,"column_end":9},"name":"Line","qualname":"::bezpath::PathSeg::Line","value":"PathSeg::Line(Line)","parent":{"krate":0,"index":1210},"children":[],"decl_id":null,"docs":" A line segment.\n","sig":null,"attributes":[{"value":"/ A line segment.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18368,"byte_end":18387,"line_start":45,"line_end":45,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1214},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18444,"byte_end":18448,"line_start":48,"line_end":48,"column_start":5,"column_end":9},"name":"Quad","qualname":"::bezpath::PathSeg::Quad","value":"PathSeg::Quad(QuadBez)","parent":{"krate":0,"index":1210},"children":[],"decl_id":null,"docs":" A quadratic bezier segment.\n","sig":null,"attributes":[{"value":"/ A quadratic bezier segment.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18408,"byte_end":18439,"line_start":47,"line_end":47,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1217},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18495,"byte_end":18500,"line_start":50,"line_end":50,"column_start":5,"column_end":10},"name":"Cubic","qualname":"::bezpath::PathSeg::Cubic","value":"PathSeg::Cubic(CubicBez)","parent":{"krate":0,"index":1210},"children":[],"decl_id":null,"docs":" A cubic bezier segment.\n","sig":null,"attributes":[{"value":"/ A cubic bezier segment.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18463,"byte_end":18490,"line_start":49,"line_end":49,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18354,"byte_end":18361,"line_start":44,"line_end":44,"column_start":10,"column_end":17},"name":"PathSeg","qualname":"::bezpath::PathSeg","value":"pub enum PathSeg {\n\n    /// A line segment.\n    Line(Line),\n\n    /// A quadratic bezier segment.\n    Quad(QuadBez),\n\n    /// A cubic bezier segment.\n    Cubic(CubicBez),\n}","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1214},{"krate":0,"index":1217}],"decl_id":null,"docs":" A segment of a Bézier path.\n","sig":null,"attributes":[{"value":"/ A segment of a Bézier path.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18194,"byte_end":18226,"line_start":41,"line_end":41,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1229},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18827,"byte_end":18843,"line_start":61,"line_end":61,"column_start":12,"column_end":28},"name":"LineIntersection","qualname":"::bezpath::LineIntersection","value":"LineIntersection { line_t, segment_t }","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231}],"decl_id":null,"docs":" An intersection of a [`Line`] and a [`PathSeg`].","sig":null,"attributes":[{"value":"/ An intersection of a [`Line`] and a [`PathSeg`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18515,"byte_end":18567,"line_start":53,"line_end":53,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18568,"byte_end":18571,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This can be generated with the [`PathSeg::intersect_line`] method.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18572,"byte_end":18642,"line_start":55,"line_end":55,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18643,"byte_end":18646,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`Line`]: struct.Line.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18647,"byte_end":18677,"line_start":57,"line_end":57,"column_start":1,"column_end":31}},{"value":"/ [`PathSeg`]: enum.PathSeg.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18678,"byte_end":18712,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"/ [`PathSeg::intersect_line`]: enum.PathSeg.html#method.intersect_line","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18713,"byte_end":18785,"line_start":59,"line_end":59,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18965,"byte_end":18971,"line_start":65,"line_end":65,"column_start":9,"column_end":15},"name":"line_t","qualname":"::bezpath::LineIntersection::line_t","value":"f64","parent":{"krate":0,"index":1229},"children":[],"decl_id":null,"docs":" The 'time' that the intersection occurs, on the line.","sig":null,"attributes":[{"value":"/ The 'time' that the intersection occurs, on the line.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18850,"byte_end":18907,"line_start":62,"line_end":62,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18912,"byte_end":18915,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This value is in the range 0..1.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18920,"byte_end":18956,"line_start":64,"line_end":64,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1231},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19198,"byte_end":19207,"line_start":71,"line_end":71,"column_start":9,"column_end":18},"name":"segment_t","qualname":"::bezpath::LineIntersection::segment_t","value":"f64","parent":{"krate":0,"index":1229},"children":[],"decl_id":null,"docs":" The 'time' that the intersection occurs, on the path segment.","sig":null,"attributes":[{"value":"/ The 'time' that the intersection occurs, on the path segment.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":18983,"byte_end":19048,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19053,"byte_end":19056,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This value is nominally in the range 0..1, although it may slightly exceed","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19061,"byte_end":19139,"line_start":69,"line_end":69,"column_start":5,"column_end":83}},{"value":"/ that range at the boundaries of segments.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19144,"byte_end":19189,"line_start":70,"line_end":70,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19270,"byte_end":19273,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<BezPath>::new","value":"pub fn new() -> BezPath","parent":null,"children":[],"decl_id":null,"docs":" Create a new path.\n","sig":null,"attributes":[{"value":"/ Create a new path.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19236,"byte_end":19258,"line_start":75,"line_end":75,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19760,"byte_end":19768,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<BezPath>::from_vec","value":"pub fn from_vec(Vec<PathEl>) -> BezPath","parent":null,"children":[],"decl_id":null,"docs":" Create a path from a vector of path elements.","sig":null,"attributes":[{"value":"/ Create a path from a vector of path elements.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19327,"byte_end":19376,"line_start":80,"line_end":80,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19381,"byte_end":19384,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ `BezPath` also implements `FromIterator<PathEl>`, so it works with `collect`:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19389,"byte_end":19470,"line_start":82,"line_end":82,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19475,"byte_end":19478,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19483,"byte_end":19490,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ // a very contrived example:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19495,"byte_end":19527,"line_start":85,"line_end":85,"column_start":5,"column_end":37}},{"value":"/ use kurbo::{BezPath, PathEl};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19532,"byte_end":19565,"line_start":86,"line_end":86,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19570,"byte_end":19573,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let path = BezPath::new();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19578,"byte_end":19608,"line_start":88,"line_end":88,"column_start":5,"column_end":35}},{"value":"/ let as_vec: Vec<PathEl> = path.into_iter().collect();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19613,"byte_end":19670,"line_start":89,"line_end":89,"column_start":5,"column_end":62}},{"value":"/ let back_to_path: BezPath = as_vec.into_iter().collect();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19675,"byte_end":19736,"line_start":90,"line_end":90,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19741,"byte_end":19748,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19886,"byte_end":19890,"line_start":97,"line_end":97,"column_start":12,"column_end":16},"name":"push","qualname":"<BezPath>::push","value":"pub fn push(&mut Self, PathEl)","parent":null,"children":[],"decl_id":null,"docs":" Push a generic path element onto the path.\n","sig":null,"attributes":[{"value":"/ Push a generic path element onto the path.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19828,"byte_end":19874,"line_start":96,"line_end":96,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":20006,"byte_end":20013,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"move_to","qualname":"<BezPath>::move_to","value":"pub fn move_to<P: Into<Point>>(&mut Self, P)","parent":null,"children":[],"decl_id":null,"docs":" Push a \"move to\" element onto the path.\n","sig":null,"attributes":[{"value":"/ Push a \"move to\" element onto the path.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19951,"byte_end":19994,"line_start":101,"line_end":101,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":20160,"byte_end":20167,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"line_to","qualname":"<BezPath>::line_to","value":"pub fn line_to<P: Into<Point>>(&mut Self, P)","parent":null,"children":[],"decl_id":null,"docs":" Push a \"line to\" element onto the path.\n","sig":null,"attributes":[{"value":"/ Push a \"line to\" element onto the path.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":20105,"byte_end":20148,"line_start":106,"line_end":106,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":20314,"byte_end":20321,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"quad_to","qualname":"<BezPath>::quad_to","value":"pub fn quad_to<P: Into<Point>>(&mut Self, P, P)","parent":null,"children":[],"decl_id":null,"docs":" Push a \"quad to\" element onto the path.\n","sig":null,"attributes":[{"value":"/ Push a \"quad to\" element onto the path.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":20259,"byte_end":20302,"line_start":111,"line_end":111,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":20489,"byte_end":20497,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"curve_to","qualname":"<BezPath>::curve_to","value":"pub fn curve_to<P: Into<Point>>(&mut Self, P, P, P)","parent":null,"children":[],"decl_id":null,"docs":" Push a \"curve to\" element onto the path.\n","sig":null,"attributes":[{"value":"/ Push a \"curve to\" element onto the path.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":20433,"byte_end":20477,"line_start":116,"line_end":116,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":20686,"byte_end":20696,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"close_path","qualname":"<BezPath>::close_path","value":"pub fn close_path(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Push a \"close path\" element onto the path.\n","sig":null,"attributes":[{"value":"/ Push a \"close path\" element onto the path.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":20628,"byte_end":20674,"line_start":121,"line_end":121,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":20797,"byte_end":20805,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"elements","qualname":"<BezPath>::elements","value":"pub fn elements(&Self) -> &[PathEl]","parent":null,"children":[],"decl_id":null,"docs":" Get the path elements.\n","sig":null,"attributes":[{"value":"/ Get the path elements.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":20759,"byte_end":20785,"line_start":126,"line_end":126,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":20916,"byte_end":20920,"line_start":132,"line_end":132,"column_start":12,"column_end":16},"name":"iter","qualname":"<BezPath>::iter","value":"pub fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the path's elements.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the path's elements.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":20855,"byte_end":20904,"line_start":131,"line_end":131,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":21056,"byte_end":21064,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"segments","qualname":"<BezPath>::segments","value":"pub fn segments(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the path segments.\n","sig":null,"attributes":[{"value":"/ Iterate over the path segments.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":21009,"byte_end":21044,"line_start":136,"line_end":136,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":28319,"byte_end":28326,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"flatten","qualname":"<BezPath>::flatten","value":"pub fn flatten<impl FnMut(PathEl): FnMut(PathEl) ->\n               ()>(&Self, f64, impl FnMut(PathEl))","parent":null,"children":[],"decl_id":null,"docs":" Flatten the path, invoking the callback repeatedly.","sig":null,"attributes":[{"value":"/ Flatten the path, invoking the callback repeatedly.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":21167,"byte_end":21222,"line_start":141,"line_end":141,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":21227,"byte_end":21230,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Flattening is the action of approximating a curve with a succession of line segments.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":21235,"byte_end":21324,"line_start":143,"line_end":143,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":21329,"byte_end":21332,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 120 30\" height=\"30mm\" width=\"120mm\">","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":21337,"byte_end":21430,"line_start":145,"line_end":145,"column_start":5,"column_end":98}},{"value":"/   <path d=\"M26.7 24.94l.82-11.15M44.46 5.1L33.8 7.34\" fill=\"none\" stroke=\"#55d400\" stroke-width=\".5\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":21435,"byte_end":21541,"line_start":146,"line_end":146,"column_start":5,"column_end":111}},{"value":"/   <path d=\"M26.7 24.94c.97-11.13 7.17-17.6 17.76-19.84M75.27 24.94l1.13-5.5 2.67-5.48 4-4.42L88 6.7l5.02-1.6\" fill=\"none\" stroke=\"#000\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":21546,"byte_end":21687,"line_start":147,"line_end":147,"column_start":5,"column_end":146}},{"value":"/   <path d=\"M77.57 19.37a1.1 1.1 0 0 1-1.08 1.08 1.1 1.1 0 0 1-1.1-1.08 1.1 1.1 0 0 1 1.08-1.1 1.1 1.1 0 0 1 1.1 1.1\" color=\"#000\" fill=\"none\" stroke=\"#030303\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":21692,"byte_end":21899,"line_start":148,"line_end":148,"column_start":5,"column_end":212}},{"value":"/   <path d=\"M77.57 19.37a1.1 1.1 0 0 1-1.08 1.08 1.1 1.1 0 0 1-1.1-1.08 1.1 1.1 0 0 1 1.08-1.1 1.1 1.1 0 0 1 1.1 1.1\" color=\"#000\" fill=\"#fff\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":21904,"byte_end":22051,"line_start":149,"line_end":149,"column_start":5,"column_end":152}},{"value":"/   <path d=\"M80.22 13.93a1.1 1.1 0 0 1-1.1 1.1 1.1 1.1 0 0 1-1.08-1.1 1.1 1.1 0 0 1 1.1-1.08 1.1 1.1 0 0 1 1.08 1.08\" color=\"#000\" fill=\"none\" stroke=\"#030303\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":22056,"byte_end":22263,"line_start":150,"line_end":150,"column_start":5,"column_end":212}},{"value":"/   <path d=\"M80.22 13.93a1.1 1.1 0 0 1-1.1 1.1 1.1 1.1 0 0 1-1.08-1.1 1.1 1.1 0 0 1 1.1-1.08 1.1 1.1 0 0 1 1.08 1.08\" color=\"#000\" fill=\"#fff\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":22268,"byte_end":22415,"line_start":151,"line_end":151,"column_start":5,"column_end":152}},{"value":"/   <path d=\"M84.08 9.55a1.1 1.1 0 0 1-1.08 1.1 1.1 1.1 0 0 1-1.1-1.1 1.1 1.1 0 0 1 1.1-1.1 1.1 1.1 0 0 1 1.08 1.1\" color=\"#000\" fill=\"none\" stroke=\"#030303\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":22420,"byte_end":22624,"line_start":152,"line_end":152,"column_start":5,"column_end":209}},{"value":"/   <path d=\"M84.08 9.55a1.1 1.1 0 0 1-1.08 1.1 1.1 1.1 0 0 1-1.1-1.1 1.1 1.1 0 0 1 1.1-1.1 1.1 1.1 0 0 1 1.08 1.1\" color=\"#000\" fill=\"#fff\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":22629,"byte_end":22773,"line_start":153,"line_end":153,"column_start":5,"column_end":149}},{"value":"/   <path d=\"M89.1 6.66a1.1 1.1 0 0 1-1.08 1.1 1.1 1.1 0 0 1-1.08-1.1 1.1 1.1 0 0 1 1.08-1.08 1.1 1.1 0 0 1 1.1 1.08\" color=\"#000\" fill=\"none\" stroke=\"#030303\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":22778,"byte_end":22984,"line_start":154,"line_end":154,"column_start":5,"column_end":211}},{"value":"/   <path d=\"M89.1 6.66a1.1 1.1 0 0 1-1.08 1.1 1.1 1.1 0 0 1-1.08-1.1 1.1 1.1 0 0 1 1.08-1.08 1.1 1.1 0 0 1 1.1 1.08\" color=\"#000\" fill=\"#fff\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":22989,"byte_end":23135,"line_start":155,"line_end":155,"column_start":5,"column_end":151}},{"value":"/   <path d=\"M94.4 5a1.1 1.1 0 0 1-1.1 1.1A1.1 1.1 0 0 1 92.23 5a1.1 1.1 0 0 1 1.08-1.08A1.1 1.1 0 0 1 94.4 5\" color=\"#000\" fill=\"none\" stroke=\"#030303\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":23140,"byte_end":23339,"line_start":156,"line_end":156,"column_start":5,"column_end":204}},{"value":"/   <path d=\"M94.4 5a1.1 1.1 0 0 1-1.1 1.1A1.1 1.1 0 0 1 92.23 5a1.1 1.1 0 0 1 1.08-1.08A1.1 1.1 0 0 1 94.4 5\" color=\"#000\" fill=\"#fff\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":23344,"byte_end":23483,"line_start":157,"line_end":157,"column_start":5,"column_end":144}},{"value":"/   <path d=\"M76.44 25.13a1.1 1.1 0 0 1-1.1 1.1 1.1 1.1 0 0 1-1.08-1.1 1.1 1.1 0 0 1 1.1-1.1 1.1 1.1 0 0 1 1.08 1.1\" color=\"#000\" fill=\"none\" stroke=\"#030303\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":23488,"byte_end":23693,"line_start":158,"line_end":158,"column_start":5,"column_end":210}},{"value":"/   <path d=\"M76.44 25.13a1.1 1.1 0 0 1-1.1 1.1 1.1 1.1 0 0 1-1.08-1.1 1.1 1.1 0 0 1 1.1-1.1 1.1 1.1 0 0 1 1.08 1.1\" color=\"#000\" fill=\"#fff\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":23698,"byte_end":23843,"line_start":159,"line_end":159,"column_start":5,"column_end":150}},{"value":"/   <path d=\"M27.78 24.9a1.1 1.1 0 0 1-1.08 1.08 1.1 1.1 0 0 1-1.1-1.08 1.1 1.1 0 0 1 1.1-1.1 1.1 1.1 0 0 1 1.08 1.1\" color=\"#000\" fill=\"none\" stroke=\"#030303\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":23848,"byte_end":24054,"line_start":160,"line_end":160,"column_start":5,"column_end":211}},{"value":"/   <path d=\"M27.78 24.9a1.1 1.1 0 0 1-1.08 1.08 1.1 1.1 0 0 1-1.1-1.08 1.1 1.1 0 0 1 1.1-1.1 1.1 1.1 0 0 1 1.08 1.1\" color=\"#000\" fill=\"#fff\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":24059,"byte_end":24205,"line_start":161,"line_end":161,"column_start":5,"column_end":151}},{"value":"/   <path d=\"M45.4 5.14a1.1 1.1 0 0 1-1.08 1.1 1.1 1.1 0 0 1-1.1-1.1 1.1 1.1 0 0 1 1.1-1.08 1.1 1.1 0 0 1 1.1 1.08\" color=\"#000\" fill=\"none\" stroke=\"#030303\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":24210,"byte_end":24414,"line_start":162,"line_end":162,"column_start":5,"column_end":209}},{"value":"/   <path d=\"M45.4 5.14a1.1 1.1 0 0 1-1.08 1.1 1.1 1.1 0 0 1-1.1-1.1 1.1 1.1 0 0 1 1.1-1.08 1.1 1.1 0 0 1 1.1 1.08\" color=\"#000\" fill=\"#fff\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":24419,"byte_end":24563,"line_start":163,"line_end":163,"column_start":5,"column_end":149}},{"value":"/   <path d=\"M28.67 13.8a1.1 1.1 0 0 1-1.1 1.08 1.1 1.1 0 0 1-1.08-1.08 1.1 1.1 0 0 1 1.08-1.1 1.1 1.1 0 0 1 1.1 1.1\" color=\"#000\" fill=\"none\" stroke=\"#030303\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":24568,"byte_end":24774,"line_start":164,"line_end":164,"column_start":5,"column_end":211}},{"value":"/   <path d=\"M28.67 13.8a1.1 1.1 0 0 1-1.1 1.08 1.1 1.1 0 0 1-1.08-1.08 1.1 1.1 0 0 1 1.08-1.1 1.1 1.1 0 0 1 1.1 1.1\" color=\"#000\" fill=\"#fff\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":24779,"byte_end":24925,"line_start":165,"line_end":165,"column_start":5,"column_end":151}},{"value":"/   <path d=\"M35 7.32a1.1 1.1 0 0 1-1.1 1.1 1.1 1.1 0 0 1-1.08-1.1 1.1 1.1 0 0 1 1.1-1.1A1.1 1.1 0 0 1 35 7.33\" color=\"#000\" fill=\"none\" stroke=\"#030303\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":24930,"byte_end":25130,"line_start":166,"line_end":166,"column_start":5,"column_end":205}},{"value":"/   <path d=\"M35 7.32a1.1 1.1 0 0 1-1.1 1.1 1.1 1.1 0 0 1-1.08-1.1 1.1 1.1 0 0 1 1.1-1.1A1.1 1.1 0 0 1 35 7.33\" color=\"#000\" fill=\"#fff\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":25135,"byte_end":25275,"line_start":167,"line_end":167,"column_start":5,"column_end":145}},{"value":"/   <text style=\"line-height:6.61458302px\" x=\"35.74\" y=\"284.49\" font-size=\"5.29\" font-family=\"Sans\" letter-spacing=\"0\" word-spacing=\"0\" fill=\"#b3b3b3\" stroke-width=\".26\" transform=\"translate(19.595 -267)\">","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":25280,"byte_end":25487,"line_start":168,"line_end":168,"column_start":5,"column_end":212}},{"value":"/     <tspan x=\"35.74\" y=\"284.49\" font-size=\"10.58\">→</tspan>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":25492,"byte_end":25557,"line_start":169,"line_end":169,"column_start":5,"column_end":68}},{"value":"/   </text>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":25562,"byte_end":25575,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/ </svg>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":25580,"byte_end":25590,"line_start":171,"line_end":171,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":25595,"byte_end":25598,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The tolerance value controls the maximum distance between the curved input","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":25603,"byte_end":25681,"line_start":173,"line_end":173,"column_start":5,"column_end":83}},{"value":"/ segments and their polyline approximations. (In technical terms, this is the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":25686,"byte_end":25766,"line_start":174,"line_end":174,"column_start":5,"column_end":85}},{"value":"/ Hausdorff distance). The algorithm attempts to bound this distance between","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":25771,"byte_end":25849,"line_start":175,"line_end":175,"column_start":5,"column_end":83}},{"value":"/ by `tolerance` but this is not absolutely guaranteed. The appropriate value","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":25854,"byte_end":25933,"line_start":176,"line_end":176,"column_start":5,"column_end":84}},{"value":"/ depends on the use, but for antialiasted rendering, a value of 0.25 has been","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":25938,"byte_end":26018,"line_start":177,"line_end":177,"column_start":5,"column_end":85}},{"value":"/ determined to give good results. The number of segments tends to scale as the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":26023,"byte_end":26104,"line_start":178,"line_end":178,"column_start":5,"column_end":86}},{"value":"/ inverse square root of tolerance.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":26109,"byte_end":26146,"line_start":179,"line_end":179,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":26151,"byte_end":26154,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ <svg viewBox=\"0 0 47.5 13.2\" height=\"100\" width=\"350\" xmlns=\"http://www.w3.org/2000/svg\">","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":26159,"byte_end":26252,"line_start":181,"line_end":181,"column_start":5,"column_end":98}},{"value":"/   <path d=\"M-2.44 9.53c16.27-8.5 39.68-7.93 52.13 1.9\" fill=\"none\" stroke=\"#dde9af\" stroke-width=\"4.6\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":26257,"byte_end":26365,"line_start":182,"line_end":182,"column_start":5,"column_end":113}},{"value":"/   <path d=\"M-1.97 9.3C14.28 1.03 37.36 1.7 49.7 11.4\" fill=\"none\" stroke=\"#00d400\" stroke-width=\".57\" stroke-linecap=\"round\" stroke-dasharray=\"4.6, 2.291434\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":26370,"byte_end":26533,"line_start":183,"line_end":183,"column_start":5,"column_end":168}},{"value":"/   <path d=\"M-1.94 10.46L6.2 6.08l28.32-1.4 15.17 6.74\" fill=\"none\" stroke=\"#000\" stroke-width=\".6\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":26538,"byte_end":26642,"line_start":184,"line_end":184,"column_start":5,"column_end":109}},{"value":"/   <path d=\"M6.83 6.57a.9.9 0 0 1-1.25.15.9.9 0 0 1-.15-1.25.9.9 0 0 1 1.25-.15.9.9 0 0 1 .15 1.25\" color=\"#000\" stroke=\"#000\" stroke-width=\".57\" stroke-linecap=\"round\" stroke-opacity=\".5\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":26647,"byte_end":26840,"line_start":185,"line_end":185,"column_start":5,"column_end":198}},{"value":"/   <path d=\"M35.35 5.3a.9.9 0 0 1-1.25.15.9.9 0 0 1-.15-1.25.9.9 0 0 1 1.25-.15.9.9 0 0 1 .15 1.24\" color=\"#000\" stroke=\"#000\" stroke-width=\".6\" stroke-opacity=\".5\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":26845,"byte_end":27014,"line_start":186,"line_end":186,"column_start":5,"column_end":174}},{"value":"/   <g fill=\"none\" stroke=\"#ff7f2a\" stroke-width=\".26\">","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":27019,"byte_end":27076,"line_start":187,"line_end":187,"column_start":5,"column_end":62}},{"value":"/     <path d=\"M20.4 3.8l.1 1.83M19.9 4.28l.48-.56.57.52M21.02 5.18l-.5.56-.6-.53\" stroke-width=\".2978872\"/>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":27081,"byte_end":27191,"line_start":188,"line_end":188,"column_start":5,"column_end":115}},{"value":"/   </g>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":27196,"byte_end":27206,"line_start":189,"line_end":189,"column_start":5,"column_end":15}},{"value":"/ </svg>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":27211,"byte_end":27221,"line_start":190,"line_end":190,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":27226,"byte_end":27229,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The callback will be called in order with each element of the generated","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":27234,"byte_end":27309,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ path. Because the result is made of polylines, these will be straight-line","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":27314,"byte_end":27392,"line_start":193,"line_end":193,"column_start":5,"column_end":83}},{"value":"/ path elements only, no curves.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":27397,"byte_end":27431,"line_start":194,"line_end":194,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":27436,"byte_end":27439,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This algorithm is based on the blog post [Flattening quadratic Béziers]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":27444,"byte_end":27520,"line_start":196,"line_end":196,"column_start":5,"column_end":80}},{"value":"/ but with some refinements. For one, there is a more careful approximation","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":27525,"byte_end":27602,"line_start":197,"line_end":197,"column_start":5,"column_end":82}},{"value":"/ at cusps. For two, the algorithm is extended to work with cubic Béziers","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":27607,"byte_end":27683,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ as well, by first subdividing into quadratics and then computing the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":27688,"byte_end":27760,"line_start":199,"line_end":199,"column_start":5,"column_end":77}},{"value":"/ subdivision of each quadratic. However, as a clever trick, these quadratics","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":27765,"byte_end":27844,"line_start":200,"line_end":200,"column_start":5,"column_end":84}},{"value":"/ are subdivided fractionally, and their endpoints are not included.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":27849,"byte_end":27919,"line_start":201,"line_end":201,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":27924,"byte_end":27927,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ TODO: write a paper explaining this in more detail.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":27932,"byte_end":27987,"line_start":203,"line_end":203,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":27992,"byte_end":27995,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Note: the [`flatten`](fn.flatten.html) function provides the same","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":28000,"byte_end":28069,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ functionality but works with slices and other [`PathEl`] iterators.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":28074,"byte_end":28145,"line_start":206,"line_end":206,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":28150,"byte_end":28153,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ [Flattening quadratic Béziers]: https://raphlinus.github.io/graphics/curves/2019/12/23/flatten-quadbez.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":28158,"byte_end":28270,"line_start":208,"line_end":208,"column_start":5,"column_end":116}},{"value":"/ [`PathEl`]: enum.PathEl.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":28275,"byte_end":28307,"line_start":209,"line_end":209,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":29260,"byte_end":29267,"line_start":236,"line_end":236,"column_start":12,"column_end":19},"name":"get_seg","qualname":"<BezPath>::get_seg","value":"pub fn get_seg(&Self, usize) -> Option<PathSeg>","parent":null,"children":[],"decl_id":null,"docs":" Get the segment at the given element index.","sig":null,"attributes":[{"value":"/ Get the segment at the given element index.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":29068,"byte_end":29115,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":29120,"byte_end":29123,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The element index counts [`PathEl`](enum.PathEl.html) elements, so","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":29128,"byte_end":29198,"line_start":234,"line_end":234,"column_start":5,"column_end":75}},{"value":"/ for example includes an initial `Moveto`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":29203,"byte_end":29248,"line_start":235,"line_end":235,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":30234,"byte_end":30242,"line_start":260,"line_end":260,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BezPath>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path contains no segments.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the path contains no segments.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":30170,"byte_end":30222,"line_start":259,"line_end":259,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":30487,"byte_end":30499,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"apply_affine","qualname":"<BezPath>::apply_affine","value":"pub fn apply_affine(&mut Self, Affine)","parent":null,"children":[],"decl_id":null,"docs":" Apply an affine transform to the path.\n","sig":null,"attributes":[{"value":"/ Apply an affine transform to the path.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":30433,"byte_end":30475,"line_start":267,"line_end":267,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":31127,"byte_end":31134,"line_start":285,"line_end":285,"column_start":12,"column_end":19},"name":"nearest","qualname":"<BezPath>::nearest","value":"pub fn nearest(&Self, Point, f64) -> (usize, f64, f64)","parent":null,"children":[],"decl_id":null,"docs":" Find the nearest point.","sig":null,"attributes":[{"value":"/ Find the nearest point.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":30622,"byte_end":30649,"line_start":274,"line_end":274,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":30654,"byte_end":30657,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Panics if path is empty or invalid.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":30662,"byte_end":30701,"line_start":276,"line_end":276,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":30706,"byte_end":30709,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that the returned index counts segments, not elements. Thus, the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":30714,"byte_end":30787,"line_start":278,"line_end":278,"column_start":5,"column_end":78}},{"value":"/ initial `Moveto` is not counted. For a simple path consisting of a `Moveto`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":30792,"byte_end":30871,"line_start":279,"line_end":279,"column_start":5,"column_end":84}},{"value":"/ followed by `Lineto/Quadto/Cubicto` elements, the element index is the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":30876,"byte_end":30950,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ segment index + 1.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":30955,"byte_end":30977,"line_start":281,"line_end":281,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":30982,"byte_end":30985,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Returns the index of the segment, the parameter within that segment, and","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":30990,"byte_end":31066,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ the square of the distance to the point.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":31071,"byte_end":31115,"line_start":284,"line_end":284,"column_start":5,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":32837,"byte_end":32844,"line_start":340,"line_end":340,"column_start":8,"column_end":15},"name":"flatten","qualname":"::bezpath::flatten","value":"pub fn flatten<impl IntoIterator<Item = PathEl>: IntoIterator<Item = PathEl>,\n               impl FnMut(PathEl): FnMut(PathEl) ->\n               ()>(impl IntoIterator<Item = PathEl>, f64, impl FnMut(PathEl))","parent":null,"children":[],"decl_id":null,"docs":" Flatten the path, invoking the callback repeatedly.","sig":null,"attributes":[{"value":"/ Flatten the path, invoking the callback repeatedly.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":32557,"byte_end":32612,"line_start":335,"line_end":335,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":32613,"byte_end":32616,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ See [`BezPath::flatten`](struct.BezPath.html#method.flatten) for more discussion.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":32617,"byte_end":32702,"line_start":337,"line_end":337,"column_start":1,"column_end":86}},{"value":"/ This signature is a bit more general, allowing flattening of `&[PathEl]` slices","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":32703,"byte_end":32786,"line_start":338,"line_end":338,"column_start":1,"column_end":84}},{"value":"/ and other iterators yielding `PathEl`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":32787,"byte_end":32829,"line_start":339,"line_end":339,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":42133,"byte_end":42140,"line_start":620,"line_end":620,"column_start":12,"column_end":19},"name":"reverse","qualname":"<PathSeg>::reverse","value":"pub fn reverse(&Self) -> PathSeg","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `PathSeg` describing the same path as `self`, but with\n the points reversed.\n","sig":null,"attributes":[{"value":"/ Returns a new `PathSeg` describing the same path as `self`, but with","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":42020,"byte_end":42092,"line_start":618,"line_end":618,"column_start":5,"column_end":77}},{"value":"/ the points reversed.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":42097,"byte_end":42121,"line_start":619,"line_end":619,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":42507,"byte_end":42515,"line_start":629,"line_end":629,"column_start":12,"column_end":20},"name":"to_cubic","qualname":"<PathSeg>::to_cubic","value":"pub fn to_cubic(&Self) -> CubicBez","parent":null,"children":[],"decl_id":null,"docs":" Convert this segment to a cubic bezier.\n","sig":null,"attributes":[{"value":"/ Convert this segment to a cubic bezier.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":42452,"byte_end":42495,"line_start":628,"line_end":628,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":47040,"byte_end":47054,"line_start":759,"line_end":759,"column_start":12,"column_end":26},"name":"intersect_line","qualname":"<PathSeg>::intersect_line","value":"pub fn intersect_line(&Self, Line) -> ArrayVec<[LineIntersection; ]>","parent":null,"children":[],"decl_id":null,"docs":" Compute intersections against a line.","sig":null,"attributes":[{"value":"/ Compute intersections against a line.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":45917,"byte_end":45958,"line_start":733,"line_end":733,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":45963,"byte_end":45966,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ Returns a vector of the intersections. For each intersection, the `t` value of the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":45971,"byte_end":46057,"line_start":735,"line_end":735,"column_start":5,"column_end":91}},{"value":"/ segment and line are given.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46062,"byte_end":46093,"line_start":736,"line_end":736,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46098,"byte_end":46101,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ Note: This test is designed to be inclusive of points near the endpoints of","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46106,"byte_end":46185,"line_start":738,"line_end":738,"column_start":5,"column_end":84}},{"value":"/ the segment. This is so that testing a line against multiple contiguous segments","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46190,"byte_end":46274,"line_start":739,"line_end":739,"column_start":5,"column_end":89}},{"value":"/ of a path will be guaranteed to catch at least one of them. In such cases, use","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46279,"byte_end":46361,"line_start":740,"line_end":740,"column_start":5,"column_end":87}},{"value":"/ higher level logic to coalesce the hits (the `t` value may be slightly outside","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46366,"byte_end":46448,"line_start":741,"line_end":741,"column_start":5,"column_end":87}},{"value":"/ the range of 0..1).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46453,"byte_end":46476,"line_start":742,"line_end":742,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46481,"byte_end":46484,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46489,"byte_end":46503,"line_start":744,"line_end":744,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46508,"byte_end":46511,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46516,"byte_end":46523,"line_start":746,"line_end":746,"column_start":5,"column_end":12}},{"value":"/ # use kurbo::*;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46528,"byte_end":46547,"line_start":747,"line_end":747,"column_start":5,"column_end":24}},{"value":"/ let seg = PathSeg::Line(Line::new((0.0, 0.0), (2.0, 0.0)));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46552,"byte_end":46615,"line_start":748,"line_end":748,"column_start":5,"column_end":68}},{"value":"/ let line = Line::new((1.0, 2.0), (1.0, -2.0));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46620,"byte_end":46670,"line_start":749,"line_end":749,"column_start":5,"column_end":55}},{"value":"/ let intersection = seg.intersect_line(line);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46675,"byte_end":46723,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(intersection.len(), 1);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46728,"byte_end":46766,"line_start":751,"line_end":751,"column_start":5,"column_end":43}},{"value":"/ let intersection = intersection[0];","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46771,"byte_end":46810,"line_start":752,"line_end":752,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(intersection.segment_t, 0.5);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46815,"byte_end":46859,"line_start":753,"line_end":753,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(intersection.line_t, 0.5);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46864,"byte_end":46905,"line_start":754,"line_end":754,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46910,"byte_end":46913,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ let point = seg.eval(intersection.segment_t);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46918,"byte_end":46967,"line_start":756,"line_end":756,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(point, Point::new(1.0, 0.0));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":46972,"byte_end":47016,"line_start":757,"line_end":757,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":47021,"byte_end":47028,"line_start":758,"line_end":758,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1237},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":55627,"byte_end":55633,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Circle","qualname":"::circle::Circle","value":"Circle { center, radius }","parent":null,"children":[{"krate":0,"index":1238},{"krate":0,"index":1239}],"decl_id":null,"docs":" A circle.\n","sig":null,"attributes":[{"value":"/ A circle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":55475,"byte_end":55488,"line_start":11,"line_end":11,"column_start":1,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":1238},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":55664,"byte_end":55670,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"name":"center","qualname":"::circle::Circle::center","value":"point::Point","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":" The center.\n","sig":null,"attributes":[{"value":"/ The center.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":55640,"byte_end":55655,"line_start":15,"line_end":15,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":55707,"byte_end":55713,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"name":"radius","qualname":"::circle::Circle::radius","value":"f64","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":" The radius.\n","sig":null,"attributes":[{"value":"/ The radius.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":55683,"byte_end":55698,"line_start":17,"line_end":17,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":55807,"byte_end":55810,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<Circle>::new","value":"pub fn new<impl Into<Point>: Into<Point>>(impl Into<Point>, f64) -> Circle","parent":null,"children":[],"decl_id":null,"docs":" A new circle from center and radius.\n","sig":null,"attributes":[{"value":"/ A new circle from center and radius.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":55741,"byte_end":55781,"line_start":22,"line_end":22,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":55786,"byte_end":55795,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":56095,"byte_end":56102,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"segment","qualname":"<Circle>::segment","value":"pub fn segment(Self, f64, f64, f64) -> CircleSegment","parent":null,"children":[],"decl_id":null,"docs":" Create a [`CircleSegment`] by cutting out parts of this circle.","sig":null,"attributes":[{"value":"/ Create a [`CircleSegment`] by cutting out parts of this circle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":55955,"byte_end":56022,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":56027,"byte_end":56030,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`CircleSegment`]: struct.CircleSegment.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":56035,"byte_end":56083,"line_start":33,"line_end":33,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":56978,"byte_end":56992,"line_start":77,"line_end":77,"column_start":12,"column_end":26},"name":"CirclePathIter","qualname":"::circle::CirclePathIter","value":"CirclePathIter {  }","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":59768,"byte_end":59781,"line_start":176,"line_end":176,"column_start":12,"column_end":25},"name":"CircleSegment","qualname":"::circle::CircleSegment","value":"CircleSegment { center, outer_radius, inner_radius, start_angle, sweep_angle }","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"decl_id":null,"docs":" A segment of a circle.","sig":null,"attributes":[{"value":"/ A segment of a circle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":59656,"byte_end":59682,"line_start":173,"line_end":173,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":59683,"byte_end":59686,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ If `inner_radius > 0`, then the shape will be a doughnut segment.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":59687,"byte_end":59756,"line_start":175,"line_end":175,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":59812,"byte_end":59818,"line_start":178,"line_end":178,"column_start":9,"column_end":15},"name":"center","qualname":"::circle::CircleSegment::center","value":"point::Point","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":" The center.\n","sig":null,"attributes":[{"value":"/ The center.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":59788,"byte_end":59803,"line_start":177,"line_end":177,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":59861,"byte_end":59873,"line_start":180,"line_end":180,"column_start":9,"column_end":21},"name":"outer_radius","qualname":"::circle::CircleSegment::outer_radius","value":"f64","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":" The outer radius.\n","sig":null,"attributes":[{"value":"/ The outer radius.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":59831,"byte_end":59852,"line_start":179,"line_end":179,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":59914,"byte_end":59926,"line_start":182,"line_end":182,"column_start":9,"column_end":21},"name":"inner_radius","qualname":"::circle::CircleSegment::inner_radius","value":"f64","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":" The inner radius.\n","sig":null,"attributes":[{"value":"/ The inner radius.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":59884,"byte_end":59905,"line_start":181,"line_end":181,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":60002,"byte_end":60013,"line_start":184,"line_end":184,"column_start":9,"column_end":20},"name":"start_angle","qualname":"::circle::CircleSegment::start_angle","value":"f64","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":" The angle to start drawing the segment (in radians).\n","sig":null,"attributes":[{"value":"/ The angle to start drawing the segment (in radians).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":59937,"byte_end":59993,"line_start":183,"line_end":183,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":60080,"byte_end":60091,"line_start":186,"line_end":186,"column_start":9,"column_end":20},"name":"sweep_angle","qualname":"::circle::CircleSegment::sweep_angle","value":"f64","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":" The arc length of the segment (in radians).\n","sig":null,"attributes":[{"value":"/ The arc length of the segment (in radians).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":60024,"byte_end":60071,"line_start":185,"line_end":185,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":60196,"byte_end":60199,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"new","qualname":"<CircleSegment>::new","value":"pub fn new<impl Into<Point>: Into<Point>>(impl Into<Point>, f64, f64, f64,\n                                          f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `CircleSegment` out of its constituent parts.\n","sig":null,"attributes":[{"value":"/ Create a `CircleSegment` out of its constituent parts.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":60126,"byte_end":60184,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"common","qualname":"::common","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335}],"decl_id":null,"docs":" Common mathematical operations\n","sig":null,"attributes":[{"value":"/ Common mathematical operations","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65006,"byte_end":65040,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65042,"byte_end":65065,"line_start":3,"line_end":3,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65151,"byte_end":65159,"line_start":8,"line_end":8,"column_start":11,"column_end":19},"name":"FloatExt","qualname":"::common::FloatExt","value":"FloatExt<T>","parent":null,"children":[{"krate":0,"index":321}],"decl_id":null,"docs":" Adds convenience methods to `f32` and `f64`.\n","sig":null,"attributes":[{"value":"/ Adds convenience methods to `f32` and `f64`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65092,"byte_end":65140,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65707,"byte_end":65713,"line_start":29,"line_end":29,"column_start":8,"column_end":14},"name":"expand","qualname":"::common::FloatExt::expand","value":"pub fn expand(&Self) -> T","parent":{"krate":0,"index":319},"children":[],"decl_id":null,"docs":" Rounds to the nearest integer away from zero,\n unless the provided value is already an integer.","sig":null,"attributes":[{"value":"/ Rounds to the nearest integer away from zero,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65169,"byte_end":65218,"line_start":9,"line_end":9,"column_start":5,"column_end":54}},{"value":"/ unless the provided value is already an integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65223,"byte_end":65275,"line_start":10,"line_end":10,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65280,"byte_end":65283,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ It is to `ceil` what `trunc` is to `floor`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65288,"byte_end":65335,"line_start":12,"line_end":12,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65340,"byte_end":65343,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65348,"byte_end":65362,"line_start":14,"line_end":14,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65367,"byte_end":65370,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65375,"byte_end":65382,"line_start":16,"line_end":16,"column_start":5,"column_end":12}},{"value":"/ use kurbo::common::FloatExt;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65387,"byte_end":65419,"line_start":17,"line_end":17,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65424,"byte_end":65427,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ let f = 3.7_f64;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65432,"byte_end":65452,"line_start":19,"line_end":19,"column_start":5,"column_end":25}},{"value":"/ let g = 3.0_f64;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65457,"byte_end":65477,"line_start":20,"line_end":20,"column_start":5,"column_end":25}},{"value":"/ let h = -3.7_f64;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65482,"byte_end":65503,"line_start":21,"line_end":21,"column_start":5,"column_end":26}},{"value":"/ let i = -5.1_f32;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65508,"byte_end":65529,"line_start":22,"line_end":22,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65534,"byte_end":65537,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.expand(), 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65542,"byte_end":65574,"line_start":24,"line_end":24,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(g.expand(), 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65579,"byte_end":65611,"line_start":25,"line_end":25,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(h.expand(), -4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65616,"byte_end":65649,"line_start":26,"line_end":26,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(i.expand(), -6.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65654,"byte_end":65687,"line_start":27,"line_end":27,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65692,"byte_end":65699,"line_start":28,"line_end":28,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":66310,"byte_end":66321,"line_start":54,"line_end":54,"column_start":8,"column_end":19},"name":"solve_cubic","qualname":"::common::solve_cubic","value":"pub fn solve_cubic(f64, f64, f64, f64) -> ArrayVec<[f64; ]>","parent":null,"children":[],"decl_id":null,"docs":" Find real roots of cubic equation.","sig":null,"attributes":[{"value":"/ Find real roots of cubic equation.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":65978,"byte_end":66016,"line_start":46,"line_end":46,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":66017,"byte_end":66020,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The implementation is not (yet) fully robust, but it does handle the case","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":66021,"byte_end":66098,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ where `c3` is zero (in that case, solving the quadratic equation).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":66099,"byte_end":66169,"line_start":49,"line_end":49,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":66170,"byte_end":66173,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ See: <http://mathworld.wolfram.com/CubicFormula.html>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":66174,"byte_end":66231,"line_start":51,"line_end":51,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":66232,"byte_end":66235,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Returns values of x for which c0 + c1 x + c2 x² + c3 x³ = 0.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":66236,"byte_end":66302,"line_start":53,"line_end":53,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":68246,"byte_end":68261,"line_start":105,"line_end":105,"column_start":8,"column_end":23},"name":"solve_quadratic","qualname":"::common::solve_quadratic","value":"pub fn solve_quadratic(f64, f64, f64) -> ArrayVec<[f64; ]>","parent":null,"children":[],"decl_id":null,"docs":" Find real roots of quadratic equation.","sig":null,"attributes":[{"value":"/ Find real roots of quadratic equation.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":67789,"byte_end":67831,"line_start":96,"line_end":96,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":67832,"byte_end":67835,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Returns values of x for which c0 + c1 x + c2 x² = 0.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":67836,"byte_end":67893,"line_start":98,"line_end":98,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":67894,"byte_end":67897,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ This function tries to be quite numerically robust. If the equation","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":67898,"byte_end":67969,"line_start":100,"line_end":100,"column_start":1,"column_end":72}},{"value":"/ is nearly linear, it will return the root ignoring the quadratic term;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":67970,"byte_end":68044,"line_start":101,"line_end":101,"column_start":1,"column_end":75}},{"value":"/ the other root might be out of representable range. In the degenerate","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":68045,"byte_end":68118,"line_start":102,"line_end":102,"column_start":1,"column_end":74}},{"value":"/ case where all coefficients are zero, so that all values of x satisfy","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":68119,"byte_end":68192,"line_start":103,"line_end":103,"column_start":1,"column_end":74}},{"value":"/ the equation, a single `0.0` is returned.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":68193,"byte_end":68238,"line_start":104,"line_end":104,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":69758,"byte_end":69781,"line_start":154,"line_end":154,"column_start":11,"column_end":34},"name":"GAUSS_LEGENDRE_COEFFS_3","qualname":"::common::GAUSS_LEGENDRE_COEFFS_3","value":"&[(f64, f64)]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":69955,"byte_end":69978,"line_start":160,"line_end":160,"column_start":11,"column_end":34},"name":"GAUSS_LEGENDRE_COEFFS_5","qualname":"::common::GAUSS_LEGENDRE_COEFFS_5","value":"&[(f64, f64)]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":70245,"byte_end":70268,"line_start":168,"line_end":168,"column_start":11,"column_end":34},"name":"GAUSS_LEGENDRE_COEFFS_7","qualname":"::common::GAUSS_LEGENDRE_COEFFS_7","value":"&[(f64, f64)]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":70628,"byte_end":70651,"line_start":178,"line_end":178,"column_start":11,"column_end":34},"name":"GAUSS_LEGENDRE_COEFFS_9","qualname":"::common::GAUSS_LEGENDRE_COEFFS_9","value":"&[(f64, f64)]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":71104,"byte_end":71128,"line_start":190,"line_end":190,"column_start":11,"column_end":35},"name":"GAUSS_LEGENDRE_COEFFS_11","qualname":"::common::GAUSS_LEGENDRE_COEFFS_11","value":"&[(f64, f64)]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\common.rs","byte_start":71674,"byte_end":71698,"line_start":204,"line_end":204,"column_start":11,"column_end":35},"name":"GAUSS_LEGENDRE_COEFFS_24","qualname":"::common::GAUSS_LEGENDRE_COEFFS_24","value":"&[(f64, f64)]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1251},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":74673,"byte_end":74681,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"CubicBez","qualname":"::cubicbez::CubicBez","value":"CubicBez { p0, p1, p2, p3 }","parent":null,"children":[{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255}],"decl_id":null,"docs":" A single cubic Bézier segment.\n","sig":null,"attributes":[{"value":"/ A single cubic Bézier segment.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":74485,"byte_end":74520,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":74639,"byte_end":74661,"line_start":18,"line_end":18,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1252},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":74692,"byte_end":74694,"line_start":20,"line_end":20,"column_start":9,"column_end":11},"name":"p0","qualname":"::cubicbez::CubicBez::p0","value":"point::Point","parent":{"krate":0,"index":1251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1253},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":74711,"byte_end":74713,"line_start":21,"line_end":21,"column_start":9,"column_end":11},"name":"p1","qualname":"::cubicbez::CubicBez::p1","value":"point::Point","parent":{"krate":0,"index":1251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1254},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":74730,"byte_end":74732,"line_start":22,"line_end":22,"column_start":9,"column_end":11},"name":"p2","qualname":"::cubicbez::CubicBez::p2","value":"point::Point","parent":{"krate":0,"index":1251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1255},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":74749,"byte_end":74751,"line_start":23,"line_end":23,"column_start":9,"column_end":11},"name":"p3","qualname":"::cubicbez::CubicBez::p3","value":"point::Point","parent":{"krate":0,"index":1251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":74972,"byte_end":74975,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<CubicBez>::new","value":"pub fn new<P: Into<Point>>(P, P, P, P) -> CubicBez","parent":null,"children":[],"decl_id":null,"docs":" Create a new cubic Bézier segment.\n","sig":null,"attributes":[{"value":"/ Create a new cubic Bézier segment.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":74907,"byte_end":74946,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":74951,"byte_end":74960,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":75606,"byte_end":75614,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"to_quads","qualname":"<CubicBez>::to_quads","value":"pub fn to_quads(&Self, f64) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Convert to quadratic Béziers.","sig":null,"attributes":[{"value":"/ Convert to quadratic Béziers.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":75182,"byte_end":75216,"line_start":45,"line_end":45,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":75221,"byte_end":75224,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The iterator returns the start and end parameter in the cubic of each quadratic","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":75229,"byte_end":75312,"line_start":47,"line_end":47,"column_start":5,"column_end":88}},{"value":"/ segment, along with the quadratic.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":75317,"byte_end":75355,"line_start":48,"line_end":48,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":75360,"byte_end":75363,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that the resulting quadratic Béziers are not in general G1 continuous;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":75368,"byte_end":75448,"line_start":50,"line_end":50,"column_start":5,"column_end":84}},{"value":"/ they are optimized for minimizing distance error.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":75453,"byte_end":75506,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":75511,"byte_end":75514,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This iterator will always produce at least one `QuadBez`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":75519,"byte_end":75580,"line_start":53,"line_end":53,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":75585,"byte_end":75594,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":90042,"byte_end":90049,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"Ellipse","qualname":"::ellipse::Ellipse","value":"Ellipse {  }","parent":null,"children":[{"krate":0,"index":1266}],"decl_id":null,"docs":" An ellipse.\n","sig":null,"attributes":[{"value":"/ An ellipse.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":89888,"byte_end":89903,"line_start":11,"line_end":11,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":90668,"byte_end":90671,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<Ellipse>::new","value":"pub fn new<impl Into<Point>: Into<Point>,\n           impl Into<Vec2>: Into<Vec2>>(impl Into<Point>, impl Into<Vec2>,\n                                        f64) -> Ellipse","parent":null,"children":[],"decl_id":null,"docs":" A new ellipse from center, radii, and x_rotation.","sig":null,"attributes":[{"value":"/ A new ellipse from center, radii, and x_rotation.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":90341,"byte_end":90394,"line_start":22,"line_end":22,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":90399,"byte_end":90402,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The returned ellipse will be the result of taking a circle, stretching it by the `radii`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":90407,"byte_end":90499,"line_start":24,"line_end":24,"column_start":5,"column_end":97}},{"value":"/ along the x and y axes, then rotating it clockwise by `x_rotation` radians, before finally","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":90504,"byte_end":90598,"line_start":25,"line_end":25,"column_start":5,"column_end":99}},{"value":"/ translating the center to `center`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":90603,"byte_end":90642,"line_start":26,"line_end":26,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":90647,"byte_end":90656,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":91331,"byte_end":91340,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"from_rect","qualname":"<Ellipse>::from_rect","value":"pub fn from_rect(Rect) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the largest ellipse that can be bounded by this [`Rect`].","sig":null,"attributes":[{"value":"/ Returns the largest ellipse that can be bounded by this [`Rect`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":90937,"byte_end":91006,"line_start":34,"line_end":34,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":91011,"byte_end":91014,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ This uses the absolute width and height of the rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":91019,"byte_end":91080,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":91085,"byte_end":91088,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This ellipse is always axis-aligned; to apply rotation you can call","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":91093,"byte_end":91164,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/ [`with_x_rotation`] with the result.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":91169,"byte_end":91209,"line_start":39,"line_end":39,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":91214,"byte_end":91217,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ [`Rect`]: struct.Rect.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":91222,"byte_end":91252,"line_start":41,"line_end":41,"column_start":5,"column_end":35}},{"value":"/ [`with_x_rotation`]: #method.with_x_rotation","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":91257,"byte_end":91305,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":91310,"byte_end":91319,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":91630,"byte_end":91641,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"from_affine","qualname":"<Ellipse>::from_affine","value":"pub fn from_affine(Affine) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an ellipse from an affine transformation of the unit circle.\n","sig":null,"attributes":[{"value":"/ Create an ellipse from an affine transformation of the unit circle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":91533,"byte_end":91604,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":91609,"byte_end":91618,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":92365,"byte_end":92371,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"center","qualname":"<Ellipse>::center","value":"pub fn center(&Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Returns the center of this ellipse.\n","sig":null,"attributes":[{"value":"/ Returns the center of this ellipse.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":92300,"byte_end":92339,"line_start":70,"line_end":70,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":92344,"byte_end":92353,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":92560,"byte_end":92571,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"with_center","qualname":"<Ellipse>::with_center","value":"pub fn with_center(Self, Point) -> Ellipse","parent":null,"children":[],"decl_id":null,"docs":" Sets the center of this ellipse.\n","sig":null,"attributes":[{"value":"/ Sets the center of this ellipse.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":92498,"byte_end":92534,"line_start":77,"line_end":77,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":92539,"byte_end":92548,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":92960,"byte_end":92965,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"radii","qualname":"<Ellipse>::radii","value":"pub fn radii(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns the two radii of this ellipse.","sig":null,"attributes":[{"value":"/ Returns the two radii of this ellipse.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":92768,"byte_end":92810,"line_start":86,"line_end":86,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":92815,"byte_end":92818,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ The first number is the horizontal radius and the second is the vertical radius, before","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":92823,"byte_end":92914,"line_start":88,"line_end":88,"column_start":5,"column_end":96}},{"value":"/ rotating by `x_rotation`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":92919,"byte_end":92948,"line_start":89,"line_end":89,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":93083,"byte_end":93093,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"with_radii","qualname":"<Ellipse>::with_radii","value":"pub fn with_radii(Self, Vec2) -> Ellipse","parent":null,"children":[],"decl_id":null,"docs":" Set the radii of this ellipse.\n","sig":null,"attributes":[{"value":"/ Set the radii of this ellipse.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":93021,"byte_end":93055,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"must_use","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":93060,"byte_end":93071,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":93553,"byte_end":93563,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"x_rotation","qualname":"<Ellipse>::x_rotation","value":"pub fn x_rotation(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The amount (in radians) that the ellipse should be rotated by (clockwise).","sig":null,"attributes":[{"value":"/ The amount (in radians) that the ellipse should be rotated by (clockwise).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":93318,"byte_end":93396,"line_start":102,"line_end":102,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":93401,"byte_end":93404,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This allows all possible ellipses to be drawn by always starting with an ellipse with the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":93409,"byte_end":93502,"line_start":104,"line_end":104,"column_start":5,"column_end":98}},{"value":"/ two radii on the x and y axes.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":93507,"byte_end":93541,"line_start":105,"line_end":105,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":93712,"byte_end":93727,"line_start":111,"line_end":111,"column_start":12,"column_end":27},"name":"with_x_rotation","qualname":"<Ellipse>::with_x_rotation","value":"pub fn with_x_rotation(Self, f64) -> Ellipse","parent":null,"children":[],"decl_id":null,"docs":" Set the amount (in radians) that the ellipse should be rotated by (clockwise).\n","sig":null,"attributes":[{"value":"/ Set the amount (in radians) that the ellipse should be rotated by (clockwise).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":93618,"byte_end":93700,"line_start":110,"line_end":110,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":1278},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102063,"byte_end":102069,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"Insets","qualname":"::insets::Insets","value":"Insets { x0, y0, x1, y1 }","parent":null,"children":[{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282}],"decl_id":null,"docs":" Insets from the edges of a rectangle.","sig":null,"attributes":[{"value":"/ Insets from the edges of a rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":99252,"byte_end":99293,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":99294,"byte_end":99297,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":99298,"byte_end":99301,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The inset value for each edge can be thought of as a delta computed from","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":99302,"byte_end":99378,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ the center of the rect to that edge. For instance, with an inset of `2.0` on","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":99379,"byte_end":99459,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ the x-axis, a rectange with the origin `(0.0, 0.0)` with that inset added","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":99460,"byte_end":99537,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ will have the new origin at `(-2.0, 0.0)`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":99538,"byte_end":99584,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":99585,"byte_end":99588,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Put alternatively, a positive inset represents increased distance from center,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":99589,"byte_end":99671,"line_start":29,"line_end":29,"column_start":1,"column_end":83}},{"value":"/ and a negative inset represents decreased distance from center.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":99672,"byte_end":99739,"line_start":30,"line_end":30,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":99740,"byte_end":99743,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":99744,"byte_end":99758,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":99759,"byte_end":99762,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Positive insets added to a [`Rect`] produce a larger [`Rect`]:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":99763,"byte_end":99829,"line_start":34,"line_end":34,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":99830,"byte_end":99837,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # use kurbo::{Insets, Rect};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":99838,"byte_end":99870,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ let rect = Rect::from_origin_size((0., 0.,), (10., 10.,));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":99871,"byte_end":99933,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/ let insets = Insets::uniform_xy(3., 0.,);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":99934,"byte_end":99979,"line_start":38,"line_end":38,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":99980,"byte_end":99983,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let inset_rect = rect + insets;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":99984,"byte_end":100019,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(inset_rect.width(), 16.0, \"10.0 + 3.0 × 2\");","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100020,"byte_end":100080,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(inset_rect.x0, -3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100081,"byte_end":100117,"line_start":42,"line_end":42,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100118,"byte_end":100125,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100126,"byte_end":100129,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Negative insets added to a [`Rect`] produce a smaller [`Rect`]:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100130,"byte_end":100197,"line_start":45,"line_end":45,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100198,"byte_end":100201,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100202,"byte_end":100209,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ # use kurbo::{Insets, Rect};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100210,"byte_end":100242,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/ let rect = Rect::from_origin_size((0., 0.,), (10., 10.,));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100243,"byte_end":100305,"line_start":49,"line_end":49,"column_start":1,"column_end":63}},{"value":"/ let insets = Insets::uniform_xy(-3., 0.,);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100306,"byte_end":100352,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100353,"byte_end":100356,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let inset_rect = rect + insets;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100357,"byte_end":100392,"line_start":52,"line_end":52,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(inset_rect.width(), 4.0, \"10.0 - 3.0 × 2\");","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100393,"byte_end":100452,"line_start":53,"line_end":53,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(inset_rect.x0, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100453,"byte_end":100488,"line_start":54,"line_end":54,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100489,"byte_end":100496,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100497,"byte_end":100500,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`Insets`] operate on the absolute rectangle [`Rect::abs`], and so ignore","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100501,"byte_end":100578,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ existing negative widths and heights.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100579,"byte_end":100620,"line_start":58,"line_end":58,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100621,"byte_end":100624,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100625,"byte_end":100632,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/ # use kurbo::{Insets, Rect};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100633,"byte_end":100665,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/ let rect = Rect::new(7., 11., 0., 0.,);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100666,"byte_end":100709,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/ let insets = Insets::uniform_xy(0., 1.,);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100710,"byte_end":100755,"line_start":63,"line_end":63,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100756,"byte_end":100759,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(rect.width(), -7.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100760,"byte_end":100795,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100796,"byte_end":100799,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let inset_rect = rect + insets;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100800,"byte_end":100835,"line_start":67,"line_end":67,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(inset_rect.width(), 7.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100836,"byte_end":100876,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(inset_rect.x0, 0.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100877,"byte_end":100912,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(inset_rect.height(), 13.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100913,"byte_end":100955,"line_start":70,"line_end":70,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100956,"byte_end":100963,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100964,"byte_end":100967,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The width and height of an inset operation can still be negative if the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":100968,"byte_end":101043,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ [`Insets`]' dimensions are greater than the dimensions of the original [`Rect`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101044,"byte_end":101128,"line_start":74,"line_end":74,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101129,"byte_end":101132,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101133,"byte_end":101140,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/ # use kurbo::{Insets, Rect};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101141,"byte_end":101173,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ let rect = Rect::new(0., 0., 3., 5.);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101174,"byte_end":101215,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/ let insets = Insets::uniform_xy(0., 7.,);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101216,"byte_end":101261,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101262,"byte_end":101265,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ let inset_rect = rect - insets;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101266,"byte_end":101301,"line_start":81,"line_end":81,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(inset_rect.height(), -9., \"5 - 7 × 2\")","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101302,"byte_end":101356,"line_start":82,"line_end":82,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101357,"byte_end":101364,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101365,"byte_end":101368,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ `Rect - Rect = Insets`:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101369,"byte_end":101396,"line_start":85,"line_end":85,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101397,"byte_end":101400,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101401,"byte_end":101404,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101405,"byte_end":101412,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ # use kurbo::{Insets, Rect};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101413,"byte_end":101445,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/ let rect = Rect::new(0., 0., 5., 11.);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101446,"byte_end":101488,"line_start":90,"line_end":90,"column_start":1,"column_end":43}},{"value":"/ let insets = Insets::uniform_xy(1., 7.,);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101489,"byte_end":101534,"line_start":91,"line_end":91,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101535,"byte_end":101538,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ let inset_rect = rect + insets;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101539,"byte_end":101574,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"/ let insets2 = inset_rect - rect;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101575,"byte_end":101611,"line_start":94,"line_end":94,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101612,"byte_end":101615,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(insets2.x0, insets.x0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101616,"byte_end":101654,"line_start":96,"line_end":96,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(insets2.y1, insets.y1);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101655,"byte_end":101693,"line_start":97,"line_end":97,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(insets2.x_value(), insets.x_value());","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101694,"byte_end":101746,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(insets2.y_value(), insets.y_value());","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101747,"byte_end":101799,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101800,"byte_end":101807,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101808,"byte_end":101811,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [`Rect`]: struct.Rect.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101812,"byte_end":101842,"line_start":102,"line_end":102,"column_start":1,"column_end":31}},{"value":"/ [`Insets`]: struct.Insets.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101843,"byte_end":101877,"line_start":103,"line_end":103,"column_start":1,"column_end":35}},{"value":"/ [`Rect::abs`]: struct.Rect.html#method.abs","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":101878,"byte_end":101924,"line_start":104,"line_end":104,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1279},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102126,"byte_end":102128,"line_start":109,"line_end":109,"column_start":9,"column_end":11},"name":"x0","qualname":"::insets::Insets::x0","value":"f64","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":" The minimum x coordinate (left edge).\n","sig":null,"attributes":[{"value":"/ The minimum x coordinate (left edge).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102076,"byte_end":102117,"line_start":108,"line_end":108,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1280},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102205,"byte_end":102207,"line_start":111,"line_end":111,"column_start":9,"column_end":11},"name":"y0","qualname":"::insets::Insets::y0","value":"f64","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":" The minimum y coordinate (top edge in y-down spaces).\n","sig":null,"attributes":[{"value":"/ The minimum y coordinate (top edge in y-down spaces).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102139,"byte_end":102196,"line_start":110,"line_end":110,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102269,"byte_end":102271,"line_start":113,"line_end":113,"column_start":9,"column_end":11},"name":"x1","qualname":"::insets::Insets::x1","value":"f64","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":" The maximum x coordinate (right edge).\n","sig":null,"attributes":[{"value":"/ The maximum x coordinate (right edge).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102218,"byte_end":102260,"line_start":112,"line_end":112,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1282},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102351,"byte_end":102353,"line_start":115,"line_end":115,"column_start":9,"column_end":11},"name":"y1","qualname":"::insets::Insets::y1","value":"f64","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":" The maximum y coordinate (bottom edge in y-down spaces).\n","sig":null,"attributes":[{"value":"/ The maximum y coordinate (bottom edge in y-down spaces).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102282,"byte_end":102342,"line_start":114,"line_end":114,"column_start":5,"column_end":65}}]},{"kind":"Const","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102414,"byte_end":102418,"line_start":120,"line_end":120,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::insets::Insets::ZERO","value":"Insets","parent":{"krate":0,"index":456},"children":[],"decl_id":null,"docs":" Zero'd insets.\n","sig":null,"attributes":[{"value":"/ Zero'd insets.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102381,"byte_end":102399,"line_start":119,"line_end":119,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102510,"byte_end":102517,"line_start":124,"line_end":124,"column_start":18,"column_end":25},"name":"uniform","qualname":"<Insets>::uniform","value":"pub const fn uniform(f64) -> Insets","parent":null,"children":[],"decl_id":null,"docs":" New uniform insets.\n","sig":null,"attributes":[{"value":"/ New uniform insets.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102455,"byte_end":102478,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102483,"byte_end":102492,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102735,"byte_end":102745,"line_start":135,"line_end":135,"column_start":18,"column_end":28},"name":"uniform_xy","qualname":"<Insets>::uniform_xy","value":"pub const fn uniform_xy(f64, f64) -> Insets","parent":null,"children":[],"decl_id":null,"docs":" New insets with uniform values along each axis.\n","sig":null,"attributes":[{"value":"/ New insets with uniform values along each axis.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102652,"byte_end":102703,"line_start":133,"line_end":133,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102708,"byte_end":102717,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103040,"byte_end":103043,"line_start":147,"line_end":147,"column_start":18,"column_end":21},"name":"new","qualname":"<Insets>::new","value":"pub const fn new(f64, f64, f64, f64) -> Insets","parent":null,"children":[],"decl_id":null,"docs":" New insets. The ordering of the arguments is \"left, top, right, bottom\",\n assuming a y-down coordinate space.\n","sig":null,"attributes":[{"value":"/ New insets. The ordering of the arguments is \"left, top, right, bottom\",","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102888,"byte_end":102964,"line_start":144,"line_end":144,"column_start":5,"column_end":81}},{"value":"/ assuming a y-down coordinate space.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102969,"byte_end":103008,"line_start":145,"line_end":145,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103013,"byte_end":103022,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103514,"byte_end":103521,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"x_value","qualname":"<Insets>::x_value","value":"pub fn x_value(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The total delta on the x-axis represented by these insets.","sig":null,"attributes":[{"value":"/ The total delta on the x-axis represented by these insets.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103137,"byte_end":103199,"line_start":151,"line_end":151,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103204,"byte_end":103207,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103212,"byte_end":103226,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103231,"byte_end":103234,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103239,"byte_end":103246,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Insets;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103251,"byte_end":103273,"line_start":156,"line_end":156,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103278,"byte_end":103281,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let insets = Insets::uniform_xy(3., 8.);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103286,"byte_end":103330,"line_start":158,"line_end":158,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(insets.x_value(), 6.);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103335,"byte_end":103372,"line_start":159,"line_end":159,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103377,"byte_end":103380,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let insets = Insets::new(5., 0., -12., 0.,);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103385,"byte_end":103433,"line_start":161,"line_end":161,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(insets.x_value(), -7.);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103438,"byte_end":103476,"line_start":162,"line_end":162,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103481,"byte_end":103488,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103493,"byte_end":103502,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103953,"byte_end":103960,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"y_value","qualname":"<Insets>::y_value","value":"pub fn y_value(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The total delta on the y-axis represented by these insets.","sig":null,"attributes":[{"value":"/ The total delta on the y-axis represented by these insets.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103574,"byte_end":103636,"line_start":169,"line_end":169,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103641,"byte_end":103644,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103649,"byte_end":103663,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103668,"byte_end":103671,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103676,"byte_end":103683,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Insets;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103688,"byte_end":103710,"line_start":174,"line_end":174,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103715,"byte_end":103718,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let insets = Insets::uniform_xy(3., 7.);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103723,"byte_end":103767,"line_start":176,"line_end":176,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(insets.y_value(), 14.);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103772,"byte_end":103810,"line_start":177,"line_end":177,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103815,"byte_end":103818,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let insets = Insets::new(5., 10., -12., 4.,);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103823,"byte_end":103872,"line_start":179,"line_end":179,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(insets.y_value(), 14.);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103877,"byte_end":103915,"line_start":180,"line_end":180,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103920,"byte_end":103927,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":103932,"byte_end":103941,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104651,"byte_end":104655,"line_start":206,"line_end":206,"column_start":12,"column_end":16},"name":"size","qualname":"<Insets>::size","value":"pub fn size(Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns the total delta represented by these insets as a [`Size`].","sig":null,"attributes":[{"value":"/ Returns the total delta represented by these insets as a [`Size`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104013,"byte_end":104083,"line_start":187,"line_end":187,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104088,"byte_end":104091,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to creating a [`Size`] from the values returned by","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104096,"byte_end":104169,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ [`x_value`] and [`y_value`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104174,"byte_end":104206,"line_start":190,"line_end":190,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104211,"byte_end":104214,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This function may return a a size with negative values.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104219,"byte_end":104278,"line_start":192,"line_end":192,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104283,"byte_end":104286,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104291,"byte_end":104305,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104310,"byte_end":104313,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104318,"byte_end":104325,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ use kurbo::{Insets, Size};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104330,"byte_end":104360,"line_start":197,"line_end":197,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104365,"byte_end":104368,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let insets = Insets::new(11.1, -43.3, 3.333, -0.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104373,"byte_end":104428,"line_start":199,"line_end":199,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(insets.size(), Size::new(insets.x_value(), insets.y_value()));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104433,"byte_end":104510,"line_start":200,"line_end":200,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104515,"byte_end":104522,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104527,"byte_end":104530,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [`Size`]: struct.Size.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104535,"byte_end":104565,"line_start":203,"line_end":203,"column_start":5,"column_end":35}},{"value":"/ [`x_value`]: #method.x_value","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104570,"byte_end":104602,"line_start":204,"line_end":204,"column_start":5,"column_end":37}},{"value":"/ [`y_value`]: #method.y_value","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104607,"byte_end":104639,"line_start":205,"line_end":205,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104794,"byte_end":104809,"line_start":211,"line_end":211,"column_start":12,"column_end":27},"name":"are_nonnegative","qualname":"<Insets>::are_nonnegative","value":"pub fn are_nonnegative(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` iff all values are nonnegative.\n","sig":null,"attributes":[{"value":"/ Return `true` iff all values are nonnegative.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104733,"byte_end":104782,"line_start":210,"line_end":210,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":105430,"byte_end":105441,"line_start":231,"line_end":231,"column_start":12,"column_end":23},"name":"nonnegative","qualname":"<Insets>::nonnegative","value":"pub fn nonnegative(Self) -> Insets","parent":null,"children":[],"decl_id":null,"docs":" Return new `Insets` with all negative values replaced with `0.0`.","sig":null,"attributes":[{"value":"/ Return new `Insets` with all negative values replaced with `0.0`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":104940,"byte_end":105009,"line_start":216,"line_end":216,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":105014,"byte_end":105017,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This is provided as a convenience for applications where negative insets","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":105022,"byte_end":105098,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ are not meaningful.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":105103,"byte_end":105126,"line_start":219,"line_end":219,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":105131,"byte_end":105134,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":105139,"byte_end":105153,"line_start":221,"line_end":221,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":105158,"byte_end":105161,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":105166,"byte_end":105173,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Insets;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":105178,"byte_end":105200,"line_start":224,"line_end":224,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":105205,"byte_end":105208,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let insets = Insets::new(-10., 3., -0.2, 4.);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":105213,"byte_end":105262,"line_start":226,"line_end":226,"column_start":5,"column_end":54}},{"value":"/ let nonnegative = insets.nonnegative();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":105267,"byte_end":105310,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(nonnegative.x_value(), 0.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":105315,"byte_end":105358,"line_start":228,"line_end":228,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(nonnegative.y_value(), 7.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":105363,"byte_end":105406,"line_start":229,"line_end":229,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":105411,"byte_end":105418,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":107417,"byte_end":107421,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"Line","qualname":"::line::Line","value":"Line { p0, p1 }","parent":null,"children":[{"krate":0,"index":1295},{"krate":0,"index":1296}],"decl_id":null,"docs":" A single line.\n","sig":null,"attributes":[{"value":"/ A single line.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":107269,"byte_end":107287,"line_start":13,"line_end":13,"column_start":1,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":1295},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":107464,"byte_end":107466,"line_start":18,"line_end":18,"column_start":9,"column_end":11},"name":"p0","qualname":"::line::Line::p0","value":"point::Point","parent":{"krate":0,"index":1294},"children":[],"decl_id":null,"docs":" The line's start point.\n","sig":null,"attributes":[{"value":"/ The line's start point.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":107428,"byte_end":107455,"line_start":17,"line_end":17,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1296},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":107513,"byte_end":107515,"line_start":20,"line_end":20,"column_start":9,"column_end":11},"name":"p1","qualname":"::line::Line::p1","value":"point::Point","parent":{"krate":0,"index":1294},"children":[],"decl_id":null,"docs":" The line's end point.\n","sig":null,"attributes":[{"value":"/ The line's end point.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":107479,"byte_end":107504,"line_start":19,"line_end":19,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":107591,"byte_end":107594,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<Line>::new","value":"pub fn new<impl Into<Point>: Into<Point>,\n           impl Into<Point>: Into<Point>>(impl Into<Point>, impl Into<Point>)\n-> Line","parent":null,"children":[],"decl_id":null,"docs":" Create a new line.\n","sig":null,"attributes":[{"value":"/ Create a new line.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":107543,"byte_end":107565,"line_start":24,"line_end":24,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":107570,"byte_end":107579,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":107792,"byte_end":107798,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"name":"length","qualname":"<Line>::length","value":"pub fn length(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The length of the line.\n","sig":null,"attributes":[{"value":"/ The length of the line.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":107739,"byte_end":107766,"line_start":33,"line_end":33,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":107771,"byte_end":107780,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1306},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":109672,"byte_end":109682,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"ConstPoint","qualname":"::line::ConstPoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A trivial \"curve\" that is just a constant.\n","sig":null,"attributes":[{"value":"/ A trivial \"curve\" that is just a constant.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":109507,"byte_end":109553,"line_start":119,"line_end":119,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":110786,"byte_end":110798,"line_start":184,"line_end":184,"column_start":12,"column_end":24},"name":"LinePathIter","qualname":"::line::LinePathIter","value":"LinePathIter {  }","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553}],"decl_id":null,"docs":" An iterator yielding the path for a single line.\n","sig":null,"attributes":[{"value":"/ An iterator yielding the path for a single line.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":110707,"byte_end":110759,"line_start":182,"line_end":182,"column_start":1,"column_end":53}}]},{"kind":"Const","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":112679,"byte_end":112695,"line_start":13,"line_end":13,"column_start":11,"column_end":27},"name":"DEFAULT_ACCURACY","qualname":"::param_curve::DEFAULT_ACCURACY","value":"f64","parent":null,"children":[],"decl_id":null,"docs":" A default value for methods that take an 'accuracy' argument.","sig":null,"attributes":[{"value":"/ A default value for methods that take an 'accuracy' argument.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":112507,"byte_end":112572,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":112573,"byte_end":112576,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This value is intended to be suitable for general-purpose use, such as","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":112577,"byte_end":112651,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ 2d graphics.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":112652,"byte_end":112668,"line_start":12,"line_end":12,"column_start":1,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":112891,"byte_end":112901,"line_start":19,"line_end":19,"column_start":11,"column_end":21},"name":"ParamCurve","qualname":"::param_curve::ParamCurve","value":"ParamCurve: Sized","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577}],"decl_id":null,"docs":" A curve parametrized by a scalar.","sig":null,"attributes":[{"value":"/ A curve parametrized by a scalar.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":112710,"byte_end":112747,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":112748,"byte_end":112751,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If the result is interpreted as a point, this represents a curve.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":112752,"byte_end":112821,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ But the result can be interpreted as a vector as well.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":112822,"byte_end":112880,"line_start":18,"line_end":18,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":113017,"byte_end":113021,"line_start":23,"line_end":23,"column_start":8,"column_end":12},"name":"eval","qualname":"::param_curve::ParamCurve::eval","value":"pub fn eval(&Self, f64) -> Point","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Evaluate the curve at parameter `t`.","sig":null,"attributes":[{"value":"/ Evaluate the curve at parameter `t`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":112915,"byte_end":112955,"line_start":20,"line_end":20,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":112960,"byte_end":112963,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Generally `t` is in the range [0..1].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":112968,"byte_end":113009,"line_start":22,"line_end":22,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":113124,"byte_end":113134,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"subsegment","qualname":"::param_curve::ParamCurve::subsegment","value":"pub fn subsegment(&Self, Range<f64>) -> Self","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Get a subsegment of the curve for the given parameter range.\n","sig":null,"attributes":[{"value":"/ Get a subsegment of the curve for the given parameter range.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":113052,"byte_end":113116,"line_start":25,"line_end":25,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":113233,"byte_end":113242,"line_start":30,"line_end":30,"column_start":8,"column_end":17},"name":"subdivide","qualname":"::param_curve::ParamCurve::subdivide","value":"pub fn subdivide(&Self) -> (Self, Self)","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Subdivide into (roughly) halves.\n","sig":null,"attributes":[{"value":"/ Subdivide into (roughly) halves.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":113175,"byte_end":113211,"line_start":28,"line_end":28,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":113216,"byte_end":113225,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":113370,"byte_end":113375,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"start","qualname":"::param_curve::ParamCurve::start","value":"pub fn start(&Self) -> Point","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" The start point.\n","sig":null,"attributes":[{"value":"/ The start point.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":113342,"byte_end":113362,"line_start":34,"line_end":34,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":113454,"byte_end":113457,"line_start":40,"line_end":40,"column_start":8,"column_end":11},"name":"end","qualname":"::param_curve::ParamCurve::end","value":"pub fn end(&Self) -> Point","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" The end point.\n","sig":null,"attributes":[{"value":"/ The end point.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":113428,"byte_end":113446,"line_start":39,"line_end":39,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":113625,"byte_end":113640,"line_start":48,"line_end":48,"column_start":11,"column_end":26},"name":"ParamCurveDeriv","qualname":"::param_curve::ParamCurveDeriv","value":"ParamCurveDeriv","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581}],"decl_id":null,"docs":" A differentiable parametrized curve.\n","sig":null,"attributes":[{"value":"/ A differentiable parametrized curve.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":113574,"byte_end":113614,"line_start":47,"line_end":47,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":113728,"byte_end":113739,"line_start":50,"line_end":50,"column_start":10,"column_end":21},"name":"DerivResult","qualname":"::param_curve::ParamCurveDeriv::DerivResult","value":"type DerivResult: ParamCurve;","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" The parametric curve obtained by taking the derivative of this one.\n","sig":null,"attributes":[{"value":"/ The parametric curve obtained by taking the derivative of this one.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":113647,"byte_end":113718,"line_start":49,"line_end":49,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":114061,"byte_end":114066,"line_start":58,"line_end":58,"column_start":8,"column_end":13},"name":"deriv","qualname":"::param_curve::ParamCurveDeriv::deriv","value":"pub fn deriv(&Self) -> Self::DerivResult","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" The derivative of the curve.","sig":null,"attributes":[{"value":"/ The derivative of the curve.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":113758,"byte_end":113790,"line_start":52,"line_end":52,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":113795,"byte_end":113798,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that the type of the return value is somewhat inaccurate, as","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":113803,"byte_end":113872,"line_start":54,"line_end":54,"column_start":5,"column_end":74}},{"value":"/ the derivative of a curve (mapping of param to point) is a mapping","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":113877,"byte_end":113947,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ of param to vector. We choose to accept this rather than have a","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":113952,"byte_end":114019,"line_start":56,"line_end":56,"column_start":5,"column_end":72}},{"value":"/ more complex type scheme.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":114024,"byte_end":114053,"line_start":57,"line_end":57,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":114275,"byte_end":114287,"line_start":65,"line_end":65,"column_start":8,"column_end":20},"name":"gauss_arclen","qualname":"::param_curve::ParamCurveDeriv::gauss_arclen","value":"pub fn gauss_arclen(&Self, &[(f64, f64)]) -> f64","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Estimate arclength using Gaussian quadrature.","sig":null,"attributes":[{"value":"/ Estimate arclength using Gaussian quadrature.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":114101,"byte_end":114150,"line_start":60,"line_end":60,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":114155,"byte_end":114158,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The coefficients are assumed to cover the range (-1..1), which is","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":114163,"byte_end":114232,"line_start":62,"line_end":62,"column_start":5,"column_end":74}},{"value":"/ traditional.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":114237,"byte_end":114253,"line_start":63,"line_end":63,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":114258,"byte_end":114267,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":114596,"byte_end":114612,"line_start":76,"line_end":76,"column_start":11,"column_end":27},"name":"ParamCurveArclen","qualname":"::param_curve::ParamCurveArclen","value":"ParamCurveArclen: ParamCurve","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585}],"decl_id":null,"docs":" A parametrized curve that can have its arc length measured.\n","sig":null,"attributes":[{"value":"/ A parametrized curve that can have its arc length measured.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":114522,"byte_end":114585,"line_start":75,"line_end":75,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":114880,"byte_end":114886,"line_start":82,"line_end":82,"column_start":8,"column_end":14},"name":"arclen","qualname":"::param_curve::ParamCurveArclen::arclen","value":"pub fn arclen(&Self, f64) -> f64","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" The arc length of the curve.","sig":null,"attributes":[{"value":"/ The arc length of the curve.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":114631,"byte_end":114663,"line_start":77,"line_end":77,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":114668,"byte_end":114671,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ The result is accurate to the given accuracy (subject to","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":114676,"byte_end":114736,"line_start":79,"line_end":79,"column_start":5,"column_end":65}},{"value":"/ roundoff errors for ridiculously low values). Compute time","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":114741,"byte_end":114803,"line_start":80,"line_end":80,"column_start":5,"column_end":67}},{"value":"/ may vary with accuracy, if the curve needs to be subdivided.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":114808,"byte_end":114872,"line_start":81,"line_end":81,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":115224,"byte_end":115234,"line_start":89,"line_end":89,"column_start":8,"column_end":18},"name":"inv_arclen","qualname":"::param_curve::ParamCurveArclen::inv_arclen","value":"pub fn inv_arclen(&Self, f64, f64) -> f64","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Solve for the parameter that has the given arclength from the start.","sig":null,"attributes":[{"value":"/ Solve for the parameter that has the given arclength from the start.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":114922,"byte_end":114994,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":114999,"byte_end":115002,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This implementation is bisection, which is very robust but not","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":115007,"byte_end":115073,"line_start":86,"line_end":86,"column_start":5,"column_end":71}},{"value":"/ necessarily the fastest. It does measure increasingly short","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":115078,"byte_end":115141,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/ segments, though, which should be good for subdivision algorithms.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":115146,"byte_end":115216,"line_start":88,"line_end":88,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":116405,"byte_end":116419,"line_start":124,"line_end":124,"column_start":11,"column_end":25},"name":"ParamCurveArea","qualname":"::param_curve::ParamCurveArea","value":"ParamCurveArea","parent":null,"children":[{"krate":0,"index":587}],"decl_id":null,"docs":" A parametrized curve that can have its signed area measured.\n","sig":null,"attributes":[{"value":"/ A parametrized curve that can have its signed area measured.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":116330,"byte_end":116394,"line_start":123,"line_end":123,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":117089,"byte_end":117100,"line_start":137,"line_end":137,"column_start":8,"column_end":19},"name":"signed_area","qualname":"::param_curve::ParamCurveArea::signed_area","value":"pub fn signed_area(&Self) -> f64","parent":{"krate":0,"index":586},"children":[],"decl_id":null,"docs":" Compute the signed area under the curve.","sig":null,"attributes":[{"value":"/ Compute the signed area under the curve.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":116426,"byte_end":116470,"line_start":125,"line_end":125,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":116475,"byte_end":116478,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ For a closed path, the signed area of the path is the sum of signed","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":116483,"byte_end":116554,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ areas of the segments. This is a variant of the \"shoelace formula.\"","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":116559,"byte_end":116630,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ See:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":116635,"byte_end":116643,"line_start":129,"line_end":129,"column_start":5,"column_end":13}},{"value":"/ <https://github.com/Pomax/bezierinfo/issues/44> and","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":116648,"byte_end":116703,"line_start":130,"line_end":130,"column_start":5,"column_end":60}},{"value":"/ <http://ich.deanmcnamee.com/graphics/2016/03/30/CurveArea.html>","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":116708,"byte_end":116775,"line_start":131,"line_end":131,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":116780,"byte_end":116783,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This can be computed exactly for Béziers thanks to Green's theorem,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":116788,"byte_end":116860,"line_start":133,"line_end":133,"column_start":5,"column_end":76}},{"value":"/ and also for simple curves such as circular arcs. For more exotic","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":116865,"byte_end":116934,"line_start":134,"line_end":134,"column_start":5,"column_end":74}},{"value":"/ curves, it's probably best to subdivide to cubics. We leave that","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":116939,"byte_end":117007,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ to the caller, which is why we don't give an accuracy param here.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":117012,"byte_end":117081,"line_start":136,"line_end":136,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":117186,"byte_end":117203,"line_start":141,"line_end":141,"column_start":11,"column_end":28},"name":"ParamCurveNearest","qualname":"::param_curve::ParamCurveNearest","value":"ParamCurveNearest","parent":null,"children":[{"krate":0,"index":589}],"decl_id":null,"docs":" A parametrized curve that reports the nearest point.\n","sig":null,"attributes":[{"value":"/ A parametrized curve that reports the nearest point.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":117119,"byte_end":117175,"line_start":140,"line_end":140,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":117344,"byte_end":117351,"line_start":145,"line_end":145,"column_start":8,"column_end":15},"name":"nearest","qualname":"::param_curve::ParamCurveNearest::nearest","value":"pub fn nearest(&Self, Point, f64) -> (f64, f64)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Find the point on the curve nearest the given point.","sig":null,"attributes":[{"value":"/ Find the point on the curve nearest the given point.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":117210,"byte_end":117266,"line_start":142,"line_end":142,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":117271,"byte_end":117274,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Returns the parameter and the square of the distance.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":117279,"byte_end":117336,"line_start":144,"line_end":144,"column_start":5,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":590},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":117465,"byte_end":117484,"line_start":149,"line_end":149,"column_start":11,"column_end":30},"name":"ParamCurveCurvature","qualname":"::param_curve::ParamCurveCurvature","value":"ParamCurveCurvature: ParamCurveDeriv","parent":null,"children":[{"krate":0,"index":591}],"decl_id":null,"docs":" A parametrized curve that reports its curvature.\n","sig":null,"attributes":[{"value":"/ A parametrized curve that reports its curvature.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":117402,"byte_end":117454,"line_start":148,"line_end":148,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":117626,"byte_end":117635,"line_start":155,"line_end":155,"column_start":8,"column_end":17},"name":"curvature","qualname":"::param_curve::ParamCurveCurvature::curvature","value":"pub fn curvature(&Self, f64) -> f64","parent":{"krate":0,"index":590},"children":[],"decl_id":null,"docs":" Compute the signed curvature at parameter `t`.\n","sig":null,"attributes":[{"value":"/ Compute the signed curvature at parameter `t`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":117554,"byte_end":117604,"line_start":153,"line_end":153,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":117609,"byte_end":117618,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":118251,"byte_end":118262,"line_start":170,"line_end":170,"column_start":11,"column_end":22},"name":"MAX_EXTREMA","qualname":"::param_curve::MAX_EXTREMA","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum number of extrema that can be reported in the `ParamCurveExtrema` trait.","sig":null,"attributes":[{"value":"/ The maximum number of extrema that can be reported in the `ParamCurveExtrema` trait.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":118019,"byte_end":118107,"line_start":166,"line_end":166,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":118108,"byte_end":118111,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ This is 4 to support cubic Béziers. If other curves are used, they should be","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":118112,"byte_end":118193,"line_start":168,"line_end":168,"column_start":1,"column_end":81}},{"value":"/ subdivided to limit the number of extrema.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":118194,"byte_end":118240,"line_start":169,"line_end":169,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":118337,"byte_end":118354,"line_start":173,"line_end":173,"column_start":11,"column_end":28},"name":"ParamCurveExtrema","qualname":"::param_curve::ParamCurveExtrema","value":"ParamCurveExtrema: ParamCurve","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598}],"decl_id":null,"docs":" A parametrized curve that reports its extrema.\n","sig":null,"attributes":[{"value":"/ A parametrized curve that reports its extrema.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":118276,"byte_end":118326,"line_start":172,"line_end":172,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":118659,"byte_end":118666,"line_start":181,"line_end":181,"column_start":8,"column_end":15},"name":"extrema","qualname":"::param_curve::ParamCurveExtrema::extrema","value":"pub fn extrema(&Self) -> ArrayVec<[f64; ]>","parent":{"krate":0,"index":593},"children":[],"decl_id":null,"docs":" Compute the extrema of the curve.","sig":null,"attributes":[{"value":"/ Compute the extrema of the curve.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":118373,"byte_end":118410,"line_start":174,"line_end":174,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":118415,"byte_end":118418,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Only extrema within the interior of the curve count.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":118423,"byte_end":118479,"line_start":176,"line_end":176,"column_start":5,"column_end":61}},{"value":"/ At most four extrema can be reported, which is sufficient for","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":118484,"byte_end":118549,"line_start":177,"line_end":177,"column_start":5,"column_end":70}},{"value":"/ cubic Béziers.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":118554,"byte_end":118573,"line_start":178,"line_end":178,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":118578,"byte_end":118581,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The extrema should be reported in increasing parameter order.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":118586,"byte_end":118651,"line_start":180,"line_end":180,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":118793,"byte_end":118807,"line_start":184,"line_end":184,"column_start":8,"column_end":22},"name":"extrema_ranges","qualname":"::param_curve::ParamCurveExtrema::extrema_ranges","value":"pub fn extrema_ranges(&Self) -> ArrayVec<[Range<f64>; ]>","parent":{"krate":0,"index":593},"children":[],"decl_id":null,"docs":" Return parameter ranges, each of which is monotonic within the range.\n","sig":null,"attributes":[{"value":"/ Return parameter ranges, each of which is monotonic within the range.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":118712,"byte_end":118785,"line_start":183,"line_end":183,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":119159,"byte_end":119171,"line_start":196,"line_end":196,"column_start":8,"column_end":20},"name":"bounding_box","qualname":"::param_curve::ParamCurveExtrema::bounding_box","value":"pub fn bounding_box(&Self) -> Rect","parent":{"krate":0,"index":593},"children":[],"decl_id":null,"docs":" The smallest rectangle that encloses the curve in the range (0..1).\n","sig":null,"attributes":[{"value":"/ The smallest rectangle that encloses the curve in the range (0..1).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":119080,"byte_end":119151,"line_start":195,"line_end":195,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1314},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":119644,"byte_end":119649,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"Point","qualname":"::point::Point","value":"Point { x, y }","parent":null,"children":[{"krate":0,"index":1315},{"krate":0,"index":1316}],"decl_id":null,"docs":" A 2D point.\n","sig":null,"attributes":[{"value":"/ A 2D point.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":119497,"byte_end":119512,"line_start":9,"line_end":9,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":119686,"byte_end":119687,"line_start":14,"line_end":14,"column_start":9,"column_end":10},"name":"x","qualname":"::point::Point::x","value":"f64","parent":{"krate":0,"index":1314},"children":[],"decl_id":null,"docs":" The x coordinate.\n","sig":null,"attributes":[{"value":"/ The x coordinate.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":119656,"byte_end":119677,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1316},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":119728,"byte_end":119729,"line_start":16,"line_end":16,"column_start":9,"column_end":10},"name":"y","qualname":"::point::Point::y","value":"f64","parent":{"krate":0,"index":1314},"children":[],"decl_id":null,"docs":" The y coordinate.\n","sig":null,"attributes":[{"value":"/ The y coordinate.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":119698,"byte_end":119719,"line_start":15,"line_end":15,"column_start":5,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":119792,"byte_end":119796,"line_start":21,"line_end":21,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::point::Point::ZERO","value":"Point","parent":{"krate":0,"index":608},"children":[],"decl_id":null,"docs":" The point (0, 0).\n","sig":null,"attributes":[{"value":"/ The point (0, 0).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":119756,"byte_end":119777,"line_start":20,"line_end":20,"column_start":5,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":119882,"byte_end":119888,"line_start":24,"line_end":24,"column_start":15,"column_end":21},"name":"ORIGIN","qualname":"::point::Point::ORIGIN","value":"Point","parent":{"krate":0,"index":608},"children":[],"decl_id":null,"docs":" The point at the origin; (0, 0).\n","sig":null,"attributes":[{"value":"/ The point at the origin; (0, 0).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":119831,"byte_end":119867,"line_start":23,"line_end":23,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120022,"byte_end":120025,"line_start":28,"line_end":28,"column_start":18,"column_end":21},"name":"new","qualname":"<Point>::new","value":"pub const fn new(f64, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Point` with the provided `x` and `y` coordinates.\n","sig":null,"attributes":[{"value":"/ Create a new `Point` with the provided `x` and `y` coordinates.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":119923,"byte_end":119990,"line_start":26,"line_end":26,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":119995,"byte_end":120004,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120155,"byte_end":120162,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"name":"to_vec2","qualname":"<Point>::to_vec2","value":"pub const fn to_vec2(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Convert this point into a `Vec2`.\n","sig":null,"attributes":[{"value":"/ Convert this point into a `Vec2`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120086,"byte_end":120123,"line_start":32,"line_end":32,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120128,"byte_end":120137,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120294,"byte_end":120298,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Point>::lerp","value":"pub fn lerp(Self, Point, f64) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between two points.\n","sig":null,"attributes":[{"value":"/ Linearly interpolate between two points.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120224,"byte_end":120268,"line_start":38,"line_end":38,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120273,"byte_end":120282,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120475,"byte_end":120483,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"midpoint","qualname":"<Point>::midpoint","value":"pub fn midpoint(Self, Point) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Determine the midpoint of two points.\n","sig":null,"attributes":[{"value":"/ Determine the midpoint of two points.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120408,"byte_end":120449,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120454,"byte_end":120463,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120646,"byte_end":120654,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"distance","qualname":"<Point>::distance","value":"pub fn distance(Self, Point) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Euclidean distance.\n","sig":null,"attributes":[{"value":"/ Euclidean distance.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120597,"byte_end":120620,"line_start":50,"line_end":50,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120625,"byte_end":120634,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121134,"byte_end":121139,"line_start":71,"line_end":71,"column_start":12,"column_end":17},"name":"round","qualname":"<Point>::round","value":"pub fn round(Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Point`,\n with `x` and `y` rounded to the nearest integer.","sig":null,"attributes":[{"value":"/ Returns a new `Point`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120726,"byte_end":120752,"line_start":56,"line_end":56,"column_start":5,"column_end":31}},{"value":"/ with `x` and `y` rounded to the nearest integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120757,"byte_end":120809,"line_start":57,"line_end":57,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120814,"byte_end":120817,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120822,"byte_end":120836,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120841,"byte_end":120844,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120849,"byte_end":120856,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Point;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120861,"byte_end":120882,"line_start":62,"line_end":62,"column_start":5,"column_end":26}},{"value":"/ let a = Point::new(3.3, 3.6).round();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120887,"byte_end":120928,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/ let b = Point::new(3.0, -3.1).round();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120933,"byte_end":120975,"line_start":64,"line_end":64,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(a.x, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":120980,"byte_end":121005,"line_start":65,"line_end":65,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.y, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121010,"byte_end":121035,"line_start":66,"line_end":66,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.x, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121040,"byte_end":121065,"line_start":67,"line_end":67,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.y, -3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121070,"byte_end":121096,"line_start":68,"line_end":68,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121101,"byte_end":121108,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121113,"byte_end":121122,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121672,"byte_end":121676,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Point>::ceil","value":"pub fn ceil(Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Point`,\n with `x` and `y` rounded up to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Point`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121219,"byte_end":121245,"line_start":75,"line_end":75,"column_start":5,"column_end":31}},{"value":"/ with `x` and `y` rounded up to the nearest integer,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121250,"byte_end":121305,"line_start":76,"line_end":76,"column_start":5,"column_end":60}},{"value":"/ unless they are already an integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121310,"byte_end":121349,"line_start":77,"line_end":77,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121354,"byte_end":121357,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121362,"byte_end":121376,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121381,"byte_end":121384,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121389,"byte_end":121396,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Point;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121401,"byte_end":121422,"line_start":82,"line_end":82,"column_start":5,"column_end":26}},{"value":"/ let a = Point::new(3.3, 3.6).ceil();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121427,"byte_end":121467,"line_start":83,"line_end":83,"column_start":5,"column_end":45}},{"value":"/ let b = Point::new(3.0, -3.1).ceil();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121472,"byte_end":121513,"line_start":84,"line_end":84,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.x, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121518,"byte_end":121543,"line_start":85,"line_end":85,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.y, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121548,"byte_end":121573,"line_start":86,"line_end":86,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.x, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121578,"byte_end":121603,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.y, -3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121608,"byte_end":121634,"line_start":88,"line_end":88,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121639,"byte_end":121646,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121651,"byte_end":121660,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122211,"byte_end":122216,"line_start":111,"line_end":111,"column_start":12,"column_end":17},"name":"floor","qualname":"<Point>::floor","value":"pub fn floor(Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Point`,\n with `x` and `y` rounded down to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Point`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121754,"byte_end":121780,"line_start":95,"line_end":95,"column_start":5,"column_end":31}},{"value":"/ with `x` and `y` rounded down to the nearest integer,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121785,"byte_end":121842,"line_start":96,"line_end":96,"column_start":5,"column_end":62}},{"value":"/ unless they are already an integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121847,"byte_end":121886,"line_start":97,"line_end":97,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121891,"byte_end":121894,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121899,"byte_end":121913,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121918,"byte_end":121921,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121926,"byte_end":121933,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Point;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121938,"byte_end":121959,"line_start":102,"line_end":102,"column_start":5,"column_end":26}},{"value":"/ let a = Point::new(3.3, 3.6).floor();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":121964,"byte_end":122005,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/ let b = Point::new(3.0, -3.1).floor();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122010,"byte_end":122052,"line_start":104,"line_end":104,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(a.x, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122057,"byte_end":122082,"line_start":105,"line_end":105,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.y, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122087,"byte_end":122112,"line_start":106,"line_end":106,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.x, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122117,"byte_end":122142,"line_start":107,"line_end":107,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.y, -4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122147,"byte_end":122173,"line_start":108,"line_end":108,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122178,"byte_end":122185,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122190,"byte_end":122199,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122765,"byte_end":122771,"line_start":131,"line_end":131,"column_start":12,"column_end":18},"name":"expand","qualname":"<Point>::expand","value":"pub fn expand(Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Point`,\n with `x` and `y` rounded away from zero to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Point`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122296,"byte_end":122322,"line_start":115,"line_end":115,"column_start":5,"column_end":31}},{"value":"/ with `x` and `y` rounded away from zero to the nearest integer,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122327,"byte_end":122394,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/ unless they are already an integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122399,"byte_end":122438,"line_start":117,"line_end":117,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122443,"byte_end":122446,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122451,"byte_end":122465,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122470,"byte_end":122473,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122478,"byte_end":122485,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Point;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122490,"byte_end":122511,"line_start":122,"line_end":122,"column_start":5,"column_end":26}},{"value":"/ let a = Point::new(3.3, 3.6).expand();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122516,"byte_end":122558,"line_start":123,"line_end":123,"column_start":5,"column_end":47}},{"value":"/ let b = Point::new(3.0, -3.1).expand();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122563,"byte_end":122606,"line_start":124,"line_end":124,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(a.x, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122611,"byte_end":122636,"line_start":125,"line_end":125,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.y, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122641,"byte_end":122666,"line_start":126,"line_end":126,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.x, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122671,"byte_end":122696,"line_start":127,"line_end":127,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.y, -4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122701,"byte_end":122727,"line_start":128,"line_end":128,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122732,"byte_end":122739,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122744,"byte_end":122753,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123318,"byte_end":123323,"line_start":151,"line_end":151,"column_start":12,"column_end":17},"name":"trunc","qualname":"<Point>::trunc","value":"pub fn trunc(Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Point`,\n with `x` and `y` rounded towards zero to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Point`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122853,"byte_end":122879,"line_start":135,"line_end":135,"column_start":5,"column_end":31}},{"value":"/ with `x` and `y` rounded towards zero to the nearest integer,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122884,"byte_end":122949,"line_start":136,"line_end":136,"column_start":5,"column_end":70}},{"value":"/ unless they are already an integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122954,"byte_end":122993,"line_start":137,"line_end":137,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":122998,"byte_end":123001,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123006,"byte_end":123020,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123025,"byte_end":123028,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123033,"byte_end":123040,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Point;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123045,"byte_end":123066,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ let a = Point::new(3.3, 3.6).trunc();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123071,"byte_end":123112,"line_start":143,"line_end":143,"column_start":5,"column_end":46}},{"value":"/ let b = Point::new(3.0, -3.1).trunc();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123117,"byte_end":123159,"line_start":144,"line_end":144,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(a.x, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123164,"byte_end":123189,"line_start":145,"line_end":145,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.y, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123194,"byte_end":123219,"line_start":146,"line_end":146,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.x, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123224,"byte_end":123249,"line_start":147,"line_end":147,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.y, -3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123254,"byte_end":123280,"line_start":148,"line_end":148,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123285,"byte_end":123292,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123297,"byte_end":123306,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1326},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":126666,"byte_end":126673,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"QuadBez","qualname":"::quadbez::QuadBez","value":"QuadBez { p0, p1, p2 }","parent":null,"children":[{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329}],"decl_id":null,"docs":" A single quadratic Bézier segment.\n","sig":null,"attributes":[{"value":"/ A single quadratic Bézier segment.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":126474,"byte_end":126513,"line_start":14,"line_end":14,"column_start":1,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":126632,"byte_end":126654,"line_start":17,"line_end":17,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1327},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":126684,"byte_end":126686,"line_start":19,"line_end":19,"column_start":9,"column_end":11},"name":"p0","qualname":"::quadbez::QuadBez::p0","value":"point::Point","parent":{"krate":0,"index":1326},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1328},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":126703,"byte_end":126705,"line_start":20,"line_end":20,"column_start":9,"column_end":11},"name":"p1","qualname":"::quadbez::QuadBez::p1","value":"point::Point","parent":{"krate":0,"index":1326},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1329},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":126722,"byte_end":126724,"line_start":21,"line_end":21,"column_start":9,"column_end":11},"name":"p2","qualname":"::quadbez::QuadBez::p2","value":"point::Point","parent":{"krate":0,"index":1326},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":126824,"byte_end":126827,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<QuadBez>::new","value":"pub fn new<V: Into<Point>>(V, V, V) -> QuadBez","parent":null,"children":[],"decl_id":null,"docs":" Create a new quadratic Bézier segment.\n","sig":null,"attributes":[{"value":"/ Create a new quadratic Bézier segment.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":126755,"byte_end":126798,"line_start":25,"line_end":25,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":126803,"byte_end":126812,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":127137,"byte_end":127142,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"raise","qualname":"<QuadBez>::raise","value":"pub fn raise(&Self) -> CubicBez","parent":null,"children":[],"decl_id":null,"docs":" Raise the order by 1.","sig":null,"attributes":[{"value":"/ Raise the order by 1.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":126998,"byte_end":127023,"line_start":35,"line_end":35,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":127028,"byte_end":127031,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Returns a cubic Bézier segment that exactly represents this quadratic.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":127036,"byte_end":127111,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":127116,"byte_end":127125,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1339},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":141463,"byte_end":141467,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Rect","qualname":"::rect::Rect","value":"Rect { x0, y0, x1, y1 }","parent":null,"children":[{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343}],"decl_id":null,"docs":" A rectangle.\n","sig":null,"attributes":[{"value":"/ A rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":141315,"byte_end":141331,"line_start":8,"line_end":8,"column_start":1,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":1340},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":141524,"byte_end":141526,"line_start":13,"line_end":13,"column_start":9,"column_end":11},"name":"x0","qualname":"::rect::Rect::x0","value":"f64","parent":{"krate":0,"index":1339},"children":[],"decl_id":null,"docs":" The minimum x coordinate (left edge).\n","sig":null,"attributes":[{"value":"/ The minimum x coordinate (left edge).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":141474,"byte_end":141515,"line_start":12,"line_end":12,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1341},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":141603,"byte_end":141605,"line_start":15,"line_end":15,"column_start":9,"column_end":11},"name":"y0","qualname":"::rect::Rect::y0","value":"f64","parent":{"krate":0,"index":1339},"children":[],"decl_id":null,"docs":" The minimum y coordinate (top edge in y-down spaces).\n","sig":null,"attributes":[{"value":"/ The minimum y coordinate (top edge in y-down spaces).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":141537,"byte_end":141594,"line_start":14,"line_end":14,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":1342},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":141667,"byte_end":141669,"line_start":17,"line_end":17,"column_start":9,"column_end":11},"name":"x1","qualname":"::rect::Rect::x1","value":"f64","parent":{"krate":0,"index":1339},"children":[],"decl_id":null,"docs":" The maximum x coordinate (right edge).\n","sig":null,"attributes":[{"value":"/ The maximum x coordinate (right edge).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":141616,"byte_end":141658,"line_start":16,"line_end":16,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":141749,"byte_end":141751,"line_start":19,"line_end":19,"column_start":9,"column_end":11},"name":"y1","qualname":"::rect::Rect::y1","value":"f64","parent":{"krate":0,"index":1339},"children":[],"decl_id":null,"docs":" The maximum y coordinate (bottom edge in y-down spaces).\n","sig":null,"attributes":[{"value":"/ The maximum y coordinate (bottom edge in y-down spaces).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":141680,"byte_end":141740,"line_start":18,"line_end":18,"column_start":5,"column_end":65}}]},{"kind":"Const","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":141830,"byte_end":141834,"line_start":24,"line_end":24,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::rect::Rect::ZERO","value":"Rect","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" The empty rectangle at the origin.\n","sig":null,"attributes":[{"value":"/ The empty rectangle at the origin.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":141777,"byte_end":141815,"line_start":23,"line_end":23,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":141964,"byte_end":141967,"line_start":28,"line_end":28,"column_start":18,"column_end":21},"name":"new","qualname":"<Rect>::new","value":"pub const fn new(f64, f64, f64, f64) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" A new rectangle from minimum and maximum coordinates.\n","sig":null,"attributes":[{"value":"/ A new rectangle from minimum and maximum coordinates.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":141875,"byte_end":141932,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":141937,"byte_end":141946,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":142187,"byte_end":142198,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"from_points","qualname":"<Rect>::from_points","value":"pub fn from_points<impl Into<Point>: Into<Point>,\n                   impl Into<Point>: Into<Point>>(impl Into<Point>,\n                                                  impl Into<Point>) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" A new rectangle from two points.","sig":null,"attributes":[{"value":"/ A new rectangle from two points.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":142057,"byte_end":142093,"line_start":32,"line_end":32,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":142098,"byte_end":142101,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The result will have non-negative width and height.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":142106,"byte_end":142161,"line_start":34,"line_end":34,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":142166,"byte_end":142175,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":142503,"byte_end":142519,"line_start":46,"line_end":46,"column_start":12,"column_end":28},"name":"from_origin_size","qualname":"<Rect>::from_origin_size","value":"pub fn from_origin_size<impl Into<Point>: Into<Point>,\n                        impl Into<Size>: Into<Size>>(impl Into<Point>,\n                                                     impl Into<Size>) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" A new rectangle from origin and size.","sig":null,"attributes":[{"value":"/ A new rectangle from origin and size.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":142368,"byte_end":142409,"line_start":42,"line_end":42,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":142414,"byte_end":142417,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ The result will have non-negative width and height.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":142422,"byte_end":142477,"line_start":44,"line_end":44,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":142482,"byte_end":142491,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":142759,"byte_end":142775,"line_start":53,"line_end":53,"column_start":12,"column_end":28},"name":"from_center_size","qualname":"<Rect>::from_center_size","value":"pub fn from_center_size<impl Into<Point>: Into<Point>,\n                        impl Into<Size>: Into<Size>>(impl Into<Point>,\n                                                     impl Into<Size>) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" A new rectangle from center and size.\n","sig":null,"attributes":[{"value":"/ A new rectangle from center and size.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":142692,"byte_end":142733,"line_start":51,"line_end":51,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":142738,"byte_end":142747,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143187,"byte_end":143198,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"with_origin","qualname":"<Rect>::with_origin","value":"pub fn with_origin<impl Into<Point>: Into<Point>>(Self, impl Into<Point>)\n-> Rect","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Rect` with the same size as `self` and a new origin.\n","sig":null,"attributes":[{"value":"/ Create a new `Rect` with the same size as `self` and a new origin.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143091,"byte_end":143161,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143166,"byte_end":143175,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143400,"byte_end":143409,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"with_size","qualname":"<Rect>::with_size","value":"pub fn with_size<impl Into<Size>: Into<Size>>(Self, impl Into<Size>) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Rect` with the same origin as `self` and a new size.\n","sig":null,"attributes":[{"value":"/ Create a new `Rect` with the same origin as `self` and a new size.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143304,"byte_end":143374,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143379,"byte_end":143388,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143979,"byte_end":143984,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"inset","qualname":"<Rect>::inset","value":"pub fn inset<impl Into<Insets>: Into<Insets>>(Self, impl Into<Insets>) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Rect` by applying the [`Insets`].","sig":null,"attributes":[{"value":"/ Create a new `Rect` by applying the [`Insets`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143512,"byte_end":143563,"line_start":76,"line_end":76,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143568,"byte_end":143571,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This will not preserve negative width and height.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143576,"byte_end":143629,"line_start":78,"line_end":78,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143634,"byte_end":143637,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143642,"byte_end":143656,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143661,"byte_end":143664,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143669,"byte_end":143676,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Rect;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143681,"byte_end":143701,"line_start":83,"line_end":83,"column_start":5,"column_end":25}},{"value":"/ let inset_rect = Rect::new(0., 0., 10., 10.,).inset(2.);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143706,"byte_end":143766,"line_start":84,"line_end":84,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(inset_rect.width(), 14.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143771,"byte_end":143812,"line_start":85,"line_end":85,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(inset_rect.x0, -2.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143817,"byte_end":143853,"line_start":86,"line_end":86,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(inset_rect.x1, 12.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143858,"byte_end":143894,"line_start":87,"line_end":87,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143899,"byte_end":143906,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143911,"byte_end":143914,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ [`Insets`]: struct.Insets.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143919,"byte_end":143953,"line_start":90,"line_end":90,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":143958,"byte_end":143967,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144179,"byte_end":144184,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"width","qualname":"<Rect>::width","value":"pub fn width(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The width of the rectangle.","sig":null,"attributes":[{"value":"/ The width of the rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144068,"byte_end":144099,"line_start":96,"line_end":96,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144104,"byte_end":144107,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Note: nothing forbids negative width.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144112,"byte_end":144153,"line_start":98,"line_end":98,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144158,"byte_end":144167,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144351,"byte_end":144357,"line_start":108,"line_end":108,"column_start":12,"column_end":18},"name":"height","qualname":"<Rect>::height","value":"pub fn height(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The height of the rectangle.","sig":null,"attributes":[{"value":"/ The height of the rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144238,"byte_end":144270,"line_start":104,"line_end":104,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144275,"byte_end":144278,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note: nothing forbids negative height.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144283,"byte_end":144325,"line_start":106,"line_end":106,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144330,"byte_end":144339,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144505,"byte_end":144510,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"min_x","qualname":"<Rect>::min_x","value":"pub fn min_x(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the minimum value for the x-coordinate of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the minimum value for the x-coordinate of the rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144411,"byte_end":144479,"line_start":112,"line_end":112,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144484,"byte_end":144493,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144661,"byte_end":144666,"line_start":120,"line_end":120,"column_start":12,"column_end":17},"name":"max_x","qualname":"<Rect>::max_x","value":"pub fn max_x(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum value for the x-coordinate of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the maximum value for the x-coordinate of the rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144567,"byte_end":144635,"line_start":118,"line_end":118,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144640,"byte_end":144649,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144817,"byte_end":144822,"line_start":126,"line_end":126,"column_start":12,"column_end":17},"name":"min_y","qualname":"<Rect>::min_y","value":"pub fn min_y(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the minimum value for the y-coordinate of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the minimum value for the y-coordinate of the rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144723,"byte_end":144791,"line_start":124,"line_end":124,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144796,"byte_end":144805,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144973,"byte_end":144978,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"max_y","qualname":"<Rect>::max_y","value":"pub fn max_y(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum value for the y-coordinate of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the maximum value for the y-coordinate of the rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144879,"byte_end":144947,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":144952,"byte_end":144961,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145203,"byte_end":145209,"line_start":141,"line_end":141,"column_start":12,"column_end":18},"name":"origin","qualname":"<Rect>::origin","value":"pub fn origin(&Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" The origin of the rectangle.","sig":null,"attributes":[{"value":"/ The origin of the rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145035,"byte_end":145067,"line_start":136,"line_end":136,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145072,"byte_end":145075,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This is the top left corner in a y-down space and with","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145080,"byte_end":145138,"line_start":138,"line_end":138,"column_start":5,"column_end":63}},{"value":"/ non-negative width and height.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145143,"byte_end":145177,"line_start":139,"line_end":139,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145182,"byte_end":145191,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145332,"byte_end":145336,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"size","qualname":"<Rect>::size","value":"pub fn size(&Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" The size of the rectangle.\n","sig":null,"attributes":[{"value":"/ The size of the rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145276,"byte_end":145306,"line_start":145,"line_end":145,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145311,"byte_end":145320,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145468,"byte_end":145472,"line_start":153,"line_end":153,"column_start":12,"column_end":16},"name":"area","qualname":"<Rect>::area","value":"pub fn area(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The area of the rectangle.\n","sig":null,"attributes":[{"value":"/ The area of the rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145412,"byte_end":145442,"line_start":151,"line_end":151,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145447,"byte_end":145456,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145601,"byte_end":145607,"line_start":159,"line_end":159,"column_start":12,"column_end":18},"name":"center","qualname":"<Rect>::center","value":"pub fn center(&Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" The center point of the rectangle.\n","sig":null,"attributes":[{"value":"/ The center point of the rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145537,"byte_end":145575,"line_start":157,"line_end":157,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145580,"byte_end":145589,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145785,"byte_end":145793,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"contains","qualname":"<Rect>::contains","value":"pub fn contains(&Self, Point) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `point` lies within `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `point` lies within `self`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145710,"byte_end":145759,"line_start":163,"line_end":163,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145764,"byte_end":145773,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":146135,"byte_end":146138,"line_start":174,"line_end":174,"column_start":12,"column_end":15},"name":"abs","qualname":"<Rect>::abs","value":"pub fn abs(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Take absolute value of width and height.","sig":null,"attributes":[{"value":"/ Take absolute value of width and height.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145927,"byte_end":145971,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145976,"byte_end":145979,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ The resulting rect has the same extents as the original, but is","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":145984,"byte_end":146051,"line_start":171,"line_end":171,"column_start":5,"column_end":72}},{"value":"/ guaranteed to have non-negative width and height.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":146056,"byte_end":146109,"line_start":172,"line_end":172,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":146114,"byte_end":146123,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":146433,"byte_end":146438,"line_start":183,"line_end":183,"column_start":12,"column_end":17},"name":"union","qualname":"<Rect>::union","value":"pub fn union(&Self, Rect) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" The smallest rectangle enclosing two rectangles.","sig":null,"attributes":[{"value":"/ The smallest rectangle enclosing two rectangles.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":146278,"byte_end":146330,"line_start":179,"line_end":179,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":146335,"byte_end":146338,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Results are valid only if width and height are non-negative.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":146343,"byte_end":146407,"line_start":181,"line_end":181,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":146412,"byte_end":146421,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":146967,"byte_end":146975,"line_start":199,"line_end":199,"column_start":12,"column_end":20},"name":"union_pt","qualname":"<Rect>::union_pt","value":"pub fn union_pt(&Self, Point) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Compute the union with one point.","sig":null,"attributes":[{"value":"/ Compute the union with one point.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":146649,"byte_end":146686,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":146691,"byte_end":146694,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This method includes the perimeter of zero-area rectangles.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":146699,"byte_end":146762,"line_start":194,"line_end":194,"column_start":5,"column_end":68}},{"value":"/ Thus, a succession of `union_pt` operations on a series of","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":146767,"byte_end":146829,"line_start":195,"line_end":195,"column_start":5,"column_end":67}},{"value":"/ points yields their enclosing rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":146834,"byte_end":146878,"line_start":196,"line_end":196,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":146883,"byte_end":146886,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Results are valid only if width and height are non-negative.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":146891,"byte_end":146955,"line_start":198,"line_end":198,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":147380,"byte_end":147389,"line_start":213,"line_end":213,"column_start":12,"column_end":21},"name":"intersect","qualname":"<Rect>::intersect","value":"pub fn intersect(&Self, Rect) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" The intersection of two rectangles.","sig":null,"attributes":[{"value":"/ The intersection of two rectangles.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":147168,"byte_end":147207,"line_start":208,"line_end":208,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":147212,"byte_end":147215,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The result is zero-area if either input has negative width or","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":147220,"byte_end":147285,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/ height. The result always has non-negative width and height.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":147290,"byte_end":147354,"line_start":211,"line_end":211,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":147359,"byte_end":147368,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":147876,"byte_end":147883,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"inflate","qualname":"<Rect>::inflate","value":"pub fn inflate(&Self, f64, f64) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Expand a rectangle by a constant amount in both directions.","sig":null,"attributes":[{"value":"/ Expand a rectangle by a constant amount in both directions.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":147641,"byte_end":147704,"line_start":221,"line_end":221,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":147709,"byte_end":147712,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The logic simply applies the amount in each direction. If rectangle","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":147717,"byte_end":147788,"line_start":223,"line_end":223,"column_start":5,"column_end":76}},{"value":"/ area or added dimensions are negative, this could give odd results.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":147793,"byte_end":147864,"line_start":224,"line_end":224,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148482,"byte_end":148487,"line_start":248,"line_end":248,"column_start":12,"column_end":17},"name":"round","qualname":"<Rect>::round","value":"pub fn round(Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Rect`,\n with each coordinate value rounded to the nearest integer.","sig":null,"attributes":[{"value":"/ Returns a new `Rect`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148084,"byte_end":148109,"line_start":234,"line_end":234,"column_start":5,"column_end":30}},{"value":"/ with each coordinate value rounded to the nearest integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148114,"byte_end":148176,"line_start":235,"line_end":235,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148181,"byte_end":148184,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148189,"byte_end":148203,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148208,"byte_end":148211,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148216,"byte_end":148223,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Rect;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148228,"byte_end":148248,"line_start":240,"line_end":240,"column_start":5,"column_end":25}},{"value":"/ let rect = Rect::new(3.3, 3.6, 3.0, -3.1).round();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148253,"byte_end":148307,"line_start":241,"line_end":241,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(rect.x0, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148312,"byte_end":148341,"line_start":242,"line_end":242,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y0, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148346,"byte_end":148375,"line_start":243,"line_end":243,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.x1, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148380,"byte_end":148409,"line_start":244,"line_end":244,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y1, -3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148414,"byte_end":148444,"line_start":245,"line_end":245,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148449,"byte_end":148456,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148461,"byte_end":148470,"line_start":247,"line_end":247,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149104,"byte_end":149108,"line_start":272,"line_end":272,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Rect>::ceil","value":"pub fn ceil(Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Rect`,\n with each coordinate value rounded up to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Rect`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148660,"byte_end":148685,"line_start":257,"line_end":257,"column_start":5,"column_end":30}},{"value":"/ with each coordinate value rounded up to the nearest integer,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148690,"byte_end":148755,"line_start":258,"line_end":258,"column_start":5,"column_end":70}},{"value":"/ unless they are already an integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148760,"byte_end":148799,"line_start":259,"line_end":259,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148804,"byte_end":148807,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148812,"byte_end":148826,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148831,"byte_end":148834,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148839,"byte_end":148846,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Rect;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148851,"byte_end":148871,"line_start":264,"line_end":264,"column_start":5,"column_end":25}},{"value":"/ let rect = Rect::new(3.3, 3.6, 3.0, -3.1).ceil();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148876,"byte_end":148929,"line_start":265,"line_end":265,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(rect.x0, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148934,"byte_end":148963,"line_start":266,"line_end":266,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y0, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":148968,"byte_end":148997,"line_start":267,"line_end":267,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.x1, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149002,"byte_end":149031,"line_start":268,"line_end":268,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y1, -3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149036,"byte_end":149066,"line_start":269,"line_end":269,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149071,"byte_end":149078,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149083,"byte_end":149092,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149724,"byte_end":149729,"line_start":296,"line_end":296,"column_start":12,"column_end":17},"name":"floor","qualname":"<Rect>::floor","value":"pub fn floor(Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Rect`,\n with each coordinate value rounded down to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Rect`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149277,"byte_end":149302,"line_start":281,"line_end":281,"column_start":5,"column_end":30}},{"value":"/ with each coordinate value rounded down to the nearest integer,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149307,"byte_end":149374,"line_start":282,"line_end":282,"column_start":5,"column_end":72}},{"value":"/ unless they are already an integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149379,"byte_end":149418,"line_start":283,"line_end":283,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149423,"byte_end":149426,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149431,"byte_end":149445,"line_start":285,"line_end":285,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149450,"byte_end":149453,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149458,"byte_end":149465,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Rect;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149470,"byte_end":149490,"line_start":288,"line_end":288,"column_start":5,"column_end":25}},{"value":"/ let rect = Rect::new(3.3, 3.6, 3.0, -3.1).floor();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149495,"byte_end":149549,"line_start":289,"line_end":289,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(rect.x0, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149554,"byte_end":149583,"line_start":290,"line_end":290,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y0, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149588,"byte_end":149617,"line_start":291,"line_end":291,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.x1, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149622,"byte_end":149651,"line_start":292,"line_end":292,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y1, -4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149656,"byte_end":149686,"line_start":293,"line_end":293,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149691,"byte_end":149698,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149703,"byte_end":149712,"line_start":295,"line_end":295,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":151288,"byte_end":151294,"line_start":345,"line_end":345,"column_start":12,"column_end":18},"name":"expand","qualname":"<Rect>::expand","value":"pub fn expand(Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Rect`,\n with each coordinate value rounded away from the center of the `Rect`\n to the nearest integer, unless they are already an integer.\n That is to say this function will return the smallest possible `Rect`\n with integer coordinates that is a superset of `self`.","sig":null,"attributes":[{"value":"/ Returns a new `Rect`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149902,"byte_end":149927,"line_start":305,"line_end":305,"column_start":5,"column_end":30}},{"value":"/ with each coordinate value rounded away from the center of the `Rect`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":149932,"byte_end":150005,"line_start":306,"line_end":306,"column_start":5,"column_end":78}},{"value":"/ to the nearest integer, unless they are already an integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150010,"byte_end":150073,"line_start":307,"line_end":307,"column_start":5,"column_end":68}},{"value":"/ That is to say this function will return the smallest possible `Rect`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150078,"byte_end":150151,"line_start":308,"line_end":308,"column_start":5,"column_end":78}},{"value":"/ with integer coordinates that is a superset of `self`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150156,"byte_end":150214,"line_start":309,"line_end":309,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150219,"byte_end":150222,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150227,"byte_end":150241,"line_start":311,"line_end":311,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150246,"byte_end":150249,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150254,"byte_end":150261,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Rect;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150266,"byte_end":150286,"line_start":314,"line_end":314,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150291,"byte_end":150294,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ // In positive space","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150299,"byte_end":150323,"line_start":316,"line_end":316,"column_start":5,"column_end":29}},{"value":"/ let rect = Rect::new(3.3, 3.6, 5.6, 4.1).expand();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150328,"byte_end":150382,"line_start":317,"line_end":317,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(rect.x0, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150387,"byte_end":150416,"line_start":318,"line_end":318,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y0, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150421,"byte_end":150450,"line_start":319,"line_end":319,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.x1, 6.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150455,"byte_end":150484,"line_start":320,"line_end":320,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y1, 5.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150489,"byte_end":150518,"line_start":321,"line_end":321,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150523,"byte_end":150526,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ // In both positive and negative space","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150531,"byte_end":150573,"line_start":323,"line_end":323,"column_start":5,"column_end":47}},{"value":"/ let rect = Rect::new(-3.3, -3.6, 5.6, 4.1).expand();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150578,"byte_end":150634,"line_start":324,"line_end":324,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(rect.x0, -4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150639,"byte_end":150669,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.y0, -4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150674,"byte_end":150704,"line_start":326,"line_end":326,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.x1, 6.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150709,"byte_end":150738,"line_start":327,"line_end":327,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y1, 5.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150743,"byte_end":150772,"line_start":328,"line_end":328,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150777,"byte_end":150780,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ // In negative space","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150785,"byte_end":150809,"line_start":330,"line_end":330,"column_start":5,"column_end":29}},{"value":"/ let rect = Rect::new(-5.6, -4.1, -3.3, -3.6).expand();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150814,"byte_end":150872,"line_start":331,"line_end":331,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(rect.x0, -6.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150877,"byte_end":150907,"line_start":332,"line_end":332,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.y0, -5.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150912,"byte_end":150942,"line_start":333,"line_end":333,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.x1, -3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150947,"byte_end":150977,"line_start":334,"line_end":334,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.y1, -3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":150982,"byte_end":151012,"line_start":335,"line_end":335,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":151017,"byte_end":151020,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ // Inverse orientation","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":151025,"byte_end":151051,"line_start":337,"line_end":337,"column_start":5,"column_end":31}},{"value":"/ let rect = Rect::new(5.6, -3.6, 3.3, -4.1).expand();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":151056,"byte_end":151112,"line_start":338,"line_end":338,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(rect.x0, 6.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":151117,"byte_end":151146,"line_start":339,"line_end":339,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y0, -3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":151151,"byte_end":151181,"line_start":340,"line_end":340,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.x1, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":151186,"byte_end":151215,"line_start":341,"line_end":341,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y1, -5.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":151220,"byte_end":151250,"line_start":342,"line_end":342,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":151255,"byte_end":151262,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":151267,"byte_end":151276,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":153129,"byte_end":153134,"line_start":400,"line_end":400,"column_start":12,"column_end":17},"name":"trunc","qualname":"<Rect>::trunc","value":"pub fn trunc(Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Rect`,\n with each coordinate value rounded towards the center of the `Rect`\n to the nearest integer, unless they are already an integer.\n That is to say this function will return the biggest possible `Rect`\n with integer coordinates that is a subset of `self`.","sig":null,"attributes":[{"value":"/ Returns a new `Rect`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":151752,"byte_end":151777,"line_start":360,"line_end":360,"column_start":5,"column_end":30}},{"value":"/ with each coordinate value rounded towards the center of the `Rect`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":151782,"byte_end":151853,"line_start":361,"line_end":361,"column_start":5,"column_end":76}},{"value":"/ to the nearest integer, unless they are already an integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":151858,"byte_end":151921,"line_start":362,"line_end":362,"column_start":5,"column_end":68}},{"value":"/ That is to say this function will return the biggest possible `Rect`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":151926,"byte_end":151998,"line_start":363,"line_end":363,"column_start":5,"column_end":77}},{"value":"/ with integer coordinates that is a subset of `self`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152003,"byte_end":152059,"line_start":364,"line_end":364,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152064,"byte_end":152067,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152072,"byte_end":152086,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152091,"byte_end":152094,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152099,"byte_end":152106,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Rect;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152111,"byte_end":152131,"line_start":369,"line_end":369,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152136,"byte_end":152139,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ // In positive space","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152144,"byte_end":152168,"line_start":371,"line_end":371,"column_start":5,"column_end":29}},{"value":"/ let rect = Rect::new(3.3, 3.6, 5.6, 4.1).trunc();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152173,"byte_end":152226,"line_start":372,"line_end":372,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(rect.x0, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152231,"byte_end":152260,"line_start":373,"line_end":373,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y0, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152265,"byte_end":152294,"line_start":374,"line_end":374,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.x1, 5.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152299,"byte_end":152328,"line_start":375,"line_end":375,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y1, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152333,"byte_end":152362,"line_start":376,"line_end":376,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152367,"byte_end":152370,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ // In both positive and negative space","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152375,"byte_end":152417,"line_start":378,"line_end":378,"column_start":5,"column_end":47}},{"value":"/ let rect = Rect::new(-3.3, -3.6, 5.6, 4.1).trunc();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152422,"byte_end":152477,"line_start":379,"line_end":379,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(rect.x0, -3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152482,"byte_end":152512,"line_start":380,"line_end":380,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.y0, -3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152517,"byte_end":152547,"line_start":381,"line_end":381,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.x1, 5.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152552,"byte_end":152581,"line_start":382,"line_end":382,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y1, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152586,"byte_end":152615,"line_start":383,"line_end":383,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152620,"byte_end":152623,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ // In negative space","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152628,"byte_end":152652,"line_start":385,"line_end":385,"column_start":5,"column_end":29}},{"value":"/ let rect = Rect::new(-5.6, -4.1, -3.3, -3.6).trunc();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152657,"byte_end":152714,"line_start":386,"line_end":386,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(rect.x0, -5.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152719,"byte_end":152749,"line_start":387,"line_end":387,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.y0, -4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152754,"byte_end":152784,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.x1, -4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152789,"byte_end":152819,"line_start":389,"line_end":389,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.y1, -4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152824,"byte_end":152854,"line_start":390,"line_end":390,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152859,"byte_end":152862,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ // Inverse orientation","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152867,"byte_end":152893,"line_start":392,"line_end":392,"column_start":5,"column_end":31}},{"value":"/ let rect = Rect::new(5.6, -3.6, 3.3, -4.1).trunc();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152898,"byte_end":152953,"line_start":393,"line_end":393,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(rect.x0, 5.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152958,"byte_end":152987,"line_start":394,"line_end":394,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y0, -4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":152992,"byte_end":153022,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(rect.x1, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":153027,"byte_end":153056,"line_start":396,"line_end":396,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(rect.y1, -4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":153061,"byte_end":153091,"line_start":397,"line_end":397,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":153096,"byte_end":153103,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":153108,"byte_end":153117,"line_start":399,"line_end":399,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":153765,"byte_end":153780,"line_start":420,"line_end":420,"column_start":12,"column_end":27},"name":"to_rounded_rect","qualname":"<Rect>::to_rounded_rect","value":"pub fn to_rounded_rect(Self, f64) -> RoundedRect","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`RoundedRect`] from this `Rect` and the provided\n corner radius.","sig":null,"attributes":[{"value":"/ Creates a new [`RoundedRect`] from this `Rect` and the provided","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":153592,"byte_end":153659,"line_start":415,"line_end":415,"column_start":5,"column_end":72}},{"value":"/ corner radius.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":153664,"byte_end":153682,"line_start":416,"line_end":416,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":153687,"byte_end":153690,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ [`RoundedRect`]: struct.RoundedRect.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":153695,"byte_end":153739,"line_start":418,"line_end":418,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":153744,"byte_end":153753,"line_start":419,"line_end":419,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154007,"byte_end":154017,"line_start":428,"line_end":428,"column_start":12,"column_end":22},"name":"to_ellipse","qualname":"<Rect>::to_ellipse","value":"pub fn to_ellipse(Self) -> Ellipse","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Ellipse`] that is bounded by this `Rect`.","sig":null,"attributes":[{"value":"/ Returns the [`Ellipse`] that is bounded by this `Rect`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":153873,"byte_end":153932,"line_start":424,"line_end":424,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":153937,"byte_end":153940,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ [`Ellipse`]: struct.Ellipse.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":153945,"byte_end":153981,"line_start":426,"line_end":426,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":153986,"byte_end":153995,"line_start":427,"line_end":427,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154426,"byte_end":154438,"line_start":438,"line_end":438,"column_start":12,"column_end":24},"name":"aspect_ratio","qualname":"<Rect>::aspect_ratio","value":"pub fn aspect_ratio(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The aspect ratio of the `Rect`.","sig":null,"attributes":[{"value":"/ The aspect ratio of the `Rect`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154081,"byte_end":154116,"line_start":432,"line_end":432,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154121,"byte_end":154124,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ This is defined as the height divided by the width. It measures the \"squareness\" of the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154129,"byte_end":154220,"line_start":434,"line_end":434,"column_start":5,"column_end":96}},{"value":"/ rectangle (a value of `1` is square). If the width is `0` the output will be `sign(y1 - y0)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154225,"byte_end":154320,"line_start":435,"line_end":435,"column_start":5,"column_end":100}},{"value":"/ * infinity`. If The width and height are `0`, the result will be `NaN`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154325,"byte_end":154400,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154405,"byte_end":154414,"line_start":437,"line_end":437,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":155258,"byte_end":155290,"line_start":461,"line_end":461,"column_start":12,"column_end":44},"name":"contained_rect_with_aspect_ratio","qualname":"<Rect>::contained_rect_with_aspect_ratio","value":"pub fn contained_rect_with_aspect_ratio(&Self, f64) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns the largest possible `Rect` that is fully contained in `self` with the given\n `aspect_ratio`.","sig":null,"attributes":[{"value":"/ Returns the largest possible `Rect` that is fully contained in `self` with the given","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154501,"byte_end":154589,"line_start":442,"line_end":442,"column_start":5,"column_end":93}},{"value":"/ `aspect_ratio`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154594,"byte_end":154613,"line_start":443,"line_end":443,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154618,"byte_end":154621,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ The aspect ratio is specified fractionally, as `height / width`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154626,"byte_end":154694,"line_start":445,"line_end":445,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154699,"byte_end":154702,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ The resulting rectangle will be centered if it is smaller than the input rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154707,"byte_end":154794,"line_start":447,"line_end":447,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154799,"byte_end":154802,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ For the special case where the aspect ratio is `1.0`, the resulting `Rect` will be square.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154807,"byte_end":154901,"line_start":449,"line_end":449,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154906,"byte_end":154909,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154914,"byte_end":154928,"line_start":451,"line_end":451,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154933,"byte_end":154936,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154941,"byte_end":154948,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"/ # use kurbo::Rect;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154953,"byte_end":154975,"line_start":454,"line_end":454,"column_start":5,"column_end":27}},{"value":"/ let outer = Rect::new(0.0, 0.0, 10.0, 20.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":154980,"byte_end":155028,"line_start":455,"line_end":455,"column_start":5,"column_end":53}},{"value":"/ let inner = outer.contained_rect_with_aspect_ratio(1.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":155033,"byte_end":155093,"line_start":456,"line_end":456,"column_start":5,"column_end":65}},{"value":"/ // The new `Rect` is a square centered at the center of `outer`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":155098,"byte_end":155166,"line_start":457,"line_end":457,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(inner, Rect::new(0.0, 5.0, 10.0, 15.0));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":155171,"byte_end":155226,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":155231,"byte_end":155238,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":155243,"byte_end":155246,"line_start":460,"line_end":460,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":157195,"byte_end":157207,"line_start":531,"line_end":531,"column_start":12,"column_end":24},"name":"RectPathIter","qualname":"::rect::RectPathIter","value":"RectPathIter {  }","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1353},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":163800,"byte_end":163811,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"RoundedRect","qualname":"::rounded_rect::RoundedRect","value":"RoundedRect {  }","parent":null,"children":[{"krate":0,"index":1354},{"krate":0,"index":1355}],"decl_id":null,"docs":" A rectangle with equally rounded corners.","sig":null,"attributes":[{"value":"/ A rectangle with equally rounded corners.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":163267,"byte_end":163312,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":163313,"byte_end":163316,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ By construction the rounded rectangle will have","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":163317,"byte_end":163368,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"/ non-negative dimensions and radius clamped to half size of the rect.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":163369,"byte_end":163441,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":163442,"byte_end":163445,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The easiest way to create a `RoundedRect` is often to create a [`Rect`],","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":163446,"byte_end":163522,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ and then call [`to_rounded_rect`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":163523,"byte_end":163561,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":163562,"byte_end":163565,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Rect`]: struct.Rect.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":163566,"byte_end":163596,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/ [`to_rounded_rect`]: struct.Rect.html#method.to_rounded_rect","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":163597,"byte_end":163661,"line_start":15,"line_end":15,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":164106,"byte_end":164109,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<RoundedRect>::new","value":"pub fn new(f64, f64, f64, f64, f64) -> RoundedRect","parent":null,"children":[],"decl_id":null,"docs":" A new rectangle from minimum and maximum coordinates.","sig":null,"attributes":[{"value":"/ A new rectangle from minimum and maximum coordinates.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":163947,"byte_end":164004,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":164009,"byte_end":164012,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The result will have non-negative width, height and radius.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":164017,"byte_end":164080,"line_start":28,"line_end":28,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":164085,"byte_end":164094,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":164584,"byte_end":164593,"line_start":42,"line_end":42,"column_start":12,"column_end":21},"name":"from_rect","qualname":"<RoundedRect>::from_rect","value":"pub fn from_rect(Rect, f64) -> RoundedRect","parent":null,"children":[],"decl_id":null,"docs":" A new rounded rectangle from a rectangle and corner radius.","sig":null,"attributes":[{"value":"/ A new rounded rectangle from a rectangle and corner radius.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":164253,"byte_end":164316,"line_start":34,"line_end":34,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":164321,"byte_end":164324,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ The result will have non-negative width, height and radius.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":164329,"byte_end":164392,"line_start":36,"line_end":36,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":164397,"byte_end":164400,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ See also [`Rect::to_rounded_rect`], which offers the same utility.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":164405,"byte_end":164475,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":164480,"byte_end":164483,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ [`Rect::to_rounded_rect`]: struct.Rect.html#method.to_rounded_rect","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":164488,"byte_end":164558,"line_start":40,"line_end":40,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":164563,"byte_end":164572,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":165026,"byte_end":165037,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"from_points","qualname":"<RoundedRect>::from_points","value":"pub fn from_points<impl Into<Point>: Into<Point>,\n                   impl Into<Point>: Into<Point>>(impl Into<Point>,\n                                                  impl Into<Point>, f64)\n-> RoundedRect","parent":null,"children":[],"decl_id":null,"docs":" A new rectangle from two [`Point`]s.","sig":null,"attributes":[{"value":"/ A new rectangle from two [`Point`]s.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":164839,"byte_end":164879,"line_start":52,"line_end":52,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":164884,"byte_end":164887,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ The result will have non-negative width, height and radius.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":164892,"byte_end":164955,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":164960,"byte_end":164963,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ [`Point`]: struct.Point.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":164968,"byte_end":165000,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":165005,"byte_end":165014,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":165324,"byte_end":165340,"line_start":66,"line_end":66,"column_start":12,"column_end":28},"name":"from_origin_size","qualname":"<RoundedRect>::from_origin_size","value":"pub fn from_origin_size<impl Into<Point>: Into<Point>,\n                        impl Into<Size>: Into<Size>>(impl Into<Point>,\n                                                     impl Into<Size>, f64)\n-> RoundedRect","parent":null,"children":[],"decl_id":null,"docs":" A new rectangle from origin and size.","sig":null,"attributes":[{"value":"/ A new rectangle from origin and size.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":165181,"byte_end":165222,"line_start":62,"line_end":62,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":165227,"byte_end":165230,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ The result will have non-negative width, height and radius.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":165235,"byte_end":165298,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":165303,"byte_end":165312,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":165588,"byte_end":165593,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"width","qualname":"<RoundedRect>::width","value":"pub fn width(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The width of the rectangle.\n","sig":null,"attributes":[{"value":"/ The width of the rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":165531,"byte_end":165562,"line_start":74,"line_end":74,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":165567,"byte_end":165576,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":165705,"byte_end":165711,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"height","qualname":"<RoundedRect>::height","value":"pub fn height(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The height of the rectangle.\n","sig":null,"attributes":[{"value":"/ The height of the rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":165647,"byte_end":165679,"line_start":80,"line_end":80,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":165684,"byte_end":165693,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":165826,"byte_end":165832,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"radius","qualname":"<RoundedRect>::radius","value":"pub fn radius(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Radius of the rounded corners.\n","sig":null,"attributes":[{"value":"/ Radius of the rounded corners.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":165766,"byte_end":165800,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":165805,"byte_end":165814,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":165924,"byte_end":165928,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"rect","qualname":"<RoundedRect>::rect","value":"pub fn rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" The (non-rounded) rectangle.\n","sig":null,"attributes":[{"value":"/ The (non-rounded) rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":165880,"byte_end":165912,"line_start":92,"line_end":92,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":166096,"byte_end":166102,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"origin","qualname":"<RoundedRect>::origin","value":"pub fn origin(&Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" The origin of the rectangle.","sig":null,"attributes":[{"value":"/ The origin of the rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":165975,"byte_end":166007,"line_start":97,"line_end":97,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":166012,"byte_end":166015,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This is the top left corner in a y-down space.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":166020,"byte_end":166070,"line_start":99,"line_end":99,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":166075,"byte_end":166084,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":166223,"byte_end":166229,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"center","qualname":"<RoundedRect>::center","value":"pub fn center(&Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" The center point of the rectangle.\n","sig":null,"attributes":[{"value":"/ The center point of the rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":166159,"byte_end":166197,"line_start":105,"line_end":105,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":166202,"byte_end":166211,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":818},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":166310,"byte_end":166329,"line_start":113,"line_end":113,"column_start":12,"column_end":31},"name":"RoundedRectPathIter","qualname":"::rounded_rect::RoundedRectPathIter","value":"RoundedRectPathIter {  }","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":173172,"byte_end":173177,"line_start":6,"line_end":6,"column_start":11,"column_end":16},"name":"Shape","qualname":"::shape::Shape","value":"Shape: Sized","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863}],"decl_id":null,"docs":" A generic trait for open and closed shapes.\n","sig":null,"attributes":[{"value":"/ A generic trait for open and closed shapes.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":173114,"byte_end":173161,"line_start":5,"line_end":5,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":852},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":173247,"byte_end":173258,"line_start":8,"line_end":8,"column_start":10,"column_end":21},"name":"BezPathIter","qualname":"::shape::Shape::BezPathIter","value":"type BezPathIter: Iterator<Item = PathEl>;","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" The iterator resulting from `to_bez_path`.\n","sig":null,"attributes":[{"value":"/ The iterator resulting from `to_bez_path`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":173191,"byte_end":173237,"line_start":7,"line_end":7,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":174308,"byte_end":174319,"line_start":30,"line_end":30,"column_start":8,"column_end":19},"name":"to_bez_path","qualname":"::shape::Shape::to_bez_path","value":"pub fn to_bez_path(&Self, f64) -> Self::BezPathIter","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Convert to a Bézier path, as an iterator over path elements.","sig":null,"attributes":[{"value":"/ Convert to a Bézier path, as an iterator over path elements.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":173290,"byte_end":173355,"line_start":10,"line_end":10,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":173360,"byte_end":173363,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ Callers should exhaust the `as_` methods first, as those are","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":173368,"byte_end":173432,"line_start":12,"line_end":12,"column_start":5,"column_end":69}},{"value":"/ likely to be more efficient; in the general case, this","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":173437,"byte_end":173495,"line_start":13,"line_end":13,"column_start":5,"column_end":63}},{"value":"/ allocates.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":173500,"byte_end":173514,"line_start":14,"line_end":14,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":173519,"byte_end":173522,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ The `tolerance` parameter controls the accuracy of","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":173527,"byte_end":173581,"line_start":16,"line_end":16,"column_start":5,"column_end":59}},{"value":"/ conversion of geometric primitives to Bézier curves, as","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":173586,"byte_end":173646,"line_start":17,"line_end":17,"column_start":5,"column_end":64}},{"value":"/ curves such as circles cannot be represented exactly but","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":173651,"byte_end":173711,"line_start":18,"line_end":18,"column_start":5,"column_end":65}},{"value":"/ only approximated. For drawing as in UI elements, a value","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":173716,"byte_end":173777,"line_start":19,"line_end":19,"column_start":5,"column_end":66}},{"value":"/ of 0.1 is appropriate, as it is unlikely to be visible to","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":173782,"byte_end":173843,"line_start":20,"line_end":20,"column_start":5,"column_end":66}},{"value":"/ the eye. For scientific applications, a smaller value","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":173848,"byte_end":173905,"line_start":21,"line_end":21,"column_start":5,"column_end":62}},{"value":"/ might be appropriate. Note that in general the number of","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":173910,"byte_end":173970,"line_start":22,"line_end":22,"column_start":5,"column_end":65}},{"value":"/ cubic Bézier segments scales as `tolerance ^ (-1/6)`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":173975,"byte_end":174033,"line_start":23,"line_end":23,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":174038,"byte_end":174041,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ TODO: When [GAT's] land, the type of this can be changed to","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":174046,"byte_end":174109,"line_start":25,"line_end":25,"column_start":5,"column_end":68}},{"value":"/ contain a `&'a self` reference, which would let us take","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":174114,"byte_end":174173,"line_start":26,"line_end":26,"column_start":5,"column_end":64}},{"value":"/ iterators from complex shapes without cloning.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":174178,"byte_end":174228,"line_start":27,"line_end":27,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":174233,"byte_end":174236,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ [GAT's]: https://github.com/rust-lang/rust/issues/44265","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":174241,"byte_end":174300,"line_start":29,"line_end":29,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":174636,"byte_end":174649,"line_start":39,"line_end":39,"column_start":8,"column_end":21},"name":"into_bez_path","qualname":"::shape::Shape::into_bez_path","value":"pub fn into_bez_path(Self, f64) -> BezPath","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Convert into a Bézier path.","sig":null,"attributes":[{"value":"/ Convert into a Bézier path.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":174370,"byte_end":174402,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":174407,"byte_end":174410,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Currently, this always allocates. It is appropriate when","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":174415,"byte_end":174475,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"/ the resulting path is to be retained.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":174480,"byte_end":174521,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":174526,"byte_end":174529,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The `tolerance` parameter is the same as","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":174534,"byte_end":174578,"line_start":37,"line_end":37,"column_start":5,"column_end":49}},{"value":"/ [`to_bez_path()`](#tymethod.to_bez_path).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":174583,"byte_end":174628,"line_start":38,"line_end":38,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175274,"byte_end":175278,"line_start":56,"line_end":56,"column_start":8,"column_end":12},"name":"area","qualname":"::shape::Shape::area","value":"pub fn area(&Self) -> f64","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Signed area.","sig":null,"attributes":[{"value":"/ Signed area.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":174896,"byte_end":174912,"line_start":48,"line_end":48,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":174917,"byte_end":174920,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This method only produces meaningful results with closed shapes.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":174925,"byte_end":174993,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":174998,"byte_end":175001,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ The convention for positive area is that y increases when x is","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175006,"byte_end":175072,"line_start":52,"line_end":52,"column_start":5,"column_end":71}},{"value":"/ positive. Thus, it is clockwise when down is increasing y (the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175077,"byte_end":175143,"line_start":53,"line_end":53,"column_start":5,"column_end":71}},{"value":"/ usual convention for graphics), and anticlockwise when","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175148,"byte_end":175206,"line_start":54,"line_end":54,"column_start":5,"column_end":63}},{"value":"/ up is increasing y (the usual convention for math).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175211,"byte_end":175266,"line_start":55,"line_end":55,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175337,"byte_end":175346,"line_start":59,"line_end":59,"column_start":8,"column_end":17},"name":"perimeter","qualname":"::shape::Shape::perimeter","value":"pub fn perimeter(&Self, f64) -> f64","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Total length of perimeter.\n","sig":null,"attributes":[{"value":"/ Total length of perimeter.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175299,"byte_end":175329,"line_start":58,"line_end":58,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175846,"byte_end":175853,"line_start":71,"line_end":71,"column_start":8,"column_end":15},"name":"winding","qualname":"::shape::Shape::winding","value":"pub fn winding(&Self, Point) -> i32","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Winding number of point.","sig":null,"attributes":[{"value":"/ Winding number of point.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175382,"byte_end":175410,"line_start":61,"line_end":61,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175415,"byte_end":175418,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This method only produces meaningful results with closed shapes.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175423,"byte_end":175491,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175496,"byte_end":175499,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The sign of the winding number is consistent with that of [`area`],","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175504,"byte_end":175575,"line_start":65,"line_end":65,"column_start":5,"column_end":76}},{"value":"/ meaning it is +1 when the point is inside a positive area shape","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175580,"byte_end":175647,"line_start":66,"line_end":66,"column_start":5,"column_end":72}},{"value":"/ and -1 when it is inside a negative area shape. Of course, greater","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175652,"byte_end":175722,"line_start":67,"line_end":67,"column_start":5,"column_end":75}},{"value":"/ magnitude values are also possible when the shape is more complex.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175727,"byte_end":175797,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175802,"byte_end":175805,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ [`area`]: #tymethod.area","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175810,"byte_end":175838,"line_start":70,"line_end":70,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175944,"byte_end":175956,"line_start":74,"line_end":74,"column_start":8,"column_end":20},"name":"bounding_box","qualname":"::shape::Shape::bounding_box","value":"pub fn bounding_box(&Self) -> Rect","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" The smallest rectangle that encloses the shape.\n","sig":null,"attributes":[{"value":"/ The smallest rectangle that encloses the shape.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175885,"byte_end":175936,"line_start":73,"line_end":73,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":176032,"byte_end":176039,"line_start":77,"line_end":77,"column_start":8,"column_end":15},"name":"as_line","qualname":"::shape::Shape::as_line","value":"pub fn as_line(&Self) -> Option<Line>","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" If the shape is a line, make it available.\n","sig":null,"attributes":[{"value":"/ If the shape is a line, make it available.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":175978,"byte_end":176024,"line_start":76,"line_end":76,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":176148,"byte_end":176155,"line_start":82,"line_end":82,"column_start":8,"column_end":15},"name":"as_rect","qualname":"::shape::Shape::as_rect","value":"pub fn as_rect(&Self) -> Option<Rect>","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" If the shape is a rectangle, make it available.\n","sig":null,"attributes":[{"value":"/ If the shape is a rectangle, make it available.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":176089,"byte_end":176140,"line_start":81,"line_end":81,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":176272,"byte_end":176287,"line_start":87,"line_end":87,"column_start":8,"column_end":23},"name":"as_rounded_rect","qualname":"::shape::Shape::as_rounded_rect","value":"pub fn as_rounded_rect(&Self) -> Option<RoundedRect>","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" If the shape is a rounded rectangle, make it available.\n","sig":null,"attributes":[{"value":"/ If the shape is a rounded rectangle, make it available.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":176205,"byte_end":176264,"line_start":86,"line_end":86,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":176400,"byte_end":176409,"line_start":92,"line_end":92,"column_start":8,"column_end":17},"name":"as_circle","qualname":"::shape::Shape::as_circle","value":"pub fn as_circle(&Self) -> Option<Circle>","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" If the shape is a circle, make it available.\n","sig":null,"attributes":[{"value":"/ If the shape is a circle, make it available.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":176344,"byte_end":176392,"line_start":91,"line_end":91,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":176763,"byte_end":176776,"line_start":102,"line_end":102,"column_start":8,"column_end":21},"name":"as_path_slice","qualname":"::shape::Shape::as_path_slice","value":"pub fn as_path_slice(&Self) -> Option<&[PathEl]>","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" If the shape is stored as a slice of path elements, make\n that available.","sig":null,"attributes":[{"value":"/ If the shape is stored as a slice of path elements, make","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":176461,"byte_end":176521,"line_start":96,"line_end":96,"column_start":5,"column_end":65}},{"value":"/ that available.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":176526,"byte_end":176545,"line_start":97,"line_end":97,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":176550,"byte_end":176553,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Note: when GAT's land, a method like `to_bez_path` would be","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":176558,"byte_end":176621,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"/ able to iterate through the slice with no extra allocation,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":176626,"byte_end":176689,"line_start":100,"line_end":100,"column_start":5,"column_end":68}},{"value":"/ without making any assumption that storage is contiguous.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":176694,"byte_end":176755,"line_start":101,"line_end":101,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1367},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178131,"byte_end":178135,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Size","qualname":"::size::Size","value":"Size { width, height }","parent":null,"children":[{"krate":0,"index":1368},{"krate":0,"index":1369}],"decl_id":null,"docs":" A 2D size.\n","sig":null,"attributes":[{"value":"/ A 2D size.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":177985,"byte_end":177999,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178165,"byte_end":178170,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"width","qualname":"::size::Size::width","value":"f64","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" The width.\n","sig":null,"attributes":[{"value":"/ The width.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178142,"byte_end":178156,"line_start":13,"line_end":13,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":1369},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178205,"byte_end":178211,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"name":"height","qualname":"::size::Size::height","value":"f64","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" The height.\n","sig":null,"attributes":[{"value":"/ The height.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178181,"byte_end":178196,"line_start":15,"line_end":15,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178289,"byte_end":178293,"line_start":21,"line_end":21,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::size::Size::ZERO","value":"Size","parent":{"krate":0,"index":894},"children":[],"decl_id":null,"docs":" A size with zero width or height.\n","sig":null,"attributes":[{"value":"/ A size with zero width or height.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178237,"byte_end":178274,"line_start":20,"line_end":20,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178421,"byte_end":178424,"line_start":25,"line_end":25,"column_start":18,"column_end":21},"name":"new","qualname":"<Size>::new","value":"pub const fn new(f64, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Size` with the provided `width` and `height`.\n","sig":null,"attributes":[{"value":"/ Create a new `Size` with the provided `width` and `height`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178326,"byte_end":178389,"line_start":23,"line_end":23,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178394,"byte_end":178403,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178728,"byte_end":178736,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"max_side","qualname":"<Size>::max_side","value":"pub fn max_side(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the max of `width` and `height`.","sig":null,"attributes":[{"value":"/ Returns the max of `width` and `height`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178502,"byte_end":178546,"line_start":29,"line_end":29,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178551,"byte_end":178554,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178559,"byte_end":178573,"line_start":31,"line_end":31,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178578,"byte_end":178581,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178586,"byte_end":178593,"line_start":33,"line_end":33,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Size;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178598,"byte_end":178618,"line_start":34,"line_end":34,"column_start":5,"column_end":25}},{"value":"/ let size = Size::new(-10.5, 42.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178623,"byte_end":178661,"line_start":35,"line_end":35,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(size.max_side(), 42.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178666,"byte_end":178704,"line_start":36,"line_end":36,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178709,"byte_end":178716,"line_start":37,"line_end":37,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179026,"byte_end":179034,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"min_side","qualname":"<Size>::min_side","value":"pub fn min_side(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the min of `width` and `height`.","sig":null,"attributes":[{"value":"/ Returns the min of `width` and `height`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178799,"byte_end":178843,"line_start":42,"line_end":42,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178848,"byte_end":178851,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178856,"byte_end":178870,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178875,"byte_end":178878,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178883,"byte_end":178890,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Size;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178895,"byte_end":178915,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/ let size = Size::new(-10.5, 42.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178920,"byte_end":178958,"line_start":48,"line_end":48,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(size.min_side(), -10.5);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178963,"byte_end":179002,"line_start":49,"line_end":49,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179007,"byte_end":179014,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179432,"byte_end":179437,"line_start":67,"line_end":67,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Size>::clamp","value":"pub fn clamp(Self, Size, Size) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new size bounded by `min` and `max.`","sig":null,"attributes":[{"value":"/ Returns a new size bounded by `min` and `max.`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179097,"byte_end":179147,"line_start":55,"line_end":55,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179152,"byte_end":179155,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179160,"byte_end":179174,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179179,"byte_end":179182,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179187,"byte_end":179194,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Size;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179199,"byte_end":179219,"line_start":60,"line_end":60,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179224,"byte_end":179227,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let this = Size::new(0., 100.);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179232,"byte_end":179267,"line_start":62,"line_end":62,"column_start":5,"column_end":40}},{"value":"/ let min = Size::new(10., 10.,);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179272,"byte_end":179307,"line_start":63,"line_end":63,"column_start":5,"column_end":40}},{"value":"/ let max = Size::new(50., 50.);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179312,"byte_end":179346,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(this.clamp(min, max), Size::new(10., 50.))","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179351,"byte_end":179408,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179413,"byte_end":179420,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179822,"byte_end":179829,"line_start":78,"line_end":78,"column_start":18,"column_end":25},"name":"to_vec2","qualname":"<Size>::to_vec2","value":"pub const fn to_vec2(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Convert this size into a [`Vec2`], with `width` mapped to `x` and `height`\n mapped to `y`.","sig":null,"attributes":[{"value":"/ Convert this size into a [`Vec2`], with `width` mapped to `x` and `height`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179646,"byte_end":179724,"line_start":73,"line_end":73,"column_start":5,"column_end":83}},{"value":"/ mapped to `y`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179729,"byte_end":179747,"line_start":74,"line_end":74,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179752,"byte_end":179755,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`Vec2`]: struct.Vec2.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179760,"byte_end":179790,"line_start":76,"line_end":76,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179795,"byte_end":179804,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180375,"byte_end":180380,"line_start":97,"line_end":97,"column_start":12,"column_end":17},"name":"round","qualname":"<Size>::round","value":"pub fn round(Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Size`,\n with `width` and `height` rounded to the nearest integer.","sig":null,"attributes":[{"value":"/ Returns a new `Size`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179900,"byte_end":179925,"line_start":82,"line_end":82,"column_start":5,"column_end":30}},{"value":"/ with `width` and `height` rounded to the nearest integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179930,"byte_end":179991,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":179996,"byte_end":179999,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180004,"byte_end":180018,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180023,"byte_end":180026,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180031,"byte_end":180038,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Size;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180043,"byte_end":180063,"line_start":88,"line_end":88,"column_start":5,"column_end":25}},{"value":"/ let size_pos = Size::new(3.3, 3.6).round();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180068,"byte_end":180115,"line_start":89,"line_end":89,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(size_pos.width, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180120,"byte_end":180156,"line_start":90,"line_end":90,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(size_pos.height, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180161,"byte_end":180198,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ let size_neg = Size::new(-3.3, -3.6).round();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180203,"byte_end":180252,"line_start":92,"line_end":92,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(size_neg.width, -3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180257,"byte_end":180294,"line_start":93,"line_end":93,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(size_neg.height, -4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180299,"byte_end":180337,"line_start":94,"line_end":94,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180342,"byte_end":180349,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180354,"byte_end":180363,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180987,"byte_end":180991,"line_start":117,"line_end":117,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Size>::ceil","value":"pub fn ceil(Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Size`,\n with `width` and `height` rounded up to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Size`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180467,"byte_end":180492,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/ with `width` and `height` rounded up to the nearest integer,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180497,"byte_end":180561,"line_start":102,"line_end":102,"column_start":5,"column_end":69}},{"value":"/ unless they are already an integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180566,"byte_end":180605,"line_start":103,"line_end":103,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180610,"byte_end":180613,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180618,"byte_end":180632,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180637,"byte_end":180640,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180645,"byte_end":180652,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Size;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180657,"byte_end":180677,"line_start":108,"line_end":108,"column_start":5,"column_end":25}},{"value":"/ let size_pos = Size::new(3.3, 3.6).ceil();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180682,"byte_end":180728,"line_start":109,"line_end":109,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(size_pos.width, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180733,"byte_end":180769,"line_start":110,"line_end":110,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(size_pos.height, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180774,"byte_end":180811,"line_start":111,"line_end":111,"column_start":5,"column_end":42}},{"value":"/ let size_neg = Size::new(-3.3, -3.6).ceil();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180816,"byte_end":180864,"line_start":112,"line_end":112,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(size_neg.width, -3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180869,"byte_end":180906,"line_start":113,"line_end":113,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(size_neg.height, -3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180911,"byte_end":180949,"line_start":114,"line_end":114,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180954,"byte_end":180961,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":180966,"byte_end":180975,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181600,"byte_end":181605,"line_start":137,"line_end":137,"column_start":12,"column_end":17},"name":"floor","qualname":"<Size>::floor","value":"pub fn floor(Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Size`,\n with `width` and `height` rounded down to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Size`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181076,"byte_end":181101,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"/ with `width` and `height` rounded down to the nearest integer,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181106,"byte_end":181172,"line_start":122,"line_end":122,"column_start":5,"column_end":71}},{"value":"/ unless they are already an integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181177,"byte_end":181216,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181221,"byte_end":181224,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181229,"byte_end":181243,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181248,"byte_end":181251,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181256,"byte_end":181263,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Size;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181268,"byte_end":181288,"line_start":128,"line_end":128,"column_start":5,"column_end":25}},{"value":"/ let size_pos = Size::new(3.3, 3.6).floor();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181293,"byte_end":181340,"line_start":129,"line_end":129,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(size_pos.width, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181345,"byte_end":181381,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(size_pos.height, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181386,"byte_end":181423,"line_start":131,"line_end":131,"column_start":5,"column_end":42}},{"value":"/ let size_neg = Size::new(-3.3, -3.6).floor();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181428,"byte_end":181477,"line_start":132,"line_end":132,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(size_neg.width, -4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181482,"byte_end":181519,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(size_neg.height, -4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181524,"byte_end":181562,"line_start":134,"line_end":134,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181567,"byte_end":181574,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181579,"byte_end":181588,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182228,"byte_end":182234,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"expand","qualname":"<Size>::expand","value":"pub fn expand(Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Size`,\n with `width` and `height` rounded away from zero to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Size`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181692,"byte_end":181717,"line_start":141,"line_end":141,"column_start":5,"column_end":30}},{"value":"/ with `width` and `height` rounded away from zero to the nearest integer,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181722,"byte_end":181798,"line_start":142,"line_end":142,"column_start":5,"column_end":81}},{"value":"/ unless they are already an integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181803,"byte_end":181842,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181847,"byte_end":181850,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181855,"byte_end":181869,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181874,"byte_end":181877,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181882,"byte_end":181889,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Size;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181894,"byte_end":181914,"line_start":148,"line_end":148,"column_start":5,"column_end":25}},{"value":"/ let size_pos = Size::new(3.3, 3.6).expand();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181919,"byte_end":181967,"line_start":149,"line_end":149,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(size_pos.width, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":181972,"byte_end":182008,"line_start":150,"line_end":150,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(size_pos.height, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182013,"byte_end":182050,"line_start":151,"line_end":151,"column_start":5,"column_end":42}},{"value":"/ let size_neg = Size::new(-3.3, -3.6).expand();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182055,"byte_end":182105,"line_start":152,"line_end":152,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(size_neg.width, -4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182110,"byte_end":182147,"line_start":153,"line_end":153,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(size_neg.height, -4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182152,"byte_end":182190,"line_start":154,"line_end":154,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182195,"byte_end":182202,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182207,"byte_end":182216,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182857,"byte_end":182862,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"trunc","qualname":"<Size>::trunc","value":"pub fn trunc(Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Size`,\n with `width` and `height` rounded down towards zero the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Size`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182323,"byte_end":182348,"line_start":161,"line_end":161,"column_start":5,"column_end":30}},{"value":"/ with `width` and `height` rounded down towards zero the nearest integer,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182353,"byte_end":182429,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ unless they are already an integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182434,"byte_end":182473,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182478,"byte_end":182481,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182486,"byte_end":182500,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182505,"byte_end":182508,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182513,"byte_end":182520,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Size;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182525,"byte_end":182545,"line_start":168,"line_end":168,"column_start":5,"column_end":25}},{"value":"/ let size_pos = Size::new(3.3, 3.6).trunc();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182550,"byte_end":182597,"line_start":169,"line_end":169,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(size_pos.width, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182602,"byte_end":182638,"line_start":170,"line_end":170,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(size_pos.height, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182643,"byte_end":182680,"line_start":171,"line_end":171,"column_start":5,"column_end":42}},{"value":"/ let size_neg = Size::new(-3.3, -3.6).trunc();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182685,"byte_end":182734,"line_start":172,"line_end":172,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(size_neg.width, -3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182739,"byte_end":182776,"line_start":173,"line_end":173,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(size_neg.height, -3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182781,"byte_end":182819,"line_start":174,"line_end":174,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182824,"byte_end":182831,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182836,"byte_end":182845,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":183185,"byte_end":183197,"line_start":185,"line_end":185,"column_start":12,"column_end":24},"name":"aspect_ratio","qualname":"<Size>::aspect_ratio","value":"pub fn aspect_ratio(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the aspect ratio of a rectangle with the given size.","sig":null,"attributes":[{"value":"/ Returns the aspect ratio of a rectangle with the given size.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":182949,"byte_end":183013,"line_start":181,"line_end":181,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":183018,"byte_end":183021,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ If the width is `0`, the output will be `sign(self.height) * infinity`. If The width and","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":183026,"byte_end":183118,"line_start":183,"line_end":183,"column_start":5,"column_end":97}},{"value":"/ height are `0`, then the output will be `NaN`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":183123,"byte_end":183173,"line_start":184,"line_end":184,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":183397,"byte_end":183404,"line_start":193,"line_end":193,"column_start":18,"column_end":25},"name":"to_rect","qualname":"<Size>::to_rect","value":"pub const fn to_rect(Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Convert this `Size` into a [`Rect`] with origin `(0.0, 0.0)`.","sig":null,"attributes":[{"value":"/ Convert this `Size` into a [`Rect`] with origin `(0.0, 0.0)`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":183257,"byte_end":183322,"line_start":189,"line_end":189,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":183327,"byte_end":183330,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`Rect`]: struct.Rect.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":183335,"byte_end":183365,"line_start":191,"line_end":191,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":183370,"byte_end":183379,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":183677,"byte_end":183692,"line_start":202,"line_end":202,"column_start":12,"column_end":27},"name":"to_rounded_rect","qualname":"<Size>::to_rounded_rect","value":"pub fn to_rounded_rect(Self, f64) -> RoundedRect","parent":null,"children":[],"decl_id":null,"docs":" Convert this `Size` into a [`RoundedRect`] with origin `(0.0, 0.0)` and\n the provided corner radius.","sig":null,"attributes":[{"value":"/ Convert this `Size` into a [`RoundedRect`] with origin `(0.0, 0.0)` and","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":183483,"byte_end":183558,"line_start":197,"line_end":197,"column_start":5,"column_end":80}},{"value":"/ the provided corner radius.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":183563,"byte_end":183594,"line_start":198,"line_end":198,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":183599,"byte_end":183602,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ [`RoundedRect`]: struct.RoundedRect.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":183607,"byte_end":183651,"line_start":200,"line_end":200,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":183656,"byte_end":183665,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":187307,"byte_end":187313,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"SvgArc","qualname":"::svg::SvgArc","value":"SvgArc { from, to, radii, x_rotation, large_arc, sweep }","parent":null,"children":[{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385}],"decl_id":null,"docs":" A single SVG arc segment.\n","sig":null,"attributes":[{"value":"/ A single SVG arc segment.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":187159,"byte_end":187188,"line_start":12,"line_end":12,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1380},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":187355,"byte_end":187359,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"from","qualname":"::svg::SvgArc::from","value":"point::Point","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" The arc's start point.\n","sig":null,"attributes":[{"value":"/ The arc's start point.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":187320,"byte_end":187346,"line_start":16,"line_end":16,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":1381},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":187405,"byte_end":187407,"line_start":19,"line_end":19,"column_start":9,"column_end":11},"name":"to","qualname":"::svg::SvgArc::to","value":"point::Point","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" The arc's end point.\n","sig":null,"attributes":[{"value":"/ The arc's end point.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":187372,"byte_end":187396,"line_start":18,"line_end":18,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":187559,"byte_end":187564,"line_start":22,"line_end":22,"column_start":9,"column_end":14},"name":"radii","qualname":"::svg::SvgArc::radii","value":"vec2::Vec2","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" The arc's radii, where the vector's x-component is the radius in the\n positive x direction after applying `x_rotation`.\n","sig":null,"attributes":[{"value":"/ The arc's radii, where the vector's x-component is the radius in the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":187420,"byte_end":187492,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ positive x direction after applying `x_rotation`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":187497,"byte_end":187550,"line_start":21,"line_end":21,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1383},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":187629,"byte_end":187639,"line_start":24,"line_end":24,"column_start":9,"column_end":19},"name":"x_rotation","qualname":"::svg::SvgArc::x_rotation","value":"f64","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" How much the arc is rotated, in radians.\n","sig":null,"attributes":[{"value":"/ How much the arc is rotated, in radians.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":187576,"byte_end":187620,"line_start":23,"line_end":23,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1384},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":187712,"byte_end":187721,"line_start":26,"line_end":26,"column_start":9,"column_end":18},"name":"large_arc","qualname":"::svg::SvgArc::large_arc","value":"bool","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" Does this arc sweep through more than π radians?\n","sig":null,"attributes":[{"value":"/ Does this arc sweep through more than π radians?","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":187650,"byte_end":187703,"line_start":25,"line_end":25,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":187807,"byte_end":187812,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"name":"sweep","qualname":"::svg::SvgArc::sweep","value":"bool","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" Determines if the arc should begin moving at positive angles.\n","sig":null,"attributes":[{"value":"/ Determines if the arc should begin moving at positive angles.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":187733,"byte_end":187798,"line_start":27,"line_end":27,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":187940,"byte_end":187958,"line_start":34,"line_end":34,"column_start":12,"column_end":30},"name":"from_path_segments","qualname":"<BezPath>::from_path_segments","value":"pub fn from_path_segments<impl Iterator<Item = PathSeg>: Iterator<Item =\n                          PathSeg>>(impl Iterator<Item = PathSeg>) -> BezPath","parent":null,"children":[],"decl_id":null,"docs":" Create a BezPath with segments corresponding to the sequence of\n `PathSeg`s\n","sig":null,"attributes":[{"value":"/ Create a BezPath with segments corresponding to the sequence of","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":187842,"byte_end":187909,"line_start":32,"line_end":32,"column_start":5,"column_end":72}},{"value":"/ `PathSeg`s","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":187914,"byte_end":187928,"line_start":33,"line_end":33,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":188879,"byte_end":188885,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"to_svg","qualname":"<BezPath>::to_svg","value":"pub fn to_svg(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Convert the path to an SVG path string representation.","sig":null,"attributes":[{"value":"/ Convert the path to an SVG path string representation.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":188655,"byte_end":188713,"line_start":55,"line_end":55,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":188718,"byte_end":188721,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The current implementation doesn't take any special care to produce a","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":188726,"byte_end":188799,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ short string (reducing precision, using relative movement).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":188804,"byte_end":188867,"line_start":58,"line_end":58,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":189122,"byte_end":189130,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"write_to","qualname":"<BezPath>::write_to","value":"pub fn write_to<W: Write>(&Self, W) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the SVG representation of this path to the provided buffer.\n","sig":null,"attributes":[{"value":"/ Write the SVG representation of this path to the provided buffer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":189041,"byte_end":189110,"line_start":65,"line_end":65,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":190079,"byte_end":190087,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"from_svg","qualname":"<BezPath>::from_svg","value":"pub fn from_svg(&str) -> Result<BezPath, SvgParseError>","parent":null,"children":[],"decl_id":null,"docs":" Try to parse a bezier path from an SVG path element.","sig":null,"attributes":[{"value":"/ Try to parse a bezier path from an SVG path element.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":189800,"byte_end":189856,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":189861,"byte_end":189864,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This is implemented on a best-effort basis, intended for cases where the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":189869,"byte_end":189945,"line_start":86,"line_end":86,"column_start":5,"column_end":81}},{"value":"/ user controls the source of paths, and is not intended as a replacement","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":189950,"byte_end":190025,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ for a general, robust SVG parser.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":190030,"byte_end":190067,"line_start":88,"line_end":88,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1392},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":195707,"byte_end":195712,"line_start":233,"line_end":233,"column_start":5,"column_end":10},"name":"Wrong","qualname":"::svg::SvgParseError::Wrong","value":"SvgParseError::Wrong","parent":{"krate":0,"index":1391},"children":[],"decl_id":null,"docs":" A number was expected.\n","sig":null,"attributes":[{"value":"/ A number was expected.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":195676,"byte_end":195702,"line_start":232,"line_end":232,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1394},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":195778,"byte_end":195791,"line_start":235,"line_end":235,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::svg::SvgParseError::UnexpectedEof","value":"SvgParseError::UnexpectedEof","parent":{"krate":0,"index":1391},"children":[],"decl_id":null,"docs":" The input string ended while still expecting input.\n","sig":null,"attributes":[{"value":"/ The input string ended while still expecting input.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":195718,"byte_end":195773,"line_start":234,"line_end":234,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1396},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":195844,"byte_end":195858,"line_start":237,"line_end":237,"column_start":5,"column_end":19},"name":"UnknownCommand","qualname":"::svg::SvgParseError::UnknownCommand","value":"SvgParseError::UnknownCommand(char)","parent":{"krate":0,"index":1391},"children":[],"decl_id":null,"docs":" Encountered an unknown command letter.\n","sig":null,"attributes":[{"value":"/ Encountered an unknown command letter.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":195797,"byte_end":195839,"line_start":236,"line_end":236,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":1391},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":195656,"byte_end":195669,"line_start":231,"line_end":231,"column_start":10,"column_end":23},"name":"SvgParseError","qualname":"::svg::SvgParseError","value":"pub enum SvgParseError {\n\n    /// A number was expected.\n    Wrong,\n\n    /// The input string ended while still expecting input.\n    UnexpectedEof,\n\n    /// Encountered an unknown command letter.\n    UnknownCommand(char),\n}","parent":null,"children":[{"krate":0,"index":1392},{"krate":0,"index":1394},{"krate":0,"index":1396}],"decl_id":null,"docs":" An error which can be returned when parsing an SVG.\n","sig":null,"attributes":[{"value":"/ An error which can be returned when parsing an SVG.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":195574,"byte_end":195629,"line_start":229,"line_end":229,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":200148,"byte_end":200164,"line_start":390,"line_end":390,"column_start":12,"column_end":28},"name":"is_straight_line","qualname":"<SvgArc>::is_straight_line","value":"pub fn is_straight_line(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that arc is actually a straight line.","sig":null,"attributes":[{"value":"/ Checks that arc is actually a straight line.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":200024,"byte_end":200072,"line_start":387,"line_end":387,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":200077,"byte_end":200080,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ In this case, it can be replaced with a LineTo.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":200085,"byte_end":200136,"line_start":389,"line_end":389,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":200413,"byte_end":200425,"line_start":399,"line_end":399,"column_start":12,"column_end":24},"name":"from_svg_arc","qualname":"<Arc>::from_svg_arc","value":"pub fn from_svg_arc(&SvgArc) -> Option<Arc>","parent":null,"children":[],"decl_id":null,"docs":" Creates an `Arc` from a `SvgArc`.","sig":null,"attributes":[{"value":"/ Creates an `Arc` from a `SvgArc`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":200295,"byte_end":200332,"line_start":396,"line_end":396,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":200337,"byte_end":200340,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `arc` is actually a straight line.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":200345,"byte_end":200401,"line_start":398,"line_end":398,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":209129,"byte_end":209143,"line_start":38,"line_end":38,"column_start":12,"column_end":26},"name":"TranslateScale","qualname":"::translate_scale::TranslateScale","value":"TranslateScale {  }","parent":null,"children":[{"krate":0,"index":1402},{"krate":0,"index":1403}],"decl_id":null,"docs":" A transformation including scaling and translation.","sig":null,"attributes":[{"value":"/ A transformation including scaling and translation.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":207819,"byte_end":207874,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":207875,"byte_end":207878,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ If the translation is `(x, y)` and the scale is `s`, then this","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":207879,"byte_end":207945,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/ transformation represents this augmented matrix:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":207946,"byte_end":207998,"line_start":10,"line_end":10,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":207999,"byte_end":208002,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208003,"byte_end":208014,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ | s 0 x |","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208015,"byte_end":208028,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/ | 0 s y |","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208029,"byte_end":208042,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ | 0 0 1 |","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208043,"byte_end":208056,"line_start":15,"line_end":15,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208057,"byte_end":208064,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208065,"byte_end":208068,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ See [`Affine`](struct.Affine.html) for more details about the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208069,"byte_end":208134,"line_start":18,"line_end":18,"column_start":1,"column_end":66}},{"value":"/ equivalence with augmented matrices.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208135,"byte_end":208175,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208176,"byte_end":208179,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Various multiplication ops are defined, and these are all defined","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208180,"byte_end":208249,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/ to be consistent with matrix multiplication. Therefore,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208250,"byte_end":208309,"line_start":22,"line_end":22,"column_start":1,"column_end":60}},{"value":"/ `TranslateScale * Point` is defined but not the other way around.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208310,"byte_end":208379,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208380,"byte_end":208383,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that multiplication is not commutative. Thus,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208384,"byte_end":208443,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/ `TranslateScale::scale(2.0) * TranslateScale::translate(Vec2::new(1.0, 0.0))`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208444,"byte_end":208525,"line_start":26,"line_end":26,"column_start":1,"column_end":82}},{"value":"/ has a translation of (2, 0), while","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208526,"byte_end":208564,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/ `TranslateScale::translate(Vec2::new(1.0, 0.0)) * TranslateScale::scale(2.0)`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208565,"byte_end":208646,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/ has a translation of (1, 0). (Both have a scale of 2; also note that","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208647,"byte_end":208719,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ the first case can be written","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208720,"byte_end":208753,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ `2.0 * TranslateScale::translate(Vec2::new(1.0, 0.0))` as this case","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208754,"byte_end":208825,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ has an implicit conversion).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208826,"byte_end":208858,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208859,"byte_end":208862,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This transformation is less powerful than `Affine`, but can be applied","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208863,"byte_end":208937,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ to more primitives, especially including [`Rect`](struct.Rect.html).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":208938,"byte_end":209010,"line_start":35,"line_end":35,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":209305,"byte_end":209308,"line_start":46,"line_end":46,"column_start":18,"column_end":21},"name":"new","qualname":"<TranslateScale>::new","value":"pub const fn new(Vec2, f64) -> TranslateScale","parent":null,"children":[],"decl_id":null,"docs":" Create a new transformation from translation and scale.\n","sig":null,"attributes":[{"value":"/ Create a new transformation from translation and scale.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":209214,"byte_end":209273,"line_start":44,"line_end":44,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":209278,"byte_end":209287,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":209497,"byte_end":209502,"line_start":52,"line_end":52,"column_start":18,"column_end":23},"name":"scale","qualname":"<TranslateScale>::scale","value":"pub const fn scale(f64) -> TranslateScale","parent":null,"children":[],"decl_id":null,"docs":" Create a new transformation with scale only.\n","sig":null,"attributes":[{"value":"/ Create a new transformation with scale only.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":209417,"byte_end":209465,"line_start":50,"line_end":50,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":209470,"byte_end":209479,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":209671,"byte_end":209680,"line_start":58,"line_end":58,"column_start":18,"column_end":27},"name":"translate","qualname":"<TranslateScale>::translate","value":"pub const fn translate(Vec2) -> TranslateScale","parent":null,"children":[],"decl_id":null,"docs":" Create a new transformation with translation only.\n","sig":null,"attributes":[{"value":"/ Create a new transformation with translation only.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":209585,"byte_end":209639,"line_start":56,"line_end":56,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":209644,"byte_end":209653,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":209825,"byte_end":209833,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"as_tuple","qualname":"<TranslateScale>::as_tuple","value":"pub fn as_tuple(Self) -> (Vec2, f64)","parent":null,"children":[],"decl_id":null,"docs":" Decompose transformation into translation and scale.\n","sig":null,"attributes":[{"value":"/ Decompose transformation into translation and scale.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":209757,"byte_end":209813,"line_start":62,"line_end":62,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":210187,"byte_end":210194,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"inverse","qualname":"<TranslateScale>::inverse","value":"pub fn inverse(Self) -> TranslateScale","parent":null,"children":[],"decl_id":null,"docs":" Compute the inverse transform.","sig":null,"attributes":[{"value":"/ Compute the inverse transform.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":209907,"byte_end":209941,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":209946,"byte_end":209949,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Multiplying a transform with its inverse (either on the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":209954,"byte_end":210013,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/ left or right) results in the identity transform","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":210018,"byte_end":210070,"line_start":70,"line_end":70,"column_start":5,"column_end":57}},{"value":"/ (modulo floating point rounding errors).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":210075,"byte_end":210119,"line_start":71,"line_end":71,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":210124,"byte_end":210127,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Produces NaN values when scale is zero.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":210132,"byte_end":210175,"line_start":73,"line_end":73,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1409},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":215664,"byte_end":215668,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"Vec2","qualname":"::vec2::Vec2","value":"Vec2 { x, y }","parent":null,"children":[{"krate":0,"index":1410},{"krate":0,"index":1411}],"decl_id":null,"docs":" A 2D vector.","sig":null,"attributes":[{"value":"/ A 2D vector.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":215306,"byte_end":215322,"line_start":9,"line_end":9,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":215323,"byte_end":215326,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is intended primarily for a vector in the mathematical sense,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":215327,"byte_end":215397,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ but it can be interpreted as a translation, and converted to and","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":215398,"byte_end":215466,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ from a point (vector relative to the origin) and size.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":215467,"byte_end":215525,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1410},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":215705,"byte_end":215706,"line_start":18,"line_end":18,"column_start":9,"column_end":10},"name":"x","qualname":"::vec2::Vec2::x","value":"f64","parent":{"krate":0,"index":1409},"children":[],"decl_id":null,"docs":" The x-coordinate.\n","sig":null,"attributes":[{"value":"/ The x-coordinate.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":215675,"byte_end":215696,"line_start":17,"line_end":17,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":215747,"byte_end":215748,"line_start":20,"line_end":20,"column_start":9,"column_end":10},"name":"y","qualname":"::vec2::Vec2::y","value":"f64","parent":{"krate":0,"index":1409},"children":[],"decl_id":null,"docs":" The y-coordinate.\n","sig":null,"attributes":[{"value":"/ The y-coordinate.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":215717,"byte_end":215738,"line_start":19,"line_end":19,"column_start":5,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":215811,"byte_end":215815,"line_start":25,"line_end":25,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::vec2::Vec2::ZERO","value":"Vec2","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" The vector (0, 0).\n","sig":null,"attributes":[{"value":"/ The vector (0, 0).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":215774,"byte_end":215796,"line_start":24,"line_end":24,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":215904,"byte_end":215907,"line_start":29,"line_end":29,"column_start":18,"column_end":21},"name":"new","qualname":"<Vec2>::new","value":"pub const fn new(f64, f64) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Create a new vector.\n","sig":null,"attributes":[{"value":"/ Create a new vector.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":215848,"byte_end":215872,"line_start":27,"line_end":27,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":215877,"byte_end":215886,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216038,"byte_end":216046,"line_start":35,"line_end":35,"column_start":18,"column_end":26},"name":"to_point","qualname":"<Vec2>::to_point","value":"pub const fn to_point(Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Convert this vector into a `Point`.\n","sig":null,"attributes":[{"value":"/ Convert this vector into a `Point`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":215967,"byte_end":216006,"line_start":33,"line_end":33,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216011,"byte_end":216020,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216180,"byte_end":216187,"line_start":41,"line_end":41,"column_start":18,"column_end":25},"name":"to_size","qualname":"<Vec2>::to_size","value":"pub const fn to_size(Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Convert this vector into a `Size`.\n","sig":null,"attributes":[{"value":"/ Convert this vector into a `Size`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216110,"byte_end":216148,"line_start":39,"line_end":39,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216153,"byte_end":216162,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216445,"byte_end":216448,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"dot","qualname":"<Vec2>::dot","value":"pub fn dot(Self, Vec2) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Dot product of two vectors.\n","sig":null,"attributes":[{"value":"/ Dot product of two vectors.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216388,"byte_end":216419,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216424,"byte_end":216433,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216652,"byte_end":216657,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"cross","qualname":"<Vec2>::cross","value":"pub fn cross(Self, Vec2) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Cross product of two vectors.","sig":null,"attributes":[{"value":"/ Cross product of two vectors.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216532,"byte_end":216565,"line_start":56,"line_end":56,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216570,"byte_end":216573,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This is signed so that (0, 1) × (1, 0) = 1.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216578,"byte_end":216626,"line_start":58,"line_end":58,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216631,"byte_end":216640,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216791,"byte_end":216796,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"hypot","qualname":"<Vec2>::hypot","value":"pub fn hypot(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Magnitude of vector.\n","sig":null,"attributes":[{"value":"/ Magnitude of vector.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216741,"byte_end":216765,"line_start":64,"line_end":64,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216770,"byte_end":216779,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216910,"byte_end":216916,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"hypot2","qualname":"<Vec2>::hypot2","value":"pub fn hypot2(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Magnitude squared of vector.\n","sig":null,"attributes":[{"value":"/ Magnitude squared of vector.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216852,"byte_end":216884,"line_start":70,"line_end":70,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216889,"byte_end":216898,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":217143,"byte_end":217148,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"atan2","qualname":"<Vec2>::atan2","value":"pub fn atan2(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Angle of vector.","sig":null,"attributes":[{"value":"/ Angle of vector.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216966,"byte_end":216986,"line_start":76,"line_end":76,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216991,"byte_end":216994,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ If the vector is interpreted as a complex number, this is the argument.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":216999,"byte_end":217074,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ The angle is expressed in radians.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":217079,"byte_end":217117,"line_start":79,"line_end":79,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":217122,"byte_end":217131,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":217722,"byte_end":217732,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"from_angle","qualname":"<Vec2>::from_angle","value":"pub fn from_angle(f64) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" A unit vector of the given angle.","sig":null,"attributes":[{"value":"/ A unit vector of the given angle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":217204,"byte_end":217241,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":217246,"byte_end":217249,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ With `th` at zero, the result is the positive X unit vector, and","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":217254,"byte_end":217322,"line_start":87,"line_end":87,"column_start":5,"column_end":73}},{"value":"/ at π/2, it is the positive Y unit vector. The angle is expressed","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":217327,"byte_end":217396,"line_start":88,"line_end":88,"column_start":5,"column_end":73}},{"value":"/ in radians.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":217401,"byte_end":217416,"line_start":89,"line_end":89,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":217421,"byte_end":217424,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Thus, in a Y-down coordinate system (as is common for graphics),","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":217429,"byte_end":217497,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ it is a clockwise rotation, and in Y-up (traditional for math), it","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":217502,"byte_end":217572,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ is anti-clockwise. This convention is consistent with","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":217577,"byte_end":217634,"line_start":93,"line_end":93,"column_start":5,"column_end":62}},{"value":"/ [`Affine::rotate`](struct.Affine.html#method.rotate).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":217639,"byte_end":217696,"line_start":94,"line_end":94,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":217701,"byte_end":217710,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":217909,"byte_end":217913,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Vec2>::lerp","value":"pub fn lerp(Self, Vec2, f64) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between two vectors.\n","sig":null,"attributes":[{"value":"/ Linearly interpolate between two vectors.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":217838,"byte_end":217883,"line_start":103,"line_end":103,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":217888,"byte_end":217897,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218199,"byte_end":218208,"line_start":114,"line_end":114,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Vec2>::normalize","value":"pub fn normalize(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns a vector of magnitude 1.0 with the same angle as `self`; i.e.\n a unit/direction vector.","sig":null,"attributes":[{"value":"/ Returns a vector of magnitude 1.0 with the same angle as `self`; i.e.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":217996,"byte_end":218069,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ a unit/direction vector.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218074,"byte_end":218102,"line_start":110,"line_end":110,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218107,"byte_end":218110,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This produces `NaN` values when the magnitutde is `0`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218115,"byte_end":218173,"line_start":112,"line_end":112,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218178,"byte_end":218187,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218668,"byte_end":218673,"line_start":133,"line_end":133,"column_start":12,"column_end":17},"name":"round","qualname":"<Vec2>::round","value":"pub fn round(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Vec2`,\n with `x` and `y` rounded to the nearest integer.","sig":null,"attributes":[{"value":"/ Returns a new `Vec2`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218264,"byte_end":218289,"line_start":118,"line_end":118,"column_start":5,"column_end":30}},{"value":"/ with `x` and `y` rounded to the nearest integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218294,"byte_end":218346,"line_start":119,"line_end":119,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218351,"byte_end":218354,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218359,"byte_end":218373,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218378,"byte_end":218381,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218386,"byte_end":218393,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Vec2;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218398,"byte_end":218418,"line_start":124,"line_end":124,"column_start":5,"column_end":25}},{"value":"/ let a = Vec2::new(3.3, 3.6).round();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218423,"byte_end":218463,"line_start":125,"line_end":125,"column_start":5,"column_end":45}},{"value":"/ let b = Vec2::new(3.0, -3.1).round();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218468,"byte_end":218509,"line_start":126,"line_end":126,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.x, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218514,"byte_end":218539,"line_start":127,"line_end":127,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.y, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218544,"byte_end":218569,"line_start":128,"line_end":128,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.x, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218574,"byte_end":218599,"line_start":129,"line_end":129,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.y, -3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218604,"byte_end":218630,"line_start":130,"line_end":130,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218635,"byte_end":218642,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218647,"byte_end":218656,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219200,"byte_end":219204,"line_start":153,"line_end":153,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Vec2>::ceil","value":"pub fn ceil(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Vec2`,\n with `x` and `y` rounded up to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Vec2`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218751,"byte_end":218776,"line_start":137,"line_end":137,"column_start":5,"column_end":30}},{"value":"/ with `x` and `y` rounded up to the nearest integer,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218781,"byte_end":218836,"line_start":138,"line_end":138,"column_start":5,"column_end":60}},{"value":"/ unless they are already an integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218841,"byte_end":218880,"line_start":139,"line_end":139,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218885,"byte_end":218888,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218893,"byte_end":218907,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218912,"byte_end":218915,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218920,"byte_end":218927,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Vec2;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218932,"byte_end":218952,"line_start":144,"line_end":144,"column_start":5,"column_end":25}},{"value":"/ let a = Vec2::new(3.3, 3.6).ceil();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":218957,"byte_end":218996,"line_start":145,"line_end":145,"column_start":5,"column_end":44}},{"value":"/ let b = Vec2::new(3.0, -3.1).ceil();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219001,"byte_end":219041,"line_start":146,"line_end":146,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.x, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219046,"byte_end":219071,"line_start":147,"line_end":147,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.y, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219076,"byte_end":219101,"line_start":148,"line_end":148,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.x, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219106,"byte_end":219131,"line_start":149,"line_end":149,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.y, -3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219136,"byte_end":219162,"line_start":150,"line_end":150,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219167,"byte_end":219174,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219179,"byte_end":219188,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219733,"byte_end":219738,"line_start":173,"line_end":173,"column_start":12,"column_end":17},"name":"floor","qualname":"<Vec2>::floor","value":"pub fn floor(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Vec2`,\n with `x` and `y` rounded down to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Vec2`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219280,"byte_end":219305,"line_start":157,"line_end":157,"column_start":5,"column_end":30}},{"value":"/ with `x` and `y` rounded down to the nearest integer,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219310,"byte_end":219367,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"/ unless they are already an integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219372,"byte_end":219411,"line_start":159,"line_end":159,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219416,"byte_end":219419,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219424,"byte_end":219438,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219443,"byte_end":219446,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219451,"byte_end":219458,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Vec2;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219463,"byte_end":219483,"line_start":164,"line_end":164,"column_start":5,"column_end":25}},{"value":"/ let a = Vec2::new(3.3, 3.6).floor();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219488,"byte_end":219528,"line_start":165,"line_end":165,"column_start":5,"column_end":45}},{"value":"/ let b = Vec2::new(3.0, -3.1).floor();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219533,"byte_end":219574,"line_start":166,"line_end":166,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.x, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219579,"byte_end":219604,"line_start":167,"line_end":167,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.y, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219609,"byte_end":219634,"line_start":168,"line_end":168,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.x, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219639,"byte_end":219664,"line_start":169,"line_end":169,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.y, -4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219669,"byte_end":219695,"line_start":170,"line_end":170,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219700,"byte_end":219707,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219712,"byte_end":219721,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220281,"byte_end":220287,"line_start":193,"line_end":193,"column_start":12,"column_end":18},"name":"expand","qualname":"<Vec2>::expand","value":"pub fn expand(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Vec2`,\n with `x` and `y` rounded away from zero to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Vec2`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219816,"byte_end":219841,"line_start":177,"line_end":177,"column_start":5,"column_end":30}},{"value":"/ with `x` and `y` rounded away from zero to the nearest integer,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219846,"byte_end":219913,"line_start":178,"line_end":178,"column_start":5,"column_end":72}},{"value":"/ unless they are already an integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219918,"byte_end":219957,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219962,"byte_end":219965,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219970,"byte_end":219984,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219989,"byte_end":219992,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":219997,"byte_end":220004,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Vec2;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220009,"byte_end":220029,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/ let a = Vec2::new(3.3, 3.6).expand();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220034,"byte_end":220075,"line_start":185,"line_end":185,"column_start":5,"column_end":46}},{"value":"/ let b = Vec2::new(3.0, -3.1).expand();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220080,"byte_end":220122,"line_start":186,"line_end":186,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(a.x, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220127,"byte_end":220152,"line_start":187,"line_end":187,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.y, 4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220157,"byte_end":220182,"line_start":188,"line_end":188,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.x, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220187,"byte_end":220212,"line_start":189,"line_end":189,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.y, -4.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220217,"byte_end":220243,"line_start":190,"line_end":190,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220248,"byte_end":220255,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220260,"byte_end":220269,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220828,"byte_end":220833,"line_start":213,"line_end":213,"column_start":12,"column_end":17},"name":"trunc","qualname":"<Vec2>::trunc","value":"pub fn trunc(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Vec2`,\n with `x` and `y` rounded towards zero to the nearest integer,\n unless they are already an integer.","sig":null,"attributes":[{"value":"/ Returns a new `Vec2`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220367,"byte_end":220392,"line_start":197,"line_end":197,"column_start":5,"column_end":30}},{"value":"/ with `x` and `y` rounded towards zero to the nearest integer,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220397,"byte_end":220462,"line_start":198,"line_end":198,"column_start":5,"column_end":70}},{"value":"/ unless they are already an integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220467,"byte_end":220506,"line_start":199,"line_end":199,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220511,"byte_end":220514,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220519,"byte_end":220533,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220538,"byte_end":220541,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220546,"byte_end":220553,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ use kurbo::Vec2;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220558,"byte_end":220578,"line_start":204,"line_end":204,"column_start":5,"column_end":25}},{"value":"/ let a = Vec2::new(3.3, 3.6).trunc();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220583,"byte_end":220623,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/ let b = Vec2::new(3.0, -3.1).trunc();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220628,"byte_end":220669,"line_start":206,"line_end":206,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.x, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220674,"byte_end":220699,"line_start":207,"line_end":207,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.y, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220704,"byte_end":220729,"line_start":208,"line_end":208,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.x, 3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220734,"byte_end":220759,"line_start":209,"line_end":209,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(b.y, -3.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220764,"byte_end":220790,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220795,"byte_end":220802,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220807,"byte_end":220816,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2087,"byte_end":2093,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":8170,"byte_end":8176,"line_start":182,"line_end":182,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":8278,"byte_end":8284,"line_start":189,"line_end":189,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":8555,"byte_end":8561,"line_start":201,"line_end":201,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":9095,"byte_end":9101,"line_start":217,"line_end":217,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":12583,"byte_end":12586,"line_start":26,"line_end":26,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":14359,"byte_end":14372,"line_start":87,"line_end":87,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":15648,"byte_end":15651,"line_start":131,"line_end":131,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19222,"byte_end":19229,"line_start":74,"line_end":74,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":31522,"byte_end":31529,"line_start":297,"line_end":297,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":32145,"byte_end":32152,"line_start":317,"line_end":317,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":32331,"byte_end":32338,"line_start":326,"line_end":326,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":36462,"byte_end":36468,"line_start":427,"line_end":427,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":36944,"byte_end":36950,"line_start":441,"line_end":441,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":37129,"byte_end":37135,"line_start":449,"line_end":449,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":37306,"byte_end":37320,"line_start":457,"line_end":457,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":37796,"byte_end":37810,"line_start":471,"line_end":471,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":37989,"byte_end":38003,"line_start":479,"line_end":479,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":38275,"byte_end":38286,"line_start":493,"line_end":493,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":39313,"byte_end":39324,"line_start":525,"line_end":525,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":40243,"byte_end":40250,"line_start":559,"line_end":559,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":40830,"byte_end":40837,"line_start":577,"line_end":577,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":41127,"byte_end":41134,"line_start":587,"line_end":587,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":41408,"byte_end":41415,"line_start":597,"line_end":597,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":41738,"byte_end":41745,"line_start":607,"line_end":607,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":42006,"byte_end":42013,"line_start":617,"line_end":617,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":50576,"byte_end":50592,"line_start":833,"line_end":833,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":51277,"byte_end":51284,"line_start":856,"line_end":856,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":51396,"byte_end":51403,"line_start":862,"line_end":862,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":51503,"byte_end":51510,"line_start":868,"line_end":868,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":51613,"byte_end":51620,"line_start":874,"line_end":874,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":55728,"byte_end":55734,"line_start":21,"line_end":21,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":56393,"byte_end":56399,"line_start":45,"line_end":45,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":56606,"byte_end":56612,"line_start":57,"line_end":57,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":56821,"byte_end":56827,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":57099,"byte_end":57105,"line_start":85,"line_end":85,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":58633,"byte_end":58647,"line_start":140,"line_end":140,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":60106,"byte_end":60119,"line_start":189,"line_end":189,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":60556,"byte_end":60569,"line_start":208,"line_end":208,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":60765,"byte_end":60778,"line_start":220,"line_end":220,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":61181,"byte_end":61194,"line_start":240,"line_end":240,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":74892,"byte_end":74900,"line_start":33,"line_end":33,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":76715,"byte_end":76723,"line_start":77,"line_end":77,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":78272,"byte_end":78280,"line_start":132,"line_end":132,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":78586,"byte_end":78594,"line_start":145,"line_end":145,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":80689,"byte_end":80697,"line_start":188,"line_end":188,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":81125,"byte_end":81133,"line_start":200,"line_end":200,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":81649,"byte_end":81657,"line_start":216,"line_end":216,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":81689,"byte_end":81697,"line_start":218,"line_end":218,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":82504,"byte_end":82510,"line_start":242,"line_end":242,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":82772,"byte_end":82779,"line_start":256,"line_end":256,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":90327,"byte_end":90334,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":93968,"byte_end":93975,"line_start":118,"line_end":118,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":94312,"byte_end":94319,"line_start":131,"line_end":131,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":94616,"byte_end":94622,"line_start":143,"line_end":143,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":94801,"byte_end":94808,"line_start":152,"line_end":152,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":94942,"byte_end":94949,"line_start":158,"line_end":158,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102368,"byte_end":102374,"line_start":118,"line_end":118,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":105671,"byte_end":105677,"line_start":242,"line_end":242,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":105838,"byte_end":105844,"line_start":251,"line_end":251,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":106195,"byte_end":106199,"line_start":267,"line_end":267,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":106332,"byte_end":106338,"line_start":276,"line_end":276,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":106472,"byte_end":106476,"line_start":285,"line_end":285,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":106609,"byte_end":106615,"line_start":294,"line_end":294,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":106716,"byte_end":106722,"line_start":300,"line_end":300,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":106852,"byte_end":106858,"line_start":306,"line_end":306,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":107532,"byte_end":107536,"line_start":23,"line_end":23,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":107881,"byte_end":107885,"line_start":40,"line_end":40,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":108319,"byte_end":108323,"line_start":65,"line_end":65,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":108498,"byte_end":108502,"line_start":74,"line_end":74,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":108634,"byte_end":108638,"line_start":81,"line_end":81,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":108783,"byte_end":108787,"line_start":88,"line_end":88,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":109286,"byte_end":109290,"line_start":105,"line_end":105,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":109397,"byte_end":109401,"line_start":112,"line_end":112,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":109712,"byte_end":109722,"line_start":124,"line_end":124,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":109923,"byte_end":109933,"line_start":136,"line_end":136,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":110098,"byte_end":110108,"line_start":145,"line_end":145,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":110211,"byte_end":110217,"line_start":152,"line_end":152,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":110418,"byte_end":110422,"line_start":164,"line_end":164,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":110572,"byte_end":110576,"line_start":173,"line_end":173,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":110850,"byte_end":110854,"line_start":189,"line_end":189,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":111715,"byte_end":111727,"line_start":226,"line_end":226,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":119744,"byte_end":119749,"line_start":19,"line_end":19,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123427,"byte_end":123432,"line_start":156,"line_end":156,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123662,"byte_end":123667,"line_start":170,"line_end":170,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123839,"byte_end":123844,"line_start":179,"line_end":179,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123996,"byte_end":124001,"line_start":186,"line_end":186,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":124173,"byte_end":124178,"line_start":195,"line_end":195,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":124331,"byte_end":124336,"line_start":202,"line_end":202,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":124502,"byte_end":124507,"line_start":211,"line_end":211,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":124650,"byte_end":124655,"line_start":217,"line_end":217,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":126741,"byte_end":126748,"line_start":24,"line_end":24,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":129618,"byte_end":129625,"line_start":118,"line_end":118,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":130609,"byte_end":130616,"line_start":156,"line_end":156,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":130901,"byte_end":130908,"line_start":168,"line_end":168,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":133050,"byte_end":133057,"line_start":222,"line_end":222,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":133323,"byte_end":133330,"line_start":231,"line_end":231,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":134870,"byte_end":134877,"line_start":276,"line_end":276,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":134909,"byte_end":134916,"line_start":278,"line_end":278,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":135576,"byte_end":135582,"line_start":303,"line_end":303,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":141766,"byte_end":141770,"line_start":22,"line_end":22,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":156250,"byte_end":156254,"line_start":487,"line_end":487,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":156387,"byte_end":156391,"line_start":493,"line_end":493,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":156518,"byte_end":156522,"line_start":499,"line_end":499,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":156706,"byte_end":156710,"line_start":508,"line_end":508,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":156888,"byte_end":156892,"line_start":517,"line_end":517,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":157259,"byte_end":157263,"line_start":536,"line_end":536,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":158660,"byte_end":158672,"line_start":587,"line_end":587,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":159209,"byte_end":159213,"line_start":603,"line_end":603,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":159700,"byte_end":159704,"line_start":622,"line_end":622,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":163929,"byte_end":163940,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":166420,"byte_end":166431,"line_start":119,"line_end":119,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":169754,"byte_end":169766,"line_start":239,"line_end":239,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":170615,"byte_end":170634,"line_start":268,"line_end":268,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178226,"byte_end":178230,"line_start":19,"line_end":19,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":183805,"byte_end":183809,"line_start":207,"line_end":207,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":183961,"byte_end":183965,"line_start":213,"line_end":213,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":184271,"byte_end":184275,"line_start":223,"line_end":223,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":184610,"byte_end":184614,"line_start":242,"line_end":242,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":919},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":184833,"byte_end":184837,"line_start":254,"line_end":254,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":185038,"byte_end":185042,"line_start":264,"line_end":264,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":185256,"byte_end":185260,"line_start":276,"line_end":276,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":185493,"byte_end":185497,"line_start":287,"line_end":287,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":185617,"byte_end":185621,"line_start":294,"line_end":294,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":185854,"byte_end":185858,"line_start":305,"line_end":305,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":185985,"byte_end":185989,"line_start":312,"line_end":312,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":186339,"byte_end":186343,"line_start":330,"line_end":330,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":187828,"byte_end":187835,"line_start":31,"line_end":31,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":195886,"byte_end":195899,"line_start":240,"line_end":240,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":196262,"byte_end":196275,"line_start":250,"line_end":250,"column_start":16,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":196372,"byte_end":196380,"line_start":258,"line_end":258,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":200011,"byte_end":200017,"line_start":386,"line_end":386,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":200285,"byte_end":200288,"line_start":395,"line_end":395,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":209193,"byte_end":209207,"line_start":43,"line_end":43,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":210418,"byte_end":210432,"line_start":83,"line_end":83,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":210560,"byte_end":210566,"line_start":90,"line_end":90,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":210774,"byte_end":210788,"line_start":97,"line_end":97,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":210964,"byte_end":210978,"line_start":106,"line_end":106,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1026},{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":211274,"byte_end":211288,"line_start":118,"line_end":118,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":211698,"byte_end":211712,"line_start":137,"line_end":137,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":211969,"byte_end":211973,"line_start":149,"line_end":149,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1037},{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":212140,"byte_end":212154,"line_start":158,"line_end":158,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":212276,"byte_end":212290,"line_start":165,"line_end":165,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1042},{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":212543,"byte_end":212557,"line_start":177,"line_end":177,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":212681,"byte_end":212695,"line_start":184,"line_end":184,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":212879,"byte_end":212893,"line_start":193,"line_end":193,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1050},{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":213055,"byte_end":213069,"line_start":202,"line_end":202,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":213326,"byte_end":213340,"line_start":213,"line_end":213,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":213555,"byte_end":213569,"line_start":222,"line_end":222,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":213764,"byte_end":213778,"line_start":231,"line_end":231,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":215763,"byte_end":215767,"line_start":23,"line_end":23,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220935,"byte_end":220939,"line_start":218,"line_end":218,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":221159,"byte_end":221163,"line_start":232,"line_end":232,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":221364,"byte_end":221368,"line_start":244,"line_end":244,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":221550,"byte_end":221554,"line_start":254,"line_end":254,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":221755,"byte_end":221759,"line_start":266,"line_end":266,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":221946,"byte_end":221950,"line_start":276,"line_end":276,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":222151,"byte_end":222155,"line_start":288,"line_end":288,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":222472,"byte_end":222476,"line_start":307,"line_end":307,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":222842,"byte_end":222846,"line_start":320,"line_end":320,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":222968,"byte_end":222972,"line_start":327,"line_end":327,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":223145,"byte_end":223149,"line_start":339,"line_end":339,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\lib.rs","byte_start":1151,"byte_end":1157,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":317}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":2087,"byte_end":2093,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":8170,"byte_end":8176,"line_start":182,"line_end":182,"column_start":18,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1149},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":8278,"byte_end":8284,"line_start":189,"line_end":189,"column_start":21,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1149},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":8555,"byte_end":8561,"line_start":201,"line_end":201,"column_start":14,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1149},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\affine.rs","byte_start":9095,"byte_end":9101,"line_start":217,"line_end":217,"column_start":20,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1149},"to":{"krate":2,"index":2075}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":12583,"byte_end":12586,"line_start":26,"line_end":26,"column_start":6,"column_end":9},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":14359,"byte_end":14372,"line_start":87,"line_end":87,"column_start":19,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":5047}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\arc.rs","byte_start":15648,"byte_end":15651,"line_start":131,"line_end":131,"column_start":16,"column_end":19},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1163},"to":{"krate":0,"index":851}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":19222,"byte_end":19229,"line_start":74,"line_end":74,"column_start":6,"column_end":13},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":31522,"byte_end":31529,"line_start":297,"line_end":297,"column_start":31,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1178},"to":{"krate":2,"index":4952}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":32145,"byte_end":32152,"line_start":317,"line_end":317,"column_start":23,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1178},"to":{"krate":2,"index":4956}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":32331,"byte_end":32338,"line_start":326,"line_end":326,"column_start":25,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1178},"to":{"krate":2,"index":4965}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":36462,"byte_end":36468,"line_start":427,"line_end":427,"column_start":22,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1149},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":36944,"byte_end":36950,"line_start":441,"line_end":441,"column_start":23,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1149},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":37129,"byte_end":37135,"line_start":449,"line_end":449,"column_start":31,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1149},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":37306,"byte_end":37320,"line_start":457,"line_end":457,"column_start":22,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":37796,"byte_end":37810,"line_start":471,"line_end":471,"column_start":23,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":37989,"byte_end":38003,"line_start":479,"line_end":479,"column_start":31,"column_end":45},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":38275,"byte_end":38286,"line_start":493,"line_end":493,"column_start":23,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":177},"to":{"krate":2,"index":5047}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":39313,"byte_end":39324,"line_start":525,"line_end":525,"column_start":10,"column_end":21},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":40243,"byte_end":40250,"line_start":559,"line_end":559,"column_start":21,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1210},"to":{"krate":0,"index":572}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":40830,"byte_end":40837,"line_start":577,"line_end":577,"column_start":27,"column_end":34},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1210},"to":{"krate":0,"index":583}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":41127,"byte_end":41134,"line_start":587,"line_end":587,"column_start":25,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1210},"to":{"krate":0,"index":586}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":41408,"byte_end":41415,"line_start":597,"line_end":597,"column_start":28,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1210},"to":{"krate":0,"index":588}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":41738,"byte_end":41745,"line_start":607,"line_end":607,"column_start":28,"column_end":35},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1210},"to":{"krate":0,"index":593}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":42006,"byte_end":42013,"line_start":617,"line_end":617,"column_start":6,"column_end":13},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":50576,"byte_end":50592,"line_start":833,"line_end":833,"column_start":6,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":51277,"byte_end":51284,"line_start":856,"line_end":856,"column_start":25,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1210},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":51396,"byte_end":51403,"line_start":862,"line_end":862,"column_start":21,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1210},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":51503,"byte_end":51510,"line_start":868,"line_end":868,"column_start":24,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1210},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\bezpath.rs","byte_start":51613,"byte_end":51620,"line_start":874,"line_end":874,"column_start":16,"column_end":23},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1178},"to":{"krate":0,"index":851}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":55728,"byte_end":55734,"line_start":21,"line_end":21,"column_start":6,"column_end":12},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":56393,"byte_end":56399,"line_start":45,"line_end":45,"column_start":20,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1237},"to":{"krate":2,"index":2036}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":56606,"byte_end":56612,"line_start":57,"line_end":57,"column_start":20,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1237},"to":{"krate":2,"index":2041}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":56821,"byte_end":56827,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1149},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":57099,"byte_end":57105,"line_start":85,"line_end":85,"column_start":16,"column_end":22},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1237},"to":{"krate":0,"index":851}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":58633,"byte_end":58647,"line_start":140,"line_end":140,"column_start":19,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":276},"to":{"krate":2,"index":5047}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":60106,"byte_end":60119,"line_start":189,"line_end":189,"column_start":6,"column_end":19},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":60556,"byte_end":60569,"line_start":208,"line_end":208,"column_start":20,"column_end":33},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":293},"to":{"krate":2,"index":2036}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":60765,"byte_end":60778,"line_start":220,"line_end":220,"column_start":20,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":293},"to":{"krate":2,"index":2041}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\circle.rs","byte_start":61181,"byte_end":61194,"line_start":240,"line_end":240,"column_start":16,"column_end":29},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":293},"to":{"krate":0,"index":851}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":74892,"byte_end":74900,"line_start":33,"line_end":33,"column_start":6,"column_end":14},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":76715,"byte_end":76723,"line_start":77,"line_end":77,"column_start":21,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1251},"to":{"krate":0,"index":572}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":78272,"byte_end":78280,"line_start":132,"line_end":132,"column_start":26,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1251},"to":{"krate":0,"index":578}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":78586,"byte_end":78594,"line_start":145,"line_end":145,"column_start":27,"column_end":35},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1251},"to":{"krate":0,"index":583}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":80689,"byte_end":80697,"line_start":188,"line_end":188,"column_start":25,"column_end":33},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1251},"to":{"krate":0,"index":586}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":81125,"byte_end":81133,"line_start":200,"line_end":200,"column_start":28,"column_end":36},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1251},"to":{"krate":0,"index":588}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":81649,"byte_end":81657,"line_start":216,"line_end":216,"column_start":30,"column_end":38},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1251},"to":{"krate":0,"index":590}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":81689,"byte_end":81697,"line_start":218,"line_end":218,"column_start":28,"column_end":36},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1251},"to":{"krate":0,"index":593}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":82504,"byte_end":82510,"line_start":242,"line_end":242,"column_start":24,"column_end":30},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1149},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\cubicbez.rs","byte_start":82772,"byte_end":82779,"line_start":256,"line_end":256,"column_start":19,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":355},"to":{"krate":2,"index":5047}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":90327,"byte_end":90334,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":93968,"byte_end":93975,"line_start":118,"line_end":118,"column_start":20,"column_end":27},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1265},"to":{"krate":2,"index":2036}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":94312,"byte_end":94319,"line_start":131,"line_end":131,"column_start":20,"column_end":27},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1265},"to":{"krate":2,"index":2041}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":94616,"byte_end":94622,"line_start":143,"line_end":143,"column_start":23,"column_end":29},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1149},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":94801,"byte_end":94808,"line_start":152,"line_end":152,"column_start":23,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1265},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\ellipse.rs","byte_start":94942,"byte_end":94949,"line_start":158,"line_end":158,"column_start":16,"column_end":23},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1265},"to":{"krate":0,"index":851}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":102368,"byte_end":102374,"line_start":118,"line_end":118,"column_start":6,"column_end":12},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":105671,"byte_end":105677,"line_start":242,"line_end":242,"column_start":14,"column_end":20},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1278},"to":{"krate":2,"index":2063}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":105838,"byte_end":105844,"line_start":251,"line_end":251,"column_start":20,"column_end":26},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1278},"to":{"krate":2,"index":2036}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":106195,"byte_end":106199,"line_start":267,"line_end":267,"column_start":22,"column_end":26},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1339},"to":{"krate":2,"index":2036}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":106332,"byte_end":106338,"line_start":276,"line_end":276,"column_start":20,"column_end":26},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1278},"to":{"krate":2,"index":2041}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":106472,"byte_end":106476,"line_start":285,"line_end":285,"column_start":22,"column_end":26},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1339},"to":{"krate":2,"index":2041}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":106609,"byte_end":106615,"line_start":294,"line_end":294,"column_start":20,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1278},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":106716,"byte_end":106722,"line_start":300,"line_end":300,"column_start":27,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1278},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\insets.rs","byte_start":106852,"byte_end":106858,"line_start":306,"line_end":306,"column_start":37,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1278},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":107532,"byte_end":107536,"line_start":23,"line_end":23,"column_start":6,"column_end":10},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":107881,"byte_end":107885,"line_start":40,"line_end":40,"column_start":21,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1294},"to":{"krate":0,"index":572}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":108319,"byte_end":108323,"line_start":65,"line_end":65,"column_start":26,"column_end":30},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1294},"to":{"krate":0,"index":578}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":108498,"byte_end":108502,"line_start":74,"line_end":74,"column_start":27,"column_end":31},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1294},"to":{"krate":0,"index":583}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":108634,"byte_end":108638,"line_start":81,"line_end":81,"column_start":25,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1294},"to":{"krate":0,"index":586}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":108783,"byte_end":108787,"line_start":88,"line_end":88,"column_start":28,"column_end":32},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1294},"to":{"krate":0,"index":588}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":109286,"byte_end":109290,"line_start":105,"line_end":105,"column_start":30,"column_end":34},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1294},"to":{"krate":0,"index":590}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":109397,"byte_end":109401,"line_start":112,"line_end":112,"column_start":28,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1294},"to":{"krate":0,"index":593}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":109712,"byte_end":109722,"line_start":124,"line_end":124,"column_start":21,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1306},"to":{"krate":0,"index":572}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":109923,"byte_end":109933,"line_start":136,"line_end":136,"column_start":26,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1306},"to":{"krate":0,"index":578}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":110098,"byte_end":110108,"line_start":145,"line_end":145,"column_start":27,"column_end":37},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1306},"to":{"krate":0,"index":583}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":110211,"byte_end":110217,"line_start":152,"line_end":152,"column_start":20,"column_end":26},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1149},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":110418,"byte_end":110422,"line_start":164,"line_end":164,"column_start":20,"column_end":24},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":2036}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":110572,"byte_end":110576,"line_start":173,"line_end":173,"column_start":20,"column_end":24},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":2041}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":110850,"byte_end":110854,"line_start":189,"line_end":189,"column_start":16,"column_end":20},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1294},"to":{"krate":0,"index":851}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\line.rs","byte_start":111715,"byte_end":111727,"line_start":226,"line_end":226,"column_start":19,"column_end":31},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":551},"to":{"krate":2,"index":5047}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":112903,"byte_end":112908,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1976},"to":{"krate":0,"index":572}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":114614,"byte_end":114624,"line_start":76,"line_end":76,"column_start":29,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":572},"to":{"krate":0,"index":583}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":117486,"byte_end":117501,"line_start":149,"line_end":149,"column_start":32,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":578},"to":{"krate":0,"index":590}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\param_curve.rs","byte_start":118356,"byte_end":118366,"line_start":173,"line_end":173,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":572},"to":{"krate":0,"index":593}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":119744,"byte_end":119749,"line_start":19,"line_end":19,"column_start":6,"column_end":11},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123427,"byte_end":123432,"line_start":156,"line_end":156,"column_start":27,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1314},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123662,"byte_end":123667,"line_start":170,"line_end":170,"column_start":20,"column_end":25},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1314},"to":{"krate":2,"index":2036}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123839,"byte_end":123844,"line_start":179,"line_end":179,"column_start":26,"column_end":31},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1314},"to":{"krate":2,"index":2067}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":123996,"byte_end":124001,"line_start":186,"line_end":186,"column_start":20,"column_end":25},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1314},"to":{"krate":2,"index":2041}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":124173,"byte_end":124178,"line_start":195,"line_end":195,"column_start":26,"column_end":31},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1314},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":124331,"byte_end":124336,"line_start":202,"line_end":202,"column_start":21,"column_end":26},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1314},"to":{"krate":2,"index":2041}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":124502,"byte_end":124507,"line_start":211,"line_end":211,"column_start":21,"column_end":26},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1314},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\point.rs","byte_start":124650,"byte_end":124655,"line_start":217,"line_end":217,"column_start":23,"column_end":28},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1314},"to":{"krate":2,"index":6327}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":126741,"byte_end":126748,"line_start":24,"line_end":24,"column_start":6,"column_end":13},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":129618,"byte_end":129625,"line_start":118,"line_end":118,"column_start":21,"column_end":28},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1326},"to":{"krate":0,"index":572}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":130609,"byte_end":130616,"line_start":156,"line_end":156,"column_start":26,"column_end":33},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1326},"to":{"krate":0,"index":578}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":130901,"byte_end":130908,"line_start":168,"line_end":168,"column_start":27,"column_end":34},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1326},"to":{"krate":0,"index":583}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":133050,"byte_end":133057,"line_start":222,"line_end":222,"column_start":25,"column_end":32},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1326},"to":{"krate":0,"index":586}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":133323,"byte_end":133330,"line_start":231,"line_end":231,"column_start":28,"column_end":35},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1326},"to":{"krate":0,"index":588}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":134870,"byte_end":134877,"line_start":276,"line_end":276,"column_start":30,"column_end":37},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1326},"to":{"krate":0,"index":590}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":134909,"byte_end":134916,"line_start":278,"line_end":278,"column_start":28,"column_end":35},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1326},"to":{"krate":0,"index":593}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\quadbez.rs","byte_start":135576,"byte_end":135582,"line_start":303,"line_end":303,"column_start":23,"column_end":29},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1149},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":141766,"byte_end":141770,"line_start":22,"line_end":22,"column_start":6,"column_end":10},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":156250,"byte_end":156254,"line_start":487,"line_end":487,"column_start":31,"column_end":35},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1339},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":156387,"byte_end":156391,"line_start":493,"line_end":493,"column_start":30,"column_end":34},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1339},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":156518,"byte_end":156522,"line_start":499,"line_end":499,"column_start":20,"column_end":24},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1339},"to":{"krate":2,"index":2036}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":156706,"byte_end":156710,"line_start":508,"line_end":508,"column_start":20,"column_end":24},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1339},"to":{"krate":2,"index":2041}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":156888,"byte_end":156892,"line_start":517,"line_end":517,"column_start":14,"column_end":18},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1339},"to":{"krate":2,"index":2041}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":157259,"byte_end":157263,"line_start":536,"line_end":536,"column_start":16,"column_end":20},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1339},"to":{"krate":0,"index":851}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":158660,"byte_end":158672,"line_start":587,"line_end":587,"column_start":19,"column_end":31},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":5047}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":159209,"byte_end":159213,"line_start":603,"line_end":603,"column_start":21,"column_end":25},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1339},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rect.rs","byte_start":159700,"byte_end":159704,"line_start":622,"line_end":622,"column_start":23,"column_end":27},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1339},"to":{"krate":2,"index":6327}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":163929,"byte_end":163940,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":166420,"byte_end":166431,"line_start":119,"line_end":119,"column_start":16,"column_end":27},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1353},"to":{"krate":0,"index":851}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":169754,"byte_end":169766,"line_start":239,"line_end":239,"column_start":19,"column_end":31},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":832},"to":{"krate":2,"index":5047}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\rounded_rect.rs","byte_start":170615,"byte_end":170634,"line_start":268,"line_end":268,"column_start":19,"column_end":38},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":818},"to":{"krate":2,"index":5047}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\shape.rs","byte_start":173179,"byte_end":173184,"line_start":6,"line_end":6,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1976},"to":{"krate":0,"index":851}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":178226,"byte_end":178230,"line_start":19,"line_end":19,"column_start":6,"column_end":10},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":183805,"byte_end":183809,"line_start":207,"line_end":207,"column_start":21,"column_end":25},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":183961,"byte_end":183965,"line_start":213,"line_end":213,"column_start":23,"column_end":27},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":6327}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":184271,"byte_end":184275,"line_start":223,"line_end":223,"column_start":25,"column_end":29},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":2075}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":184610,"byte_end":184614,"line_start":242,"line_end":242,"column_start":19,"column_end":23},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":184833,"byte_end":184837,"line_start":254,"line_end":254,"column_start":25,"column_end":29},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":2079}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":185038,"byte_end":185042,"line_start":264,"line_end":264,"column_start":19,"column_end":23},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":2051}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":185256,"byte_end":185260,"line_start":276,"line_end":276,"column_start":20,"column_end":24},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":2036}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":185493,"byte_end":185497,"line_start":287,"line_end":287,"column_start":26,"column_end":30},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":2067}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":185617,"byte_end":185621,"line_start":294,"line_end":294,"column_start":20,"column_end":24},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":2041}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":185854,"byte_end":185858,"line_start":305,"line_end":305,"column_start":26,"column_end":30},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":185985,"byte_end":185989,"line_start":312,"line_end":312,"column_start":27,"column_end":31},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\size.rs","byte_start":186339,"byte_end":186343,"line_start":330,"line_end":330,"column_start":21,"column_end":25},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":1886}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":187828,"byte_end":187835,"line_start":31,"line_end":31,"column_start":6,"column_end":13},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":195886,"byte_end":195899,"line_start":240,"line_end":240,"column_start":18,"column_end":31},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1391},"to":{"krate":2,"index":6327}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":196262,"byte_end":196275,"line_start":250,"line_end":250,"column_start":16,"column_end":29},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1391},"to":{"krate":1,"index":1690}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":196372,"byte_end":196380,"line_start":258,"line_end":258,"column_start":10,"column_end":18},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":200011,"byte_end":200017,"line_start":386,"line_end":386,"column_start":6,"column_end":12},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\svg.rs","byte_start":200285,"byte_end":200288,"line_start":395,"line_end":395,"column_start":6,"column_end":9},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":209193,"byte_end":209207,"line_start":43,"line_end":43,"column_start":6,"column_end":20},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":210418,"byte_end":210432,"line_start":83,"line_end":83,"column_start":18,"column_end":32},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":210560,"byte_end":210566,"line_start":90,"line_end":90,"column_start":31,"column_end":37},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1149},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":210774,"byte_end":210788,"line_start":97,"line_end":97,"column_start":21,"column_end":35},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":210964,"byte_end":210978,"line_start":106,"line_end":106,"column_start":14,"column_end":28},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":211274,"byte_end":211288,"line_start":118,"line_end":118,"column_start":20,"column_end":34},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":2075}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":211698,"byte_end":211712,"line_start":137,"line_end":137,"column_start":20,"column_end":34},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":2036}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":211969,"byte_end":211973,"line_start":149,"line_end":149,"column_start":30,"column_end":34},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":2036}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":212140,"byte_end":212154,"line_start":158,"line_end":158,"column_start":26,"column_end":40},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":2067}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":212276,"byte_end":212290,"line_start":165,"line_end":165,"column_start":20,"column_end":34},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":2041}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":212543,"byte_end":212557,"line_start":177,"line_end":177,"column_start":26,"column_end":40},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":212681,"byte_end":212695,"line_start":184,"line_end":184,"column_start":22,"column_end":36},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":212879,"byte_end":212893,"line_start":193,"line_end":193,"column_start":20,"column_end":34},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":213055,"byte_end":213069,"line_start":202,"line_end":202,"column_start":20,"column_end":34},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":213326,"byte_end":213340,"line_start":213,"line_end":213,"column_start":27,"column_end":41},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":213555,"byte_end":213569,"line_start":222,"line_end":222,"column_start":23,"column_end":37},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\translate_scale.rs","byte_start":213764,"byte_end":213778,"line_start":231,"line_end":231,"column_start":24,"column_end":38},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":215763,"byte_end":215767,"line_start":23,"line_end":23,"column_start":6,"column_end":10},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":220935,"byte_end":220939,"line_start":218,"line_end":218,"column_start":27,"column_end":31},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":221159,"byte_end":221163,"line_start":232,"line_end":232,"column_start":14,"column_end":18},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":2036}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":221364,"byte_end":221368,"line_start":244,"line_end":244,"column_start":20,"column_end":24},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":2067}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":221550,"byte_end":221554,"line_start":254,"line_end":254,"column_start":14,"column_end":18},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":2041}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":221755,"byte_end":221759,"line_start":266,"line_end":266,"column_start":20,"column_end":24},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":221946,"byte_end":221950,"line_start":276,"line_end":276,"column_start":19,"column_end":23},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":222151,"byte_end":222155,"line_start":288,"line_end":288,"column_start":25,"column_end":29},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":2075}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":222472,"byte_end":222476,"line_start":307,"line_end":307,"column_start":19,"column_end":23},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":2051}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":222842,"byte_end":222846,"line_start":320,"line_end":320,"column_start":25,"column_end":29},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":2079}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":222968,"byte_end":222972,"line_start":327,"line_end":327,"column_start":14,"column_end":18},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":2063}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\kurbo-0.6.3\\src\\vec2.rs","byte_start":223145,"byte_end":223149,"line_start":339,"line_end":339,"column_start":23,"column_end":27},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":6327}}]}