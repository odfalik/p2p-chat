{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0","program":"C:\\Users\\falik\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","druid","--edition=2018","C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=47999f51cc6ed4be","-C","extra-filename=-47999f51cc6ed4be","--out-dir","c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps","--extern","druid_derive=c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps\\druid_derive-92a5ef74d215394c.dll","--extern","druid_shell=c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps\\libdruid_shell-314e15c6fe1e1d6a.rmeta","--extern","fluent_bundle=c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps\\libfluent_bundle-e0213f8c831bd39c.rmeta","--extern","fluent_langneg=c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps\\libfluent_langneg-691c1f899221ed72.rmeta","--extern","fluent_syntax=c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps\\libfluent_syntax-3dc17f7ca82821a1.rmeta","--extern","fnv=c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps\\libfnv-51d0e1c9a2bdcde5.rmeta","--extern","instant=c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps\\libinstant-6b53b8277d837e0f.rmeta","--extern","log=c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps\\liblog-4d05b636e61b7630.rmeta","--extern","simple_logger=c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps\\libsimple_logger-6b99725bc141085b.rmeta","--extern","unic_langid=c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps\\libunic_langid-1a0b95aa23677caa.rmeta","--extern","unicode_segmentation=c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps\\libunicode_segmentation-5e3e8b4a0603bb8e.rmeta","--extern","xi_unicode=c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps\\libxi_unicode-2592a9596e527497.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\falik\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps\\libdruid-47999f51cc6ed4be.rmeta"},"prelude":{"crate_id":{"name":"druid","disambiguator":[340353151966768086,18403751647546437111]},"crate_root":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src","external_crates":[{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[45344308337484766,904807583985397655]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[17608585110195136257,12532935013018738971]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10644633998059158352,10345665241509147306]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18212625787733517551,4937265065110821766]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2699922135837212616,11588109643627721037]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16653465091603201180,18239440457404116996]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3073254730555026972,7758270140448631200]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13759999943095835806,4978516890064261122]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4575299228079760236,9361028770882531394]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10307147502021998988,15592389341950453369]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2670035867216739096,10315597156951015330]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7309248630993686720,3186694738066578297]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":13,"id":{"name":"druid_derive","disambiguator":[8750979488065808788,13860276448426837981]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":14,"id":{"name":"druid_shell","disambiguator":[10632435778548607487,5027790325655612752]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":15,"id":{"name":"kurbo","disambiguator":[10145121447980278301,12936751777751430686]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":16,"id":{"name":"arrayvec","disambiguator":[9092535797533170815,16642564076026226512]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":17,"id":{"name":"piet_common","disambiguator":[5410373099261145046,10100700948848129791]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":18,"id":{"name":"piet","disambiguator":[2831923670447006883,6583865593738601880]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":19,"id":{"name":"cfg_if","disambiguator":[2165763469786474795,14178114571539448228]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":20,"id":{"name":"piet_direct2d","disambiguator":[12609087656792850986,12339909767452042554]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":21,"id":{"name":"winapi","disambiguator":[2443334114920443930,3236215031580195971]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":22,"id":{"name":"wio","disambiguator":[14899165245836841888,8606327060688362677]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","num":23,"id":{"name":"log","disambiguator":[17640452049177617351,5954061479364193984]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":24,"id":{"name":"cfg_if","disambiguator":[9398920662820909360,17510556047412496937]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":25,"id":{"name":"lazy_static","disambiguator":[10261200952311231637,10970365695526097638]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","num":26,"id":{"name":"anyhow","disambiguator":[7051905044554864174,10393110979686189291]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\window.rs","num":27,"id":{"name":"instant","disambiguator":[8259430048525926981,7731072513814625122]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\bloom.rs","num":28,"id":{"name":"fnv","disambiguator":[11241292932367675571,2055585937077821392]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","num":29,"id":{"name":"fluent_bundle","disambiguator":[8099308545672603648,1767754089595218430]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","num":30,"id":{"name":"rental","disambiguator":[12052634213151497013,10233982106294067794]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","num":31,"id":{"name":"rental_impl","disambiguator":[15013934706897342051,12441330839114851133]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","num":32,"id":{"name":"stable_deref_trait","disambiguator":[11200543915590666757,11492728557928445798]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","num":33,"id":{"name":"intl_memoizer","disambiguator":[14958393630940270993,1113750187482604959]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","num":34,"id":{"name":"unic_langid","disambiguator":[4829883813816141975,16880700085764239546]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","num":35,"id":{"name":"unic_langid_impl","disambiguator":[9310631246050980929,17051126465625280793]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","num":36,"id":{"name":"tinystr","disambiguator":[5252378592887125505,8825844069345671734]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","num":37,"id":{"name":"type_map","disambiguator":[4730318639381367253,6736039224750667890]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","num":38,"id":{"name":"rustc_hash","disambiguator":[5795311694935365351,13521637195796198873]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","num":39,"id":{"name":"fluent_syntax","disambiguator":[1396087855124373807,17477935525989653268]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","num":40,"id":{"name":"intl_pluralrules","disambiguator":[11610578906491400185,18113271963096303931]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","num":41,"id":{"name":"fluent_langneg","disambiguator":[7325276040098259897,7456011726613573865]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","num":42,"id":{"name":"smallvec","disambiguator":[8049761522234649022,14379993341722090909]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","num":43,"id":{"name":"unicode_segmentation","disambiguator":[5976936670102895486,13331754057879752613]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\backspace.rs","num":44,"id":{"name":"xi_unicode","disambiguator":[8597937339970314564,12776473357680519426]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","num":45,"id":{"name":"simple_logger","disambiguator":[9172153554752117566,14536723706123252485]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","num":46,"id":{"name":"atty","disambiguator":[14231663726332997612,3877923196633820848]}}],"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":600,"byte_end":6281,"line_start":15,"line_end":176,"column_start":1,"column_end":49}},"imports":[{"kind":"Use","ref_id":{"krate":13,"index":95},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":4259,"byte_end":4263,"line_start":110,"line_end":110,"column_start":23,"column_end":27},"alias_span":null,"name":"Lens","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":0},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":4329,"byte_end":4334,"line_start":114,"line_end":114,"column_start":23,"column_end":28},"alias_span":null,"name":"kurbo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":0},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":4336,"byte_end":4340,"line_start":114,"line_end":114,"column_start":30,"column_end":34},"alias_span":null,"name":"piet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":13,"index":93},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":110502,"byte_end":110506,"line_start":24,"line_end":24,"column_start":23,"column_end":27},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":494}},{"kind":"Use","ref_id":{"krate":0,"index":3782},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":162200,"byte_end":162205,"line_start":51,"line_end":51,"column_start":16,"column_end":21},"alias_span":null,"name":"Deref","value":"","parent":{"krate":0,"index":756}},{"kind":"Use","ref_id":{"krate":0,"index":3783},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":162200,"byte_end":162205,"line_start":51,"line_end":51,"column_start":16,"column_end":21},"alias_span":null,"name":"Deref","value":"","parent":{"krate":0,"index":937}},{"kind":"Use","ref_id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":162207,"byte_end":162212,"line_start":51,"line_end":51,"column_start":23,"column_end":28},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":756}},{"kind":"Use","ref_id":{"krate":0,"index":3800},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":162214,"byte_end":162216,"line_start":51,"line_end":51,"column_start":30,"column_end":32},"alias_span":null,"name":"Id","value":"","parent":{"krate":0,"index":756}},{"kind":"Use","ref_id":{"krate":0,"index":3801},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":162214,"byte_end":162216,"line_start":51,"line_end":51,"column_start":30,"column_end":32},"alias_span":null,"name":"Id","value":"","parent":{"krate":0,"index":939}},{"kind":"Use","ref_id":{"krate":0,"index":3807},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":162218,"byte_end":162223,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"alias_span":null,"name":"InArc","value":"","parent":{"krate":0,"index":756}},{"kind":"Use","ref_id":{"krate":0,"index":3789},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":162225,"byte_end":162230,"line_start":51,"line_end":51,"column_start":41,"column_end":46},"alias_span":null,"name":"Index","value":"","parent":{"krate":0,"index":756}},{"kind":"Use","ref_id":{"krate":0,"index":3766},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":162232,"byte_end":162235,"line_start":51,"line_end":51,"column_start":48,"column_end":51},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":756}},{"kind":"Use","ref_id":{"krate":0,"index":3750},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":162237,"byte_end":162241,"line_start":51,"line_end":51,"column_start":53,"column_end":57},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":756}},{"kind":"Use","ref_id":{"krate":0,"index":764},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":162274,"byte_end":162278,"line_start":53,"line_end":53,"column_start":16,"column_end":20},"alias_span":null,"name":"Lens","value":"","parent":{"krate":0,"index":756}},{"kind":"Use","ref_id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":162280,"byte_end":162287,"line_start":53,"line_end":53,"column_start":22,"column_end":29},"alias_span":null,"name":"LensExt","value":"","parent":{"krate":0,"index":756}},{"kind":"Use","ref_id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":162289,"byte_end":162297,"line_start":53,"line_end":53,"column_start":31,"column_end":39},"alias_span":null,"name":"LensWrap","value":"","parent":{"krate":0,"index":756}},{"kind":"Use","ref_id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\mod.rs","byte_start":224606,"byte_end":224618,"line_start":18,"line_end":18,"column_start":31,"column_end":43},"alias_span":null,"name":"EditableText","value":"","parent":{"krate":0,"index":1200}},{"kind":"Use","ref_id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\mod.rs","byte_start":224620,"byte_end":224638,"line_start":18,"line_end":18,"column_start":45,"column_end":63},"alias_span":null,"name":"EditableTextCursor","value":"","parent":{"krate":0,"index":1200}},{"kind":"Use","ref_id":{"krate":0,"index":3914},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\mod.rs","byte_start":224640,"byte_end":224652,"line_start":18,"line_end":18,"column_start":65,"column_end":77},"alias_span":null,"name":"StringCursor","value":"","parent":{"krate":0,"index":1200}},{"kind":"Use","ref_id":{"krate":0,"index":3921},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\mod.rs","byte_start":224700,"byte_end":224709,"line_start":21,"line_end":21,"column_start":26,"column_end":35},"alias_span":null,"name":"Selection","value":"","parent":{"krate":0,"index":1200}},{"kind":"Use","ref_id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\mod.rs","byte_start":224755,"byte_end":224763,"line_start":24,"line_end":24,"column_start":26,"column_end":34},"alias_span":null,"name":"movement","value":"","parent":{"krate":0,"index":1200}},{"kind":"Use","ref_id":{"krate":0,"index":3929},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\mod.rs","byte_start":224765,"byte_end":224773,"line_start":24,"line_end":24,"column_start":36,"column_end":44},"alias_span":null,"name":"Movement","value":"","parent":{"krate":0,"index":1200}},{"kind":"Use","ref_id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\mod.rs","byte_start":224821,"byte_end":224848,"line_start":27,"line_end":27,"column_start":26,"column_end":53},"alias_span":null,"name":"offset_for_delete_backwards","value":"","parent":{"krate":0,"index":1200}},{"kind":"Use","ref_id":{"krate":0,"index":4023},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\mod.rs","byte_start":224894,"byte_end":224908,"line_start":30,"line_end":30,"column_start":28,"column_end":42},"alias_span":null,"name":"BasicTextInput","value":"","parent":{"krate":0,"index":1200}},{"kind":"Use","ref_id":{"krate":0,"index":3978},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\mod.rs","byte_start":224910,"byte_end":224920,"line_start":30,"line_end":30,"column_start":44,"column_end":54},"alias_span":null,"name":"EditAction","value":"","parent":{"krate":0,"index":1200}},{"kind":"Use","ref_id":{"krate":0,"index":4011},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\mod.rs","byte_start":224922,"byte_end":224933,"line_start":30,"line_end":30,"column_start":56,"column_end":67},"alias_span":null,"name":"MouseAction","value":"","parent":{"krate":0,"index":1200}},{"kind":"Use","ref_id":{"krate":0,"index":1306},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\mod.rs","byte_start":224935,"byte_end":224944,"line_start":30,"line_end":30,"column_start":69,"column_end":78},"alias_span":null,"name":"TextInput","value":"","parent":{"krate":0,"index":1200}},{"kind":"Use","ref_id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260440,"byte_end":260445,"line_start":58,"line_end":58,"column_start":16,"column_end":21},"alias_span":null,"name":"Align","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":1432},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260463,"byte_end":260469,"line_start":59,"line_end":59,"column_start":17,"column_end":23},"alias_span":null,"name":"Button","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":1482},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260489,"byte_end":260497,"line_start":60,"line_end":60,"column_start":19,"column_end":27},"alias_span":null,"name":"Checkbox","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":1503},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260514,"byte_end":260519,"line_start":61,"line_end":61,"column_start":16,"column_end":21},"alias_span":null,"name":"Click","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":4026},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260537,"byte_end":260546,"line_start":62,"line_end":62,"column_start":17,"column_end":26},"alias_span":null,"name":"FillStrat","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":1548},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260567,"byte_end":260576,"line_start":63,"line_end":63,"column_start":20,"column_end":29},"alias_span":null,"name":"Container","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":1586},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260599,"byte_end":260609,"line_start":64,"line_end":64,"column_start":22,"column_end":32},"alias_span":null,"name":"Controller","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":1592},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260611,"byte_end":260625,"line_start":64,"line_end":64,"column_start":34,"column_end":48},"alias_span":null,"name":"ControllerHost","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":1629},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260644,"byte_end":260650,"line_start":65,"line_end":65,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":1663},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260671,"byte_end":260679,"line_start":66,"line_end":66,"column_start":20,"column_end":28},"alias_span":null,"name":"EnvScope","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":4063},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260696,"byte_end":260714,"line_start":67,"line_end":67,"column_start":16,"column_end":34},"alias_span":null,"name":"CrossAxisAlignment","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":1703},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260716,"byte_end":260720,"line_start":67,"line_end":67,"column_start":36,"column_end":40},"alias_span":null,"name":"Flex","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":4047},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260722,"byte_end":260732,"line_start":67,"line_end":67,"column_start":42,"column_end":52},"alias_span":null,"name":"FlexParams","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":4080},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260734,"byte_end":260751,"line_start":67,"line_end":67,"column_start":54,"column_end":71},"alias_span":null,"name":"MainAxisAlignment","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":1802},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260780,"byte_end":260795,"line_start":68,"line_end":68,"column_start":27,"column_end":42},"alias_span":null,"name":"IdentityWrapper","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":1886},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260813,"byte_end":260818,"line_start":69,"line_end":69,"column_start":17,"column_end":22},"alias_span":null,"name":"Label","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":1871},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260820,"byte_end":260829,"line_start":69,"line_end":69,"column_start":24,"column_end":33},"alias_span":null,"name":"LabelText","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":1966},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260847,"byte_end":260851,"line_start":70,"line_end":70,"column_start":16,"column_end":20},"alias_span":null,"name":"List","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":1979},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260853,"byte_end":260861,"line_start":70,"line_end":70,"column_start":22,"column_end":30},"alias_span":null,"name":"ListIter","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":2033},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260881,"byte_end":260888,"line_start":71,"line_end":71,"column_start":18,"column_end":25},"alias_span":null,"name":"Padding","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":2078},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260908,"byte_end":260923,"line_start":72,"line_end":72,"column_start":19,"column_end":34},"alias_span":null,"name":"BackgroundBrush","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260925,"byte_end":260932,"line_start":72,"line_end":72,"column_start":36,"column_end":43},"alias_span":null,"name":"Painter","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":2151},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260950,"byte_end":260955,"line_start":73,"line_end":73,"column_start":16,"column_end":21},"alias_span":null,"name":"Parse","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":4103},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260979,"byte_end":260990,"line_start":74,"line_end":74,"column_start":23,"column_end":34},"alias_span":null,"name":"ProgressBar","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":4104},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":260979,"byte_end":260990,"line_start":74,"line_end":74,"column_start":23,"column_end":34},"alias_span":null,"name":"ProgressBar","value":"","parent":{"krate":0,"index":2867}},{"kind":"Use","ref_id":{"krate":0,"index":2231},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261008,"byte_end":261013,"line_start":75,"line_end":75,"column_start":17,"column_end":22},"alias_span":null,"name":"Radio","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":4111},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261015,"byte_end":261025,"line_start":75,"line_end":75,"column_start":24,"column_end":34},"alias_span":null,"name":"RadioGroup","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":4112},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261015,"byte_end":261025,"line_start":75,"line_end":75,"column_start":24,"column_end":34},"alias_span":null,"name":"RadioGroup","value":"","parent":{"krate":0,"index":2870}},{"kind":"Use","ref_id":{"krate":0,"index":2302},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261044,"byte_end":261050,"line_start":76,"line_end":76,"column_start":17,"column_end":23},"alias_span":null,"name":"Scroll","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":2359},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261071,"byte_end":261079,"line_start":77,"line_end":77,"column_start":20,"column_end":28},"alias_span":null,"name":"SizedBox","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":4128},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261097,"byte_end":261103,"line_start":78,"line_end":78,"column_start":17,"column_end":23},"alias_span":null,"name":"Slider","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":2430},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261122,"byte_end":261129,"line_start":79,"line_end":79,"column_start":18,"column_end":25},"alias_span":null,"name":"Spinner","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":2472},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261146,"byte_end":261151,"line_start":80,"line_end":80,"column_start":16,"column_end":21},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":2545},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261170,"byte_end":261177,"line_start":81,"line_end":81,"column_start":18,"column_end":25},"alias_span":null,"name":"Stepper","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":4140},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261295,"byte_end":261301,"line_start":85,"line_end":85,"column_start":17,"column_end":23},"alias_span":null,"name":"Switch","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":4151},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261320,"byte_end":261327,"line_start":86,"line_end":86,"column_start":18,"column_end":25},"alias_span":null,"name":"TextBox","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":2708},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261352,"byte_end":261364,"line_start":87,"line_end":87,"column_start":24,"column_end":36},"alias_span":null,"name":"ViewSwitcher","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":2735},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261398,"byte_end":261404,"line_start":89,"line_end":89,"column_start":18,"column_end":24},"alias_span":null,"name":"Widget","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":4162},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261406,"byte_end":261414,"line_start":89,"line_end":89,"column_start":26,"column_end":34},"alias_span":null,"name":"WidgetId","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":2785},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261452,"byte_end":261461,"line_start":91,"line_end":91,"column_start":21,"column_end":30},"alias_span":null,"name":"WidgetExt","value":"","parent":{"krate":0,"index":1366}},{"kind":"Use","ref_id":{"krate":0,"index":3263},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":262296,"byte_end":262310,"line_start":117,"line_end":117,"column_start":9,"column_end":23},"alias_span":null,"name":"BoxConstraints","value":"","parent":{"krate":0,"index":2884}},{"kind":"Use","ref_id":{"krate":0,"index":3550},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":262312,"byte_end":262315,"line_start":117,"line_end":117,"column_start":25,"column_end":28},"alias_span":null,"name":"Env","value":"","parent":{"krate":0,"index":2884}},{"kind":"Use","ref_id":{"krate":0,"index":3643},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":262317,"byte_end":262322,"line_start":117,"line_end":117,"column_start":30,"column_end":35},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":2884}},{"kind":"Use","ref_id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":262324,"byte_end":262332,"line_start":117,"line_end":117,"column_start":37,"column_end":45},"alias_span":null,"name":"EventCtx","value":"","parent":{"krate":0,"index":2884}},{"kind":"Use","ref_id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":262334,"byte_end":262343,"line_start":117,"line_end":117,"column_start":47,"column_end":56},"alias_span":null,"name":"LayoutCtx","value":"","parent":{"krate":0,"index":2884}},{"kind":"Use","ref_id":{"krate":0,"index":3701},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":262345,"byte_end":262354,"line_start":117,"line_end":117,"column_start":58,"column_end":67},"alias_span":null,"name":"LifeCycle","value":"","parent":{"krate":0,"index":2884}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":262356,"byte_end":262368,"line_start":117,"line_end":117,"column_start":69,"column_end":81},"alias_span":null,"name":"LifeCycleCtx","value":"","parent":{"krate":0,"index":2884}},{"kind":"Use","ref_id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":262370,"byte_end":262378,"line_start":117,"line_end":117,"column_start":83,"column_end":91},"alias_span":null,"name":"PaintCtx","value":"","parent":{"krate":0,"index":2884}},{"kind":"Use","ref_id":{"krate":18,"index":289},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":262388,"byte_end":262401,"line_start":118,"line_end":118,"column_start":9,"column_end":22},"alias_span":null,"name":"RenderContext","value":"","parent":{"krate":0,"index":2884}},{"kind":"Use","ref_id":{"krate":15,"index":1367},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":262403,"byte_end":262407,"line_start":118,"line_end":118,"column_start":24,"column_end":28},"alias_span":null,"name":"Size","value":"","parent":{"krate":0,"index":2884}},{"kind":"Use","ref_id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":262409,"byte_end":262418,"line_start":118,"line_end":118,"column_start":30,"column_end":39},"alias_span":null,"name":"UpdateCtx","value":"","parent":{"krate":0,"index":2884}},{"kind":"Use","ref_id":{"krate":0,"index":2735},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":262420,"byte_end":262426,"line_start":118,"line_end":118,"column_start":41,"column_end":47},"alias_span":null,"name":"Widget","value":"","parent":{"krate":0,"index":2884}},{"kind":"Use","ref_id":{"krate":0,"index":4162},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":262428,"byte_end":262436,"line_start":118,"line_end":118,"column_start":49,"column_end":57},"alias_span":null,"name":"WidgetId","value":"","parent":{"krate":0,"index":2884}},{"kind":"Use","ref_id":{"krate":15,"index":1149},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":4887,"byte_end":4893,"line_start":147,"line_end":147,"column_start":17,"column_end":23},"alias_span":null,"name":"Affine","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":1278},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":4895,"byte_end":4901,"line_start":147,"line_end":147,"column_start":25,"column_end":31},"alias_span":null,"name":"Insets","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":1314},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":4903,"byte_end":4908,"line_start":147,"line_end":147,"column_start":33,"column_end":38},"alias_span":null,"name":"Point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":1339},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":4910,"byte_end":4914,"line_start":147,"line_end":147,"column_start":40,"column_end":44},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":1367},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":4916,"byte_end":4920,"line_start":147,"line_end":147,"column_start":46,"column_end":50},"alias_span":null,"name":"Size","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":1409},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":4922,"byte_end":4926,"line_start":147,"line_end":147,"column_start":52,"column_end":56},"alias_span":null,"name":"Vec2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":401},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":4944,"byte_end":4949,"line_start":148,"line_end":148,"column_start":16,"column_end":21},"alias_span":null,"name":"Color","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":458},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":4951,"byte_end":4965,"line_start":148,"line_end":148,"column_start":23,"column_end":37},"alias_span":null,"name":"LinearGradient","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":466},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":4967,"byte_end":4981,"line_start":148,"line_end":148,"column_start":39,"column_end":53},"alias_span":null,"name":"RadialGradient","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":289},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":4983,"byte_end":4996,"line_start":148,"line_end":148,"column_start":55,"column_end":68},"alias_span":null,"name":"RenderContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":485},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":4998,"byte_end":5007,"line_start":148,"line_end":148,"column_start":70,"column_end":79},"alias_span":null,"name":"UnitPoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":434},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5112,"byte_end":5123,"line_start":151,"line_end":151,"column_start":5,"column_end":16},"alias_span":null,"name":"Application","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":443},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5125,"byte_end":5134,"line_start":151,"line_end":151,"column_start":18,"column_end":27},"alias_span":null,"name":"Clipboard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":450},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5136,"byte_end":5151,"line_start":151,"line_end":151,"column_start":29,"column_end":44},"alias_span":null,"name":"ClipboardFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":894},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5153,"byte_end":5159,"line_start":151,"line_end":151,"column_start":46,"column_end":52},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":492},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5161,"byte_end":5166,"line_start":151,"line_end":151,"column_start":54,"column_end":59},"alias_span":null,"name":"PlatformError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":467},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5185,"byte_end":5202,"line_start":151,"line_end":151,"column_start":78,"column_end":95},"alias_span":null,"name":"FileDialogOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":461},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5208,"byte_end":5216,"line_start":152,"line_end":152,"column_start":5,"column_end":13},"alias_span":null,"name":"FileInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":480},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5218,"byte_end":5226,"line_start":152,"line_end":152,"column_start":15,"column_end":23},"alias_span":null,"name":"FileSpec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":56},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5228,"byte_end":5236,"line_start":152,"line_end":152,"column_start":25,"column_end":33},"alias_span":null,"name":"FormatId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":507},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5238,"byte_end":5244,"line_start":152,"line_end":152,"column_start":35,"column_end":41},"alias_span":null,"name":"HotKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":618},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5246,"byte_end":5253,"line_start":152,"line_end":152,"column_start":43,"column_end":50},"alias_span":null,"name":"KeyCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":585},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5255,"byte_end":5263,"line_start":152,"line_end":152,"column_start":52,"column_end":60},"alias_span":null,"name":"KeyEvent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":596},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5265,"byte_end":5277,"line_start":152,"line_end":152,"column_start":62,"column_end":74},"alias_span":null,"name":"KeyModifiers","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":855},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5279,"byte_end":5290,"line_start":152,"line_end":152,"column_start":76,"column_end":87},"alias_span":null,"name":"MouseButton","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":879},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5296,"byte_end":5308,"line_start":153,"line_end":153,"column_start":5,"column_end":17},"alias_span":null,"name":"MouseButtons","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":547},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5310,"byte_end":5317,"line_start":153,"line_end":153,"column_start":19,"column_end":26},"alias_span":null,"name":"RawMods","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":1782},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5319,"byte_end":5324,"line_start":153,"line_end":153,"column_start":28,"column_end":33},"alias_span":null,"name":"Scale","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":529},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5326,"byte_end":5333,"line_start":153,"line_end":153,"column_start":35,"column_end":42},"alias_span":null,"name":"SysMods","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":326},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5335,"byte_end":5339,"line_start":153,"line_end":153,"column_start":44,"column_end":48},"alias_span":null,"name":"Text","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":1808},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5341,"byte_end":5351,"line_start":153,"line_end":153,"column_start":50,"column_end":60},"alias_span":null,"name":"TimerToken","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":1861},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5353,"byte_end":5365,"line_start":153,"line_end":153,"column_start":62,"column_end":74},"alias_span":null,"name":"WindowHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5392,"byte_end":5401,"line_start":156,"line_end":156,"column_start":22,"column_end":31},"alias_span":null,"name":"WidgetPod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5417,"byte_end":5428,"line_start":157,"line_end":157,"column_start":15,"column_end":26},"alias_span":null,"name":"AppLauncher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5430,"byte_end":5440,"line_start":157,"line_end":157,"column_start":28,"column_end":38},"alias_span":null,"name":"WindowDesc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5466,"byte_end":5477,"line_start":158,"line_end":158,"column_start":24,"column_end":35},"alias_span":null,"name":"AppDelegate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5479,"byte_end":5490,"line_start":158,"line_end":158,"column_start":37,"column_end":48},"alias_span":null,"name":"DelegateCtx","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3263},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5518,"byte_end":5532,"line_start":159,"line_end":159,"column_start":26,"column_end":40},"alias_span":null,"name":"BoxConstraints","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5552,"byte_end":5555,"line_start":160,"line_end":160,"column_start":19,"column_end":22},"alias_span":null,"name":"commands","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3290},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5569,"byte_end":5576,"line_start":160,"line_end":160,"column_start":36,"column_end":43},"alias_span":null,"name":"Command","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3271},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5578,"byte_end":5586,"line_start":160,"line_end":160,"column_start":45,"column_end":53},"alias_span":null,"name":"Selector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5588,"byte_end":5597,"line_start":160,"line_end":160,"column_start":55,"column_end":64},"alias_span":null,"name":"SingleUse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3297},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5599,"byte_end":5605,"line_start":160,"line_end":160,"column_start":66,"column_end":72},"alias_span":null,"name":"Target","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5627,"byte_end":5635,"line_start":161,"line_end":161,"column_start":20,"column_end":28},"alias_span":null,"name":"EventCtx","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5637,"byte_end":5646,"line_start":161,"line_end":161,"column_start":30,"column_end":39},"alias_span":null,"name":"LayoutCtx","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5648,"byte_end":5660,"line_start":161,"line_end":161,"column_start":41,"column_end":53},"alias_span":null,"name":"LifeCycleCtx","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5662,"byte_end":5670,"line_start":161,"line_end":161,"column_start":55,"column_end":63},"alias_span":null,"name":"PaintCtx","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3315},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5672,"byte_end":5678,"line_start":161,"line_end":161,"column_start":65,"column_end":71},"alias_span":null,"name":"Region","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5680,"byte_end":5689,"line_start":161,"line_end":161,"column_start":73,"column_end":82},"alias_span":null,"name":"UpdateCtx","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5706,"byte_end":5710,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":13,"index":93},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5706,"byte_end":5710,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":3219}},{"kind":"Use","ref_id":{"krate":0,"index":3550},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5726,"byte_end":5729,"line_start":163,"line_end":163,"column_start":15,"column_end":18},"alias_span":null,"name":"Env","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5731,"byte_end":5734,"line_start":163,"line_end":163,"column_start":20,"column_end":23},"alias_span":null,"name":"Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5736,"byte_end":5746,"line_start":163,"line_end":163,"column_start":25,"column_end":35},"alias_span":null,"name":"KeyOrValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3561},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5748,"byte_end":5753,"line_start":163,"line_end":163,"column_start":37,"column_end":42},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5755,"byte_end":5764,"line_start":163,"line_end":163,"column_start":44,"column_end":53},"alias_span":null,"name":"ValueType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3643},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5783,"byte_end":5788,"line_start":164,"line_end":164,"column_start":17,"column_end":22},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3686},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5790,"byte_end":5803,"line_start":164,"line_end":164,"column_start":24,"column_end":37},"alias_span":null,"name":"InternalEvent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3723},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5805,"byte_end":5822,"line_start":164,"line_end":164,"column_start":39,"column_end":56},"alias_span":null,"name":"InternalLifeCycle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3701},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5824,"byte_end":5833,"line_start":164,"line_end":164,"column_start":58,"column_end":67},"alias_span":null,"name":"LifeCycle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3744},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5856,"byte_end":5869,"line_start":165,"line_end":165,"column_start":21,"column_end":34},"alias_span":null,"name":"ExtEventError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3745},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5856,"byte_end":5869,"line_start":165,"line_end":165,"column_start":21,"column_end":34},"alias_span":null,"name":"ExtEventError","value":"","parent":{"krate":0,"index":3232}},{"kind":"Use","ref_id":{"krate":0,"index":3733},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5871,"byte_end":5883,"line_start":165,"line_end":165,"column_start":36,"column_end":48},"alias_span":null,"name":"ExtEventSink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":764},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5901,"byte_end":5905,"line_start":166,"line_end":166,"column_start":16,"column_end":20},"alias_span":null,"name":"Lens","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5907,"byte_end":5914,"line_start":166,"line_end":166,"column_start":22,"column_end":29},"alias_span":null,"name":"LensExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5916,"byte_end":5924,"line_start":166,"line_end":166,"column_start":31,"column_end":39},"alias_span":null,"name":"LensWrap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3825},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5949,"byte_end":5964,"line_start":167,"line_end":167,"column_start":23,"column_end":38},"alias_span":null,"name":"LocalizedString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1108},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":5981,"byte_end":5984,"line_start":168,"line_end":168,"column_start":16,"column_end":19},"alias_span":null,"name":"platform_menus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3876},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":6004,"byte_end":6015,"line_start":168,"line_end":168,"column_start":39,"column_end":50},"alias_span":null,"name":"ContextMenu","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3838},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":6017,"byte_end":6025,"line_start":168,"line_end":168,"column_start":52,"column_end":60},"alias_span":null,"name":"MenuDesc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3861},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":6027,"byte_end":6035,"line_start":168,"line_end":168,"column_start":62,"column_end":70},"alias_span":null,"name":"MenuItem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3901},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":6053,"byte_end":6063,"line_start":169,"line_end":169,"column_start":16,"column_end":26},"alias_span":null,"name":"MouseEvent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2735},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":6082,"byte_end":6088,"line_start":170,"line_end":170,"column_start":18,"column_end":24},"alias_span":null,"name":"Widget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2785},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":6090,"byte_end":6099,"line_start":170,"line_end":170,"column_start":26,"column_end":35},"alias_span":null,"name":"WidgetExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4162},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":6101,"byte_end":6109,"line_start":170,"line_end":170,"column_start":37,"column_end":45},"alias_span":null,"name":"WidgetId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2941},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":6133,"byte_end":6145,"line_start":171,"line_end":171,"column_start":22,"column_end":34},"alias_span":null,"name":"DruidHandler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3113},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":6164,"byte_end":6170,"line_start":172,"line_end":172,"column_start":18,"column_end":24},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4186},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":6172,"byte_end":6180,"line_start":172,"line_end":172,"column_start":26,"column_end":34},"alias_span":null,"name":"WindowId","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":600,"byte_end":6281,"line_start":15,"line_end":176,"column_start":1,"column_end":49},"name":"","qualname":"::","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":80},{"krate":0,"index":118},{"krate":0,"index":143},{"krate":0,"index":158},{"krate":0,"index":250},{"krate":0,"index":393},{"krate":0,"index":494},{"krate":0,"index":599},{"krate":0,"index":708},{"krate":0,"index":725},{"krate":0,"index":756},{"krate":0,"index":948},{"krate":0,"index":1035},{"krate":0,"index":1190},{"krate":0,"index":1200},{"krate":0,"index":1317},{"krate":0,"index":1356},{"krate":0,"index":1366},{"krate":0,"index":2899},{"krate":0,"index":3070},{"krate":0,"index":3163},{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3166},{"krate":0,"index":3167},{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3170},{"krate":0,"index":3171},{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3174},{"krate":0,"index":3175},{"krate":0,"index":3176},{"krate":0,"index":3177},{"krate":0,"index":3178},{"krate":0,"index":3179},{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3188},{"krate":0,"index":3189},{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3192},{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3195},{"krate":0,"index":3196},{"krate":0,"index":3197},{"krate":0,"index":3198},{"krate":0,"index":3199},{"krate":0,"index":3200},{"krate":0,"index":3201},{"krate":0,"index":3202},{"krate":0,"index":3203},{"krate":0,"index":3204},{"krate":0,"index":3205},{"krate":0,"index":3206},{"krate":0,"index":3207},{"krate":0,"index":3208},{"krate":0,"index":3209},{"krate":0,"index":3210},{"krate":0,"index":3211},{"krate":0,"index":3212},{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":3218},{"krate":0,"index":3219},{"krate":0,"index":6072},{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3222},{"krate":0,"index":3223},{"krate":0,"index":3224},{"krate":0,"index":3225},{"krate":0,"index":3226},{"krate":0,"index":3227},{"krate":0,"index":3228},{"krate":0,"index":3229},{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3232},{"krate":0,"index":6092},{"krate":0,"index":3233},{"krate":0,"index":3234},{"krate":0,"index":3235},{"krate":0,"index":3236},{"krate":0,"index":3237},{"krate":0,"index":3238},{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3241},{"krate":0,"index":3242},{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3245},{"krate":0,"index":3246},{"krate":0,"index":3247},{"krate":0,"index":3248},{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3251},{"krate":0,"index":3252}],"decl_id":null,"docs":" Simple data-oriented GUI.","sig":null,"attributes":[{"value":"/ Simple data-oriented GUI.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":600,"byte_end":629,"line_start":15,"line_end":15,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":630,"byte_end":633,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Druid lets you build simple interactive graphical applications that","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":634,"byte_end":705,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ can be deployed on Windows, macOS, Linux, and the web.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":706,"byte_end":764,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":765,"byte_end":768,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Druid is built on top of [`druid-shell`], which implements all of the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":769,"byte_end":842,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ lower-level, platform-specific code, providing a common abstraction","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":843,"byte_end":914,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ for things like key and mouse events, creating windows, and launching","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":915,"byte_end":988,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/ an application. Below [`druid-shell`] is [`piet`], which is a cross-platform","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":989,"byte_end":1069,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ 2D graphics library, providing a simple and familiar drawing API that can be","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1070,"byte_end":1150,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ implemented for various platforms.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1151,"byte_end":1189,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1190,"byte_end":1193,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Druid is a data-driven, declarative framework. You describe your application","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1194,"byte_end":1274,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ model in terms of the [`Data`] trait, and then you build up a tree of","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1275,"byte_end":1348,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ [`widget`] s that can display and modify your data.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1349,"byte_end":1404,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1405,"byte_end":1408,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Your widgets handle [`Event`]s, such as mouse movement, and can modify the data;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1409,"byte_end":1493,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ these changes are then delivered to relevant widgets, which can update","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1494,"byte_end":1568,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ their state and redraw.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1569,"byte_end":1596,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1597,"byte_end":1600,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ As your application grows, you can use [`Lens`]es to expose only certain","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1601,"byte_end":1677,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ subsets of your data model to certains subsets of your widget tree.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1678,"byte_end":1749,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1750,"byte_end":1753,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ For more information you should read the [druid book].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1754,"byte_end":1812,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1813,"byte_end":1816,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1817,"byte_end":1831,"line_start":40,"line_end":40,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1832,"byte_end":1835,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ For many more examples, see [`druid/examples`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1836,"byte_end":1887,"line_start":42,"line_end":42,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1888,"byte_end":1891,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1892,"byte_end":1905,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/ use druid::widget::{Align, Flex, Label, TextBox};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1906,"byte_end":1959,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/ use druid::{AppLauncher, Data, Env, Lens, LocalizedString, Widget, WindowDesc, WidgetExt};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":1960,"byte_end":2054,"line_start":46,"line_end":46,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2055,"byte_end":2058,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ const VERTICAL_WIDGET_SPACING: f64 = 20.0;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2059,"byte_end":2105,"line_start":48,"line_end":48,"column_start":1,"column_end":47}},{"value":"/ const TEXT_BOX_WIDTH: f64 = 200.0;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2106,"byte_end":2144,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/ const WINDOW_TITLE: LocalizedString<HelloState> = LocalizedString::new(\"Hello World!\");","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2145,"byte_end":2236,"line_start":50,"line_end":50,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2237,"byte_end":2240,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Data, Lens)]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2241,"byte_end":2273,"line_start":52,"line_end":52,"column_start":1,"column_end":33}},{"value":"/ struct HelloState {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2274,"byte_end":2297,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/     name: String,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2298,"byte_end":2319,"line_start":54,"line_end":54,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2320,"byte_end":2325,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2326,"byte_end":2329,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2330,"byte_end":2345,"line_start":57,"line_end":57,"column_start":1,"column_end":16}},{"value":"/     // describe the main window","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2346,"byte_end":2381,"line_start":58,"line_end":58,"column_start":1,"column_end":36}},{"value":"/     let main_window = WindowDesc::new(build_root_widget)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2382,"byte_end":2442,"line_start":59,"line_end":59,"column_start":1,"column_end":61}},{"value":"/         .title(WINDOW_TITLE)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2443,"byte_end":2475,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/         .window_size((400.0, 400.0));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2476,"byte_end":2517,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2518,"byte_end":2521,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     // create the initial app state","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2522,"byte_end":2561,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/     let initial_state = HelloState {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2562,"byte_end":2602,"line_start":64,"line_end":64,"column_start":1,"column_end":41}},{"value":"/         name: \"World\".into(),","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2603,"byte_end":2636,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/     };","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2637,"byte_end":2647,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2648,"byte_end":2651,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     // start the application","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2652,"byte_end":2684,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/     AppLauncher::with_window(main_window)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2685,"byte_end":2730,"line_start":69,"line_end":69,"column_start":1,"column_end":46}},{"value":"/         .launch(initial_state)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2731,"byte_end":2765,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/         .expect(\"Failed to launch application\");","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2766,"byte_end":2818,"line_start":71,"line_end":71,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2819,"byte_end":2824,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2825,"byte_end":2828,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ fn build_root_widget() -> impl Widget<HelloState> {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2829,"byte_end":2884,"line_start":74,"line_end":74,"column_start":1,"column_end":56}},{"value":"/     // a label that will determine its text based on the current app data.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2885,"byte_end":2963,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/     let label = Label::new(|data: &HelloState, _env: &Env| format!(\"Hello {}!\", data.name));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":2964,"byte_end":3060,"line_start":76,"line_end":76,"column_start":1,"column_end":97}},{"value":"/     // a textbox that modifies `name`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3061,"byte_end":3103,"line_start":77,"line_end":77,"column_start":1,"column_end":43}},{"value":"/     let textbox = TextBox::new()","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3104,"byte_end":3140,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/         .with_placeholder(\"Who are we greeting?\")","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3141,"byte_end":3194,"line_start":79,"line_end":79,"column_start":1,"column_end":54}},{"value":"/         .fix_width(TEXT_BOX_WIDTH)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3195,"byte_end":3233,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/         .lens(HelloState::name);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3234,"byte_end":3270,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3271,"byte_end":3274,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // arrange the two widgets vertically, with some padding","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3275,"byte_end":3339,"line_start":83,"line_end":83,"column_start":1,"column_end":65}},{"value":"/     let layout = Flex::column()","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3340,"byte_end":3375,"line_start":84,"line_end":84,"column_start":1,"column_end":36}},{"value":"/         .with_child(label)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3376,"byte_end":3406,"line_start":85,"line_end":85,"column_start":1,"column_end":31}},{"value":"/         .with_spacer(VERTICAL_WIDGET_SPACING)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3407,"byte_end":3456,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/         .with_child(textbox);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3457,"byte_end":3490,"line_start":87,"line_end":87,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3491,"byte_end":3494,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/     // center the two widgets in the available space","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3495,"byte_end":3551,"line_start":89,"line_end":89,"column_start":1,"column_end":57}},{"value":"/     Align::centered(layout)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3552,"byte_end":3583,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3584,"byte_end":3589,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3590,"byte_end":3597,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3598,"byte_end":3601,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ [`Widget`]: trait.Widget.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3602,"byte_end":3635,"line_start":94,"line_end":94,"column_start":1,"column_end":34}},{"value":"/ [`Data`]: trait.Data.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3636,"byte_end":3665,"line_start":95,"line_end":95,"column_start":1,"column_end":30}},{"value":"/ [`Lens`]: trait.Lens.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3666,"byte_end":3695,"line_start":96,"line_end":96,"column_start":1,"column_end":30}},{"value":"/ [`widget`]: ./widget/index.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3696,"byte_end":3731,"line_start":97,"line_end":97,"column_start":1,"column_end":36}},{"value":"/ [`Event`]: enum.Event.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3732,"byte_end":3762,"line_start":98,"line_end":98,"column_start":1,"column_end":31}},{"value":"/ [`druid-shell`]: https://docs.rs/druid-shell","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3763,"byte_end":3811,"line_start":99,"line_end":99,"column_start":1,"column_end":49}},{"value":"/ [`piet`]: https://docs.rs/piet","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3812,"byte_end":3846,"line_start":100,"line_end":100,"column_start":1,"column_end":35}},{"value":"/ [`druid/examples`]: https://github.com/xi-editor/druid/tree/v0.6.0/druid/examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3847,"byte_end":3932,"line_start":101,"line_end":101,"column_start":1,"column_end":86}},{"value":"/ [druid book]: https://xi-editor.io/druid/intro.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3933,"byte_end":3988,"line_start":102,"line_end":102,"column_start":1,"column_end":56}},{"value":"deny(intra_doc_link_resolution_failure, unsafe_code)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":3990,"byte_end":4046,"line_start":104,"line_end":104,"column_start":1,"column_end":57}},{"value":"allow(clippy :: new_ret_no_self, clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":4047,"byte_end":4112,"line_start":105,"line_end":105,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":7486,"byte_end":7497,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"AppLauncher","qualname":"::app::AppLauncher","value":"AppLauncher {  }","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41}],"decl_id":null,"docs":" Handles initial setup of an application, and starts the runloop.\n","sig":null,"attributes":[{"value":"/ Handles initial setup of an application, and starts the runloop.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":7406,"byte_end":7474,"line_start":30,"line_end":30,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":7847,"byte_end":7857,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"WindowDesc","qualname":"::app::WindowDesc","value":"WindowDesc { id }","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51}],"decl_id":null,"docs":" A description of a window to be instantiated.","sig":null,"attributes":[{"value":"/ A description of a window to be instantiated.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":7663,"byte_end":7712,"line_start":38,"line_end":38,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":7713,"byte_end":7716,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This includes a function that can build the root widget, as well as other","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":7717,"byte_end":7794,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ window properties such as the title.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":7795,"byte_end":7835,"line_start":41,"line_end":41,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":8308,"byte_end":8310,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"name":"id","qualname":"::app::WindowDesc::id","value":"window::WindowId","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" The `WindowId` that will be assigned to this window.","sig":null,"attributes":[{"value":"/ The `WindowId` that will be assigned to this window.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":8128,"byte_end":8184,"line_start":50,"line_end":50,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":8189,"byte_end":8192,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This can be used to track a window from when it is launched and when","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":8197,"byte_end":8269,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/ it actually connects.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":8274,"byte_end":8299,"line_start":53,"line_end":53,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":8428,"byte_end":8439,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"with_window","qualname":"<AppLauncher<T>>::with_window","value":"pub fn with_window(WindowDesc<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `AppLauncher` with the provided window.\n","sig":null,"attributes":[{"value":"/ Create a new `AppLauncher` with the provided window.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":8360,"byte_end":8416,"line_start":58,"line_end":58,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":8880,"byte_end":8893,"line_start":72,"line_end":72,"column_start":12,"column_end":25},"name":"configure_env","qualname":"<AppLauncher<T>>::configure_env","value":"pub fn configure_env<impl Fn(&mut Env, &T) + 'static: Fn(&mut Env, &T) -> () +\n                     'static>(Self, impl Fn(&mut Env, &T) + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provide an optional closure that will be given mutable access to\n the environment and immutable access to the app state before launch.","sig":null,"attributes":[{"value":"/ Provide an optional closure that will be given mutable access to","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":8657,"byte_end":8725,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ the environment and immutable access to the app state before launch.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":8730,"byte_end":8802,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":8807,"byte_end":8810,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This can be used to set or override theme values.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":8815,"byte_end":8868,"line_start":71,"line_end":71,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":9114,"byte_end":9122,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"delegate","qualname":"<AppLauncher<T>>::delegate","value":"pub fn delegate<impl AppDelegate<T> + 'static: AppDelegate<T> +\n                'static>(Self, impl AppDelegate<T> + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the [`AppDelegate`].","sig":null,"attributes":[{"value":"/ Set the [`AppDelegate`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":9018,"byte_end":9046,"line_start":77,"line_end":77,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":9051,"byte_end":9054,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ [`AppDelegate`]: trait.AppDelegate.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":9059,"byte_end":9102,"line_start":79,"line_end":79,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":9472,"byte_end":9489,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"use_simple_logger","qualname":"<AppLauncher<T>>::use_simple_logger","value":"pub fn use_simple_logger(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialize a minimal logger for printing logs out to stderr.","sig":null,"attributes":[{"value":"/ Initialize a minimal logger for printing logs out to stderr.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":9258,"byte_end":9322,"line_start":85,"line_end":85,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":9327,"byte_end":9330,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Meant for use during development only.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":9335,"byte_end":9377,"line_start":87,"line_end":87,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":9382,"byte_end":9385,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":9390,"byte_end":9402,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":9407,"byte_end":9410,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Panics if the logger fails to initialize.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":9415,"byte_end":9460,"line_start":91,"line_end":91,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":9982,"byte_end":10001,"line_start":104,"line_end":104,"column_start":12,"column_end":31},"name":"get_external_handle","qualname":"<AppLauncher<T>>::get_external_handle","value":"pub fn get_external_handle(&Self) -> ExtEventSink","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`ExtEventSink`] that can be moved between threads,\n and can be used to submit events back to the application.","sig":null,"attributes":[{"value":"/ Returns an [`ExtEventSink`] that can be moved between threads,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":9779,"byte_end":9845,"line_start":100,"line_end":100,"column_start":5,"column_end":71}},{"value":"/ and can be used to submit events back to the application.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":9850,"byte_end":9911,"line_start":101,"line_end":101,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":9916,"byte_end":9919,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`ExtEventSink`]: struct.ExtEventSink.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":9924,"byte_end":9970,"line_start":103,"line_end":103,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":10304,"byte_end":10322,"line_start":112,"line_end":112,"column_start":12,"column_end":30},"name":"debug_paint_layout","qualname":"<AppLauncher<T>>::debug_paint_layout","value":"pub fn debug_paint_layout(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Paint colorful rectangles for layout debugging.","sig":null,"attributes":[{"value":"/ Paint colorful rectangles for layout debugging.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":10078,"byte_end":10129,"line_start":108,"line_end":108,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":10134,"byte_end":10137,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ The rectangles are drawn around each widget's layout rect.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":10142,"byte_end":10204,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"deprecated(since = \"0.5.0\", note =\n             \"Use WidgetExt::debug_paint_layout instead.\")","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":10209,"byte_end":10292,"line_start":111,"line_end":111,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":10527,"byte_end":10533,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"launch","qualname":"<AppLauncher<T>>::launch","value":"pub fn launch(Self, T) -> Result<(), PlatformError>","parent":null,"children":[],"decl_id":null,"docs":" Build the windows and start the runloop.","sig":null,"attributes":[{"value":"/ Build the windows and start the runloop.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":10363,"byte_end":10407,"line_start":116,"line_end":116,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":10412,"byte_end":10415,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Returns an error if a window cannot be instantiated. This is usually","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":10420,"byte_end":10492,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/ a fatal error.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":10497,"byte_end":10515,"line_start":119,"line_end":119,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":11470,"byte_end":11473,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"new","qualname":"<WindowDesc<T>>::new","value":"pub fn new<W, F>(F) -> WindowDesc<T> where W: Widget<T> + 'static, F: FnOnce()\n-> W + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `WindowDesc`, taking a function that will generate the root\n [`Widget`] for this window.","sig":null,"attributes":[{"value":"/ Create a new `WindowDesc`, taking a function that will generate the root","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":11207,"byte_end":11283,"line_start":148,"line_end":148,"column_start":5,"column_end":81}},{"value":"/ [`Widget`] for this window.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":11288,"byte_end":11319,"line_start":149,"line_end":149,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":11324,"byte_end":11327,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ It is possible that a `WindowDesc` can be reused to launch multiple windows.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":11332,"byte_end":11412,"line_start":151,"line_end":151,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":11417,"byte_end":11420,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`Widget`]: trait.Widget.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":11425,"byte_end":11458,"line_start":153,"line_end":153,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":12452,"byte_end":12457,"line_start":179,"line_end":179,"column_start":12,"column_end":17},"name":"title","qualname":"<WindowDesc<T>>::title","value":"pub fn title<impl Into<LabelText<T>>: Into<LabelText<T>>>(Self,\n                                                          impl Into<LabelText<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the title for this window. This is a [`LabelText`]; it can be either\n a `String`, a [`LocalizedString`], or a closure that computes a string;\n it will be kept up to date as the application's state changes.","sig":null,"attributes":[{"value":"/ Set the title for this window. This is a [`LabelText`]; it can be either","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":12092,"byte_end":12168,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ a `String`, a [`LocalizedString`], or a closure that computes a string;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":12173,"byte_end":12248,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ it will be kept up to date as the application's state changes.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":12253,"byte_end":12319,"line_start":175,"line_end":175,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":12324,"byte_end":12327,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ [`LabelText`]: widget/enum.LocalizedString.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":12332,"byte_end":12383,"line_start":177,"line_end":177,"column_start":5,"column_end":56}},{"value":"/ [`LocalizedString`]: struct.LocalizedString.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":12388,"byte_end":12440,"line_start":178,"line_end":178,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":12614,"byte_end":12618,"line_start":185,"line_end":185,"column_start":12,"column_end":16},"name":"menu","qualname":"<WindowDesc<T>>::menu","value":"pub fn menu(Self, MenuDesc<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the menu for this window.\n","sig":null,"attributes":[{"value":"/ Set the menu for this window.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":12569,"byte_end":12602,"line_start":184,"line_end":184,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13374,"byte_end":13385,"line_start":206,"line_end":206,"column_start":12,"column_end":23},"name":"window_size","qualname":"<WindowDesc<T>>::window_size","value":"pub fn window_size<impl Into<Size>: Into<Size>>(Self, impl Into<Size>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the window's initial drawing area size in [display points].","sig":null,"attributes":[{"value":"/ Set the window's initial drawing area size in [display points].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":12714,"byte_end":12781,"line_start":190,"line_end":190,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":12786,"byte_end":12789,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ You can pass in a tuple `(width, height)` or a [`Size`],","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":12794,"byte_end":12854,"line_start":192,"line_end":192,"column_start":5,"column_end":65}},{"value":"/ e.g. to create a window with a drawing area 1000dp wide and 500dp high:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":12859,"byte_end":12934,"line_start":193,"line_end":193,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":12939,"byte_end":12942,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":12947,"byte_end":12960,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ window.window_size((1000.0, 500.0));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":12965,"byte_end":13005,"line_start":196,"line_end":196,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13010,"byte_end":13017,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13022,"byte_end":13025,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The actual window size in pixels will depend on the platform DPI settings.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13030,"byte_end":13108,"line_start":199,"line_end":199,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13113,"byte_end":13116,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This should be considered a request to the platform to set the size of the window.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13121,"byte_end":13207,"line_start":201,"line_end":201,"column_start":5,"column_end":91}},{"value":"/ The platform might increase the size a tiny bit due to DPI.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13212,"byte_end":13275,"line_start":202,"line_end":202,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13280,"byte_end":13283,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ [`Size`]: struct.Size.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13288,"byte_end":13318,"line_start":204,"line_end":204,"column_start":5,"column_end":35}},{"value":"/ [display points]: struct.Scale.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13323,"byte_end":13362,"line_start":205,"line_end":205,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":14025,"byte_end":14038,"line_start":222,"line_end":222,"column_start":12,"column_end":25},"name":"with_min_size","qualname":"<WindowDesc<T>>::with_min_size","value":"pub fn with_min_size<impl Into<Size>: Into<Size>>(Self, impl Into<Size>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the window's minimum drawing area size in [display points].","sig":null,"attributes":[{"value":"/ Set the window's minimum drawing area size in [display points].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13492,"byte_end":13559,"line_start":211,"line_end":211,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13564,"byte_end":13567,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The actual minimum window size in pixels will depend on the platform DPI settings.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13572,"byte_end":13658,"line_start":213,"line_end":213,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13663,"byte_end":13666,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This should be considered a request to the platform to set the minimum size of the window.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13671,"byte_end":13765,"line_start":215,"line_end":215,"column_start":5,"column_end":99}},{"value":"/ The platform might increase the size a tiny bit due to DPI.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13770,"byte_end":13833,"line_start":216,"line_end":216,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13838,"byte_end":13841,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ To set the window's initial drawing area size use [`window_size`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13846,"byte_end":13916,"line_start":218,"line_end":218,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13921,"byte_end":13924,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ [`window_size`]: #method.window_size","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13929,"byte_end":13969,"line_start":220,"line_end":220,"column_start":5,"column_end":45}},{"value":"/ [display points]: struct.Scale.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":13974,"byte_end":14013,"line_start":221,"line_end":221,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":14156,"byte_end":14165,"line_start":227,"line_end":227,"column_start":12,"column_end":21},"name":"resizable","qualname":"<WindowDesc<T>>::resizable","value":"pub fn resizable(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":14270,"byte_end":14283,"line_start":232,"line_end":232,"column_start":12,"column_end":25},"name":"show_titlebar","qualname":"<WindowDesc<T>>::show_titlebar","value":"pub fn show_titlebar(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":16555,"byte_end":16566,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"DelegateCtx","qualname":"::app_delegate::DelegateCtx","value":"DelegateCtx {  }","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"decl_id":null,"docs":" A context passed in to [`AppDelegate`] functions.","sig":null,"attributes":[{"value":"/ A context passed in to [`AppDelegate`] functions.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":16442,"byte_end":16495,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":16496,"byte_end":16499,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`AppDelegate`]: trait.AppDelegate.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":16500,"byte_end":16543,"line_start":28,"line_end":28,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":17084,"byte_end":17098,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"submit_command","qualname":"<DelegateCtx>::submit_command","value":"pub fn submit_command<impl Into<Command>: Into<Command>,\n                      impl Into<Option<Target>>: Into<Option<Target>>>(&mut Self,\n                                                                       impl Into<Command>,\n                                                                       impl Into<Option<Target>>)","parent":null,"children":[],"decl_id":null,"docs":" Submit a [`Command`] to be run after this event is handled.","sig":null,"attributes":[{"value":"/ Submit a [`Command`] to be run after this event is handled.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":16712,"byte_end":16775,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":16780,"byte_end":16783,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Commands are run in the order they are submitted; all commands","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":16788,"byte_end":16854,"line_start":37,"line_end":37,"column_start":5,"column_end":71}},{"value":"/ submitted during the handling of an event are executed before","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":16859,"byte_end":16924,"line_start":38,"line_end":38,"column_start":5,"column_end":70}},{"value":"/ the [`update()`] method is called.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":16929,"byte_end":16967,"line_start":39,"line_end":39,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":16972,"byte_end":16975,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ [`Command`]: struct.Command.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":16980,"byte_end":17016,"line_start":41,"line_end":41,"column_start":5,"column_end":41}},{"value":"/ [`update()`]: trait.Widget.html#tymethod.update","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":17021,"byte_end":17072,"line_start":42,"line_end":42,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":17592,"byte_end":17602,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"new_window","qualname":"<DelegateCtx>::new_window","value":"pub fn new_window<T: Any>(&mut Self, WindowDesc<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new window.\n `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","sig":null,"attributes":[{"value":"/ Create a new window.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":17374,"byte_end":17398,"line_start":53,"line_end":53,"column_start":5,"column_end":29}},{"value":"/ `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":17403,"byte_end":17501,"line_start":54,"line_end":54,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":17506,"byte_end":17509,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ [`AppLauncher::launch`]: struct.AppLauncher.html#method.launch","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":17514,"byte_end":17580,"line_start":56,"line_end":56,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":18377,"byte_end":18385,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"set_menu","qualname":"<DelegateCtx>::set_menu","value":"pub fn set_menu<T: Any>(&mut Self, MenuDesc<T>, WindowId)","parent":null,"children":[],"decl_id":null,"docs":" Set the window's menu.\n `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","sig":null,"attributes":[{"value":"/ Set the window's menu.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":18157,"byte_end":18183,"line_start":73,"line_end":73,"column_start":5,"column_end":31}},{"value":"/ `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":18188,"byte_end":18286,"line_start":74,"line_end":74,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":18291,"byte_end":18294,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`AppLauncher::launch`]: struct.AppLauncher.html#method.launch","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":18299,"byte_end":18365,"line_start":76,"line_end":76,"column_start":5,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":19333,"byte_end":19344,"line_start":103,"line_end":103,"column_start":11,"column_end":22},"name":"AppDelegate","qualname":"::app_delegate::AppDelegate","value":"AppDelegate<T: Data>","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117}],"decl_id":null,"docs":" A type that provides hooks for handling and modifying top-level events.","sig":null,"attributes":[{"value":"/ A type that provides hooks for handling and modifying top-level events.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":18940,"byte_end":19015,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":19016,"byte_end":19019,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ The `AppDelegate` is a trait that is allowed to handle and modify","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":19020,"byte_end":19089,"line_start":96,"line_end":96,"column_start":1,"column_end":70}},{"value":"/ events before they are passed down the widget tree.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":19090,"byte_end":19145,"line_start":97,"line_end":97,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":19146,"byte_end":19149,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ It is a natural place for things like window and menu management.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":19150,"byte_end":19219,"line_start":99,"line_end":99,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":19220,"byte_end":19223,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ You customize the `AppDelegate` by implementing its methods on your own type.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":19224,"byte_end":19305,"line_start":101,"line_end":101,"column_start":1,"column_end":82}},{"value":"allow(unused)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":19306,"byte_end":19322,"line_start":102,"line_end":102,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":19796,"byte_end":19801,"line_start":112,"line_end":112,"column_start":8,"column_end":13},"name":"event","qualname":"::app_delegate::AppDelegate::event","value":"pub fn event(&mut Self, &mut DelegateCtx, WindowId, Event, &mut T, &Env)\n-> Option<Event>","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" The `AppDelegate`'s event handler. This function receives all\n non-command events, before they are passed down the tree.","sig":null,"attributes":[{"value":"/ The `AppDelegate`'s event handler. This function receives all","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":19360,"byte_end":19425,"line_start":104,"line_end":104,"column_start":5,"column_end":70}},{"value":"/ non-command events, before they are passed down the tree.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":19430,"byte_end":19491,"line_start":105,"line_end":105,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":19496,"byte_end":19499,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The return value of this function will be passed down the tree. This can","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":19504,"byte_end":19580,"line_start":107,"line_end":107,"column_start":5,"column_end":81}},{"value":"/ be the event that was passed in, a different event, or no event. In all cases,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":19585,"byte_end":19667,"line_start":108,"line_end":108,"column_start":5,"column_end":87}},{"value":"/ the [`update()`] method will be called as usual.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":19672,"byte_end":19724,"line_start":109,"line_end":109,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":19729,"byte_end":19732,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ [`update()`]: trait.Widget.html#tymethod.update","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":19737,"byte_end":19788,"line_start":111,"line_end":111,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":20611,"byte_end":20618,"line_start":137,"line_end":137,"column_start":8,"column_end":15},"name":"command","qualname":"::app_delegate::AppDelegate::command","value":"pub fn command(&mut Self, &mut DelegateCtx, Target, &Command, &mut T, &Env)\n-> bool","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" The `AppDelegate`s [`Command`] handler.","sig":null,"attributes":[{"value":"/ The `AppDelegate`s [`Command`] handler.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":20001,"byte_end":20044,"line_start":123,"line_end":123,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":20049,"byte_end":20052,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This function is called with each ([`Target`], [`Command`]) pair before","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":20057,"byte_end":20132,"line_start":125,"line_end":125,"column_start":5,"column_end":80}},{"value":"/ they are sent down the tree.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":20137,"byte_end":20169,"line_start":126,"line_end":126,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":20174,"byte_end":20177,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ If your implementation returns `true`, the command will be sent down","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":20182,"byte_end":20254,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ the widget tree. Otherwise it will not.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":20259,"byte_end":20302,"line_start":129,"line_end":129,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":20307,"byte_end":20310,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ To do anything fancier than this, you can submit arbitary commands","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":20315,"byte_end":20385,"line_start":131,"line_end":131,"column_start":5,"column_end":75}},{"value":"/ via [`DelegateCtx::submit_command`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":20390,"byte_end":20430,"line_start":132,"line_end":132,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":20435,"byte_end":20438,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ [`Target`]: enum.Target.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":20443,"byte_end":20475,"line_start":134,"line_end":134,"column_start":5,"column_end":37}},{"value":"/ [`Command`]: struct.Command.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":20480,"byte_end":20516,"line_start":135,"line_end":135,"column_start":5,"column_end":41}},{"value":"/ [`DelegateCtx::submit_command`]: struct.DelegateCtx.html#method.submit_command","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":20521,"byte_end":20603,"line_start":136,"line_end":136,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":20988,"byte_end":21000,"line_start":151,"line_end":151,"column_start":8,"column_end":20},"name":"window_added","qualname":"::app_delegate::AppDelegate::window_added","value":"pub fn window_added(&mut Self, WindowId, &mut T, &Env, &mut DelegateCtx)","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" The handler for window creation events.\n This function is called after a window has been added,\n allowing you to customize the window creation behavior of your app.\n","sig":null,"attributes":[{"value":"/ The handler for window creation events.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":20798,"byte_end":20841,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/ This function is called after a window has been added,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":20846,"byte_end":20904,"line_start":149,"line_end":149,"column_start":5,"column_end":63}},{"value":"/ allowing you to customize the window creation behavior of your app.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":20909,"byte_end":20980,"line_start":150,"line_end":150,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":21198,"byte_end":21212,"line_start":155,"line_end":155,"column_start":8,"column_end":22},"name":"window_removed","qualname":"::app_delegate::AppDelegate::window_removed","value":"pub fn window_removed(&mut Self, WindowId, &mut T, &Env, &mut DelegateCtx)","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" The handler for window deletion events.\n This function is called after a window has been removed.\n","sig":null,"attributes":[{"value":"/ The handler for window deletion events.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":21082,"byte_end":21125,"line_start":153,"line_end":153,"column_start":5,"column_end":48}},{"value":"/ This function is called after a window has been removed.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":21130,"byte_end":21190,"line_start":154,"line_end":154,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3263},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27853,"byte_end":27867,"line_start":38,"line_end":38,"column_start":12,"column_end":26},"name":"BoxConstraints","qualname":"::box_constraints::BoxConstraints","value":"BoxConstraints {  }","parent":null,"children":[{"krate":0,"index":3264},{"krate":0,"index":3265}],"decl_id":null,"docs":" Constraints for layout.","sig":null,"attributes":[{"value":"/ Constraints for layout.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27003,"byte_end":27030,"line_start":19,"line_end":19,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27031,"byte_end":27034,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The layout strategy for druid is strongly inspired by Flutter,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27035,"byte_end":27101,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/ and this struct is similar to the [Flutter BoxConstraints] class.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27102,"byte_end":27171,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27172,"byte_end":27175,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ At the moment, it represents simply a minimum and maximum size.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27176,"byte_end":27243,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ A widget's [`layout`] method should choose an appropriate size that","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27244,"byte_end":27315,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ meets these constraints.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27316,"byte_end":27344,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27345,"byte_end":27348,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Further, a container widget should compute appropriate constraints","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27349,"byte_end":27419,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ for each of its child widgets, and pass those down when recursing.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27420,"byte_end":27490,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27491,"byte_end":27494,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The constraints are always [rounded away from zero] to integers","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27495,"byte_end":27562,"line_start":31,"line_end":31,"column_start":1,"column_end":68}},{"value":"/ to enable pixel perfect layout.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27563,"byte_end":27598,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27599,"byte_end":27602,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`layout`]: trait.Widget.html#tymethod.layout","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27603,"byte_end":27652,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ [Flutter BoxConstraints]: https://api.flutter.dev/flutter/rendering/BoxConstraints-class.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27653,"byte_end":27750,"line_start":35,"line_end":35,"column_start":1,"column_end":98}},{"value":"/ [rounded away from zero]: struct.Size.html#method.expand","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27751,"byte_end":27811,"line_start":36,"line_end":36,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":28242,"byte_end":28245,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxConstraints>::new","value":"pub fn new(Size, Size) -> BoxConstraints","parent":null,"children":[],"decl_id":null,"docs":" Create a new box constraints object.","sig":null,"attributes":[{"value":"/ Create a new box constraints object.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27929,"byte_end":27969,"line_start":44,"line_end":44,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27974,"byte_end":27977,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Create constraints based on minimum and maximum size.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27982,"byte_end":28039,"line_start":46,"line_end":46,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":28044,"byte_end":28047,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The given sizes are also [rounded away from zero],","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":28052,"byte_end":28106,"line_start":48,"line_end":48,"column_start":5,"column_end":59}},{"value":"/ so that the layout is aligned to integers.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":28111,"byte_end":28157,"line_start":49,"line_end":49,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":28162,"byte_end":28165,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ [rounded away from zero]: struct.Size.html#method.expand","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":28170,"byte_end":28230,"line_start":51,"line_end":51,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":28718,"byte_end":28723,"line_start":67,"line_end":67,"column_start":12,"column_end":17},"name":"tight","qualname":"<BoxConstraints>::tight","value":"pub fn tight(Size) -> BoxConstraints","parent":null,"children":[],"decl_id":null,"docs":" Create a \"tight\" box constraints object.","sig":null,"attributes":[{"value":"/ Create a \"tight\" box constraints object.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":28396,"byte_end":28440,"line_start":59,"line_end":59,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":28445,"byte_end":28448,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ A \"tight\" constraint can only be satisfied by a single size.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":28453,"byte_end":28517,"line_start":61,"line_end":61,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":28522,"byte_end":28525,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ The given size is also [rounded away from zero],","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":28530,"byte_end":28582,"line_start":63,"line_end":63,"column_start":5,"column_end":57}},{"value":"/ so that the layout is aligned to integers.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":28587,"byte_end":28633,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":28638,"byte_end":28641,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ [rounded away from zero]: struct.Size.html#method.expand","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":28646,"byte_end":28706,"line_start":66,"line_end":66,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":29024,"byte_end":29030,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"loosen","qualname":"<BoxConstraints>::loosen","value":"pub fn loosen(&Self) -> BoxConstraints","parent":null,"children":[],"decl_id":null,"docs":" Create a \"loose\" version of the constraints.","sig":null,"attributes":[{"value":"/ Create a \"loose\" version of the constraints.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":28882,"byte_end":28930,"line_start":75,"line_end":75,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":28935,"byte_end":28938,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Make a version with zero minimum size, but the same maximum size.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":28943,"byte_end":29012,"line_start":77,"line_end":77,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":29423,"byte_end":29432,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"constrain","qualname":"<BoxConstraints>::constrain","value":"pub fn constrain<impl Into<Size>: Into<Size>>(&Self, impl Into<Size>) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Clamp a given size so that it fits within the constraints.","sig":null,"attributes":[{"value":"/ Clamp a given size so that it fits within the constraints.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":29160,"byte_end":29222,"line_start":85,"line_end":85,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":29227,"byte_end":29230,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The given size is also [rounded away from zero],","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":29235,"byte_end":29287,"line_start":87,"line_end":87,"column_start":5,"column_end":57}},{"value":"/ so that the layout is aligned to integers.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":29292,"byte_end":29338,"line_start":88,"line_end":88,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":29343,"byte_end":29346,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ [rounded away from zero]: struct.Size.html#method.expand","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":29351,"byte_end":29411,"line_start":90,"line_end":90,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":29597,"byte_end":29600,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"max","qualname":"<BoxConstraints>::max","value":"pub fn max(&Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns the max size of these constraints.\n","sig":null,"attributes":[{"value":"/ Returns the max size of these constraints.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":29539,"byte_end":29585,"line_start":95,"line_end":95,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":29704,"byte_end":29707,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"min","qualname":"<BoxConstraints>::min","value":"pub fn min(&Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns the min size of these constraints.\n","sig":null,"attributes":[{"value":"/ Returns the min size of these constraints.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":29646,"byte_end":29692,"line_start":100,"line_end":100,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":29814,"byte_end":29830,"line_start":106,"line_end":106,"column_start":12,"column_end":28},"name":"is_width_bounded","qualname":"<BoxConstraints>::is_width_bounded","value":"pub fn is_width_bounded(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether there is an upper bound on the width.\n","sig":null,"attributes":[{"value":"/ Whether there is an upper bound on the width.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":29753,"byte_end":29802,"line_start":105,"line_end":105,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":29956,"byte_end":29973,"line_start":111,"line_end":111,"column_start":12,"column_end":29},"name":"is_height_bounded","qualname":"<BoxConstraints>::is_height_bounded","value":"pub fn is_height_bounded(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether there is an upper bound on the height.\n","sig":null,"attributes":[{"value":"/ Whether there is an upper bound on the height.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":29894,"byte_end":29944,"line_start":110,"line_end":110,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":30160,"byte_end":30171,"line_start":118,"line_end":118,"column_start":12,"column_end":23},"name":"debug_check","qualname":"<BoxConstraints>::debug_check","value":"pub fn debug_check(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Check to see if these constraints are legit.","sig":null,"attributes":[{"value":"/ Check to see if these constraints are legit.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":30038,"byte_end":30086,"line_start":115,"line_end":115,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":30091,"byte_end":30094,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Logs a warning if BoxConstraints are invalid.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":30099,"byte_end":30148,"line_start":117,"line_end":117,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":31103,"byte_end":31109,"line_start":145,"line_end":145,"column_start":12,"column_end":18},"name":"shrink","qualname":"<BoxConstraints>::shrink","value":"pub fn shrink<impl Into<Size>: Into<Size>>(&Self, impl Into<Size>)\n-> BoxConstraints","parent":null,"children":[],"decl_id":null,"docs":" Shrink min and max constraints by size","sig":null,"attributes":[{"value":"/ Shrink min and max constraints by size","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":30860,"byte_end":30902,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":30907,"byte_end":30910,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The given size is also [rounded away from zero],","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":30915,"byte_end":30967,"line_start":141,"line_end":141,"column_start":5,"column_end":57}},{"value":"/ so that the layout is aligned to integers.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":30972,"byte_end":31018,"line_start":142,"line_end":142,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":31023,"byte_end":31026,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ [rounded away from zero]: struct.Size.html#method.expand","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":31031,"byte_end":31091,"line_start":144,"line_end":144,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3271},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33185,"byte_end":33193,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"Selector","qualname":"::command::Selector","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for a particular command.","sig":null,"attributes":[{"value":"/ An identifier for a particular command.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":32419,"byte_end":32462,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":32463,"byte_end":32466,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This should be a unique string identifier.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":32467,"byte_end":32513,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ Having multiple selectors with the same identifier but different payload","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":32514,"byte_end":32590,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ types is not allowed and can cause [`Command::get`] and [`get_unchecked`] to panic.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":32591,"byte_end":32678,"line_start":34,"line_end":34,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":32679,"byte_end":32682,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` specifies the command's payload type.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":32683,"byte_end":32747,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/ See [`Command`] for more information.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":32748,"byte_end":32789,"line_start":37,"line_end":37,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":32790,"byte_end":32793,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Certain `Selector`s are defined by druid, and have special meaning","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":32794,"byte_end":32864,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/ to the framework; these are listed in the [`druid::commands`] module.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":32865,"byte_end":32938,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":32939,"byte_end":32942,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`Command`]: struct.Command.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":32943,"byte_end":32979,"line_start":42,"line_end":42,"column_start":1,"column_end":37}},{"value":"/ [`Command::get`]: struct.Command.html#method.get","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":32980,"byte_end":33032,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ [`get_unchecked`]: struct.Command.html#method.get_unchecked","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33033,"byte_end":33096,"line_start":44,"line_end":44,"column_start":1,"column_end":64}},{"value":"/ [`druid::commands`]: commands/index.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33097,"byte_end":33141,"line_start":45,"line_end":45,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3290},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34358,"byte_end":34365,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"Command","qualname":"::command::Command","value":"Command {  }","parent":null,"children":[{"krate":0,"index":3291},{"krate":0,"index":3292}],"decl_id":null,"docs":" An arbitrary command.","sig":null,"attributes":[{"value":"/ An arbitrary command.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33243,"byte_end":33268,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33269,"byte_end":33272,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ A `Command` consists of a [`Selector`], that indicates what the command is","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33273,"byte_end":33351,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"/ and what type of payload it carries, as well as the actual payload.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33352,"byte_end":33423,"line_start":52,"line_end":52,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33424,"byte_end":33427,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ If the payload can't or shouldn't be cloned,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33428,"byte_end":33476,"line_start":54,"line_end":54,"column_start":1,"column_end":49}},{"value":"/ wrapping it with [`SingleUse`] allows you to `take` the payload.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33477,"byte_end":33545,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ The [`SingleUse`] docs give an example on how to do this.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33546,"byte_end":33607,"line_start":56,"line_end":56,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33608,"byte_end":33611,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Generic payloads can be achieved with `Selector<Box<dyn Any>>`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33612,"byte_end":33679,"line_start":58,"line_end":58,"column_start":1,"column_end":68}},{"value":"/ In this case it could make sense to use utility functions to construct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33680,"byte_end":33754,"line_start":59,"line_end":59,"column_start":1,"column_end":75}},{"value":"/ such commands in order to maintain as much static typing as possible.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33755,"byte_end":33828,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/ The [`EventCtx::new_window`] method is an example of this.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33829,"byte_end":33891,"line_start":61,"line_end":61,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33892,"byte_end":33895,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33896,"byte_end":33910,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33911,"byte_end":33918,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ use druid::{Command, Selector};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33919,"byte_end":33954,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33955,"byte_end":33958,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let selector = Selector::new(\"process_rows\");","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":33959,"byte_end":34008,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/ let rows = vec![1, 3, 10, 12];","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34009,"byte_end":34043,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/ let command = Command::new(selector, rows);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34044,"byte_end":34091,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34092,"byte_end":34095,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(command.get(selector), Some(&vec![1, 3, 10, 12]));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34096,"byte_end":34161,"line_start":71,"line_end":71,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34162,"byte_end":34169,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34170,"byte_end":34173,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [`EventCtx::new_window`]: struct.EventCtx.html#method.new_window","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34174,"byte_end":34242,"line_start":74,"line_end":74,"column_start":1,"column_end":69}},{"value":"/ [`SingleUse`]: struct.SingleUse.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34243,"byte_end":34283,"line_start":75,"line_end":75,"column_start":1,"column_end":41}},{"value":"/ [`Selector`]: struct.Selector.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34284,"byte_end":34322,"line_start":76,"line_end":76,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35199,"byte_end":35208,"line_start":109,"line_end":109,"column_start":12,"column_end":21},"name":"SingleUse","qualname":"::command::SingleUse","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper type for [`Command`] payloads that should only be used once.","sig":null,"attributes":[{"value":"/ A wrapper type for [`Command`] payloads that should only be used once.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34426,"byte_end":34500,"line_start":83,"line_end":83,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34501,"byte_end":34504,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ This is useful if you have some resource that cannot be","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34505,"byte_end":34564,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/ cloned, and you wish to send it to another widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34565,"byte_end":34619,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34620,"byte_end":34623,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34624,"byte_end":34638,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34639,"byte_end":34646,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ use druid::{Command, Selector, SingleUse};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34647,"byte_end":34693,"line_start":90,"line_end":90,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34694,"byte_end":34697,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ struct CantClone(u8);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34698,"byte_end":34723,"line_start":92,"line_end":92,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34724,"byte_end":34727,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ let selector = Selector::new(\"use-once\");","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34728,"byte_end":34773,"line_start":94,"line_end":94,"column_start":1,"column_end":46}},{"value":"/ let num = CantClone(42);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34774,"byte_end":34802,"line_start":95,"line_end":95,"column_start":1,"column_end":29}},{"value":"/ let command = Command::new(selector, SingleUse::new(num));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34803,"byte_end":34865,"line_start":96,"line_end":96,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34866,"byte_end":34869,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ let payload: &SingleUse<CantClone> = command.get_unchecked(selector);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34870,"byte_end":34943,"line_start":98,"line_end":98,"column_start":1,"column_end":74}},{"value":"/ if let Some(num) = payload.take() {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34944,"byte_end":34983,"line_start":99,"line_end":99,"column_start":1,"column_end":40}},{"value":"/     // now you own the data","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":34984,"byte_end":35015,"line_start":100,"line_end":100,"column_start":1,"column_end":32}},{"value":"/     assert_eq!(num.0, 42);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35016,"byte_end":35046,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35047,"byte_end":35052,"line_start":102,"line_end":102,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35053,"byte_end":35056,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ // subsequent calls will return `None`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35057,"byte_end":35099,"line_start":104,"line_end":104,"column_start":1,"column_end":43}},{"value":"/ assert!(payload.take().is_none());","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35100,"byte_end":35138,"line_start":105,"line_end":105,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35139,"byte_end":35146,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35147,"byte_end":35150,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`Command`]: struct.Command.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35151,"byte_end":35187,"line_start":108,"line_end":108,"column_start":1,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3298},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35373,"byte_end":35379,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"Global","qualname":"::command::Target::Global","value":"Target::Global","parent":{"krate":0,"index":3297},"children":[],"decl_id":null,"docs":" The target is the top-level application.\n","sig":null,"attributes":[{"value":"/ The target is the top-level application.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35324,"byte_end":35368,"line_start":114,"line_end":114,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3300},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35484,"byte_end":35490,"line_start":118,"line_end":118,"column_start":5,"column_end":11},"name":"Window","qualname":"::command::Target::Window","value":"Target::Window(WindowId)","parent":{"krate":0,"index":3297},"children":[],"decl_id":null,"docs":" The target is a window; the event will be delivered to all\n widgets in that window.\n","sig":null,"attributes":[{"value":"/ The target is a window; the event will be delivered to all","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35385,"byte_end":35447,"line_start":116,"line_end":116,"column_start":5,"column_end":67}},{"value":"/ widgets in that window.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35452,"byte_end":35479,"line_start":117,"line_end":117,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3303},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35547,"byte_end":35553,"line_start":120,"line_end":120,"column_start":5,"column_end":11},"name":"Widget","qualname":"::command::Target::Widget","value":"Target::Widget(WidgetId)","parent":{"krate":0,"index":3297},"children":[],"decl_id":null,"docs":" The target is a specific widget.\n","sig":null,"attributes":[{"value":"/ The target is a specific widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35506,"byte_end":35542,"line_start":119,"line_end":119,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":3297},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35311,"byte_end":35317,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"Target","qualname":"::command::Target","value":"pub enum Target {\n\n    /// The target is the top-level application.\n    Global,\n\n    /// The target is a window; the event will be delivered to all\n    /// widgets in that window.\n    Window(WindowId),\n\n    /// The target is a specific widget.\n    Widget(WidgetId),\n}","parent":null,"children":[{"krate":0,"index":3298},{"krate":0,"index":3300},{"krate":0,"index":3303}],"decl_id":null,"docs":" The target of a command.\n","sig":null,"attributes":[{"value":"/ The target of a command.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35232,"byte_end":35260,"line_start":111,"line_end":111,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35712,"byte_end":35715,"line_start":128,"line_end":128,"column_start":9,"column_end":12},"name":"sys","qualname":"::command::sys","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":4312},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"decl_id":null,"docs":" Commands with special meaning, defined by druid.","sig":null,"attributes":[{"value":"/ Commands with special meaning, defined by druid.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35568,"byte_end":35620,"line_start":123,"line_end":123,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35621,"byte_end":35624,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ See [`Command`] for more info.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35625,"byte_end":35659,"line_start":125,"line_end":125,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35660,"byte_end":35663,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [`Command`]: ../struct.Command.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35664,"byte_end":35703,"line_start":127,"line_end":127,"column_start":1,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35923,"byte_end":35931,"line_start":135,"line_end":135,"column_start":15,"column_end":23},"name":"QUIT_APP","qualname":"::command::sys::QUIT_APP","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Quit the running application. This command is handled by the druid library.\n","sig":null,"attributes":[{"value":"/ Quit the running application. This command is handled by the druid library.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35829,"byte_end":35908,"line_start":134,"line_end":134,"column_start":5,"column_end":84}}]},{"kind":"Const","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":36042,"byte_end":36058,"line_start":138,"line_end":138,"column_start":15,"column_end":31},"name":"HIDE_APPLICATION","qualname":"::command::sys::HIDE_APPLICATION","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Hide the application. (mac only?)\n","sig":null,"attributes":[{"value":"/ Hide the application. (mac only?)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":35990,"byte_end":36027,"line_start":137,"line_end":137,"column_start":5,"column_end":42}}]},{"kind":"Const","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":36189,"byte_end":36200,"line_start":141,"line_end":141,"column_start":15,"column_end":26},"name":"HIDE_OTHERS","qualname":"::command::sys::HIDE_OTHERS","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Hide all other applications. (mac only?)\n","sig":null,"attributes":[{"value":"/ Hide all other applications. (mac only?)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":36130,"byte_end":36174,"line_start":140,"line_end":140,"column_start":5,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":36725,"byte_end":36737,"line_start":152,"line_end":152,"column_start":15,"column_end":27},"name":"CLOSE_WINDOW","qualname":"::command::sys::CLOSE_WINDOW","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" The selector for a command to close a window.","sig":null,"attributes":[{"value":"/ The selector for a command to close a window.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":36447,"byte_end":36496,"line_start":147,"line_end":147,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":36501,"byte_end":36504,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ The command must target a specific window.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":36509,"byte_end":36555,"line_start":149,"line_end":149,"column_start":5,"column_end":51}},{"value":"/ When calling `submit_command` on a `Widget`s context, passing `None` as target","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":36560,"byte_end":36642,"line_start":150,"line_end":150,"column_start":5,"column_end":87}},{"value":"/ will automatically target the window containing the widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":36647,"byte_end":36710,"line_start":151,"line_end":151,"column_start":5,"column_end":68}}]},{"kind":"Const","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":36837,"byte_end":36854,"line_start":155,"line_end":155,"column_start":15,"column_end":32},"name":"CLOSE_ALL_WINDOWS","qualname":"::command::sys::CLOSE_ALL_WINDOWS","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Close all windows.\n","sig":null,"attributes":[{"value":"/ Close all windows.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":36800,"byte_end":36822,"line_start":154,"line_end":154,"column_start":5,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":37232,"byte_end":37243,"line_start":162,"line_end":162,"column_start":15,"column_end":26},"name":"SHOW_WINDOW","qualname":"::command::sys::SHOW_WINDOW","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" The selector for a command to bring a window to the front, and give it focus.","sig":null,"attributes":[{"value":"/ The selector for a command to bring a window to the front, and give it focus.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":36922,"byte_end":37003,"line_start":157,"line_end":157,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":37008,"byte_end":37011,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ The command must target a specific window.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":37016,"byte_end":37062,"line_start":159,"line_end":159,"column_start":5,"column_end":51}},{"value":"/ When calling `submit_command` on a `Widget`s context, passing `None` as target","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":37067,"byte_end":37149,"line_start":160,"line_end":160,"column_start":5,"column_end":87}},{"value":"/ will automatically target the window containing the widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":37154,"byte_end":37217,"line_start":161,"line_end":161,"column_start":5,"column_end":68}}]},{"kind":"Const","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":37925,"byte_end":37941,"line_start":178,"line_end":178,"column_start":15,"column_end":31},"name":"SHOW_PREFERENCES","qualname":"::command::sys::SHOW_PREFERENCES","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Show the application preferences.\n","sig":null,"attributes":[{"value":"/ Show the application preferences.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":37873,"byte_end":37910,"line_start":177,"line_end":177,"column_start":5,"column_end":42}}]},{"kind":"Const","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":38066,"byte_end":38076,"line_start":181,"line_end":181,"column_start":15,"column_end":25},"name":"SHOW_ABOUT","qualname":"::command::sys::SHOW_ABOUT","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Show the application about window.\n","sig":null,"attributes":[{"value":"/ Show the application about window.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":38013,"byte_end":38051,"line_start":180,"line_end":180,"column_start":5,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":38183,"byte_end":38191,"line_start":184,"line_end":184,"column_start":15,"column_end":23},"name":"SHOW_ALL","qualname":"::command::sys::SHOW_ALL","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Show all applications.\n","sig":null,"attributes":[{"value":"/ Show all applications.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":38142,"byte_end":38168,"line_start":183,"line_end":183,"column_start":5,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":38299,"byte_end":38307,"line_start":187,"line_end":187,"column_start":15,"column_end":23},"name":"NEW_FILE","qualname":"::command::sys::NEW_FILE","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Show the new file dialog.\n","sig":null,"attributes":[{"value":"/ Show the new file dialog.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":38255,"byte_end":38284,"line_start":186,"line_end":186,"column_start":5,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":38598,"byte_end":38613,"line_start":193,"line_end":193,"column_start":15,"column_end":30},"name":"SHOW_OPEN_PANEL","qualname":"::command::sys::SHOW_OPEN_PANEL","value":"Selector<FileDialogOptions>","parent":null,"children":[],"decl_id":null,"docs":" When submitted by the application, a file picker dialog will be shown to the user,\n and an [`OPEN_FILE`] command will be sent if a file is chosen.","sig":null,"attributes":[{"value":"/ When submitted by the application, a file picker dialog will be shown to the user,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":38371,"byte_end":38457,"line_start":189,"line_end":189,"column_start":5,"column_end":91}},{"value":"/ and an [`OPEN_FILE`] command will be sent if a file is chosen.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":38462,"byte_end":38528,"line_start":190,"line_end":190,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":38533,"byte_end":38536,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ [`OPEN_FILE`]: constant.OPEN_FILE.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":38541,"byte_end":38583,"line_start":192,"line_end":192,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":38826,"byte_end":38835,"line_start":199,"line_end":199,"column_start":15,"column_end":24},"name":"OPEN_FILE","qualname":"::command::sys::OPEN_FILE","value":"Selector<FileInfo>","parent":null,"children":[],"decl_id":null,"docs":" Open a file, must be handled by the application.","sig":null,"attributes":[{"value":"/ Open a file, must be handled by the application.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":38705,"byte_end":38757,"line_start":196,"line_end":196,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":38762,"byte_end":38765,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [`FileInfo`]: ../struct.FileInfo.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":38770,"byte_end":38811,"line_start":198,"line_end":198,"column_start":5,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":39187,"byte_end":39202,"line_start":206,"line_end":206,"column_start":15,"column_end":30},"name":"SHOW_SAVE_PANEL","qualname":"::command::sys::SHOW_SAVE_PANEL","value":"Selector<FileDialogOptions>","parent":null,"children":[],"decl_id":null,"docs":" When submitted by the application, the system will show the 'save as' panel,\n and if a path is selected the system will issue a [`SAVE_FILE`] command\n with the selected path as the payload.","sig":null,"attributes":[{"value":"/ When submitted by the application, the system will show the 'save as' panel,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":38910,"byte_end":38990,"line_start":201,"line_end":201,"column_start":5,"column_end":85}},{"value":"/ and if a path is selected the system will issue a [`SAVE_FILE`] command","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":38995,"byte_end":39070,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ with the selected path as the payload.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":39075,"byte_end":39117,"line_start":203,"line_end":203,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":39122,"byte_end":39125,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ [`SAVE_FILE`]: constant.SAVE_FILE.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":39130,"byte_end":39172,"line_start":205,"line_end":205,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":39627,"byte_end":39636,"line_start":214,"line_end":214,"column_start":15,"column_end":24},"name":"SAVE_FILE","qualname":"::command::sys::SAVE_FILE","value":"Selector<Option<FileInfo>>","parent":null,"children":[],"decl_id":null,"docs":" Save the current file, must be handled by the application.","sig":null,"attributes":[{"value":"/ Save the current file, must be handled by the application.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":39297,"byte_end":39359,"line_start":209,"line_end":209,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":39364,"byte_end":39367,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ How this should be handled depends on the payload:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":39372,"byte_end":39426,"line_start":211,"line_end":211,"column_start":5,"column_end":59}},{"value":"/ `Some(handle)`: the app should save to that file and store the `handle` for future use.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":39431,"byte_end":39522,"line_start":212,"line_end":212,"column_start":5,"column_end":96}},{"value":"/ `None`: the app should have received `Some` before and use the stored `FileInfo`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":39527,"byte_end":39612,"line_start":213,"line_end":213,"column_start":5,"column_end":90}}]},{"kind":"Const","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":39766,"byte_end":39777,"line_start":217,"line_end":217,"column_start":15,"column_end":26},"name":"PRINT_SETUP","qualname":"::command::sys::PRINT_SETUP","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Show the print-setup window.\n","sig":null,"attributes":[{"value":"/ Show the print-setup window.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":39719,"byte_end":39751,"line_start":216,"line_end":216,"column_start":5,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":39890,"byte_end":39895,"line_start":220,"line_end":220,"column_start":15,"column_end":20},"name":"PRINT","qualname":"::command::sys::PRINT","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Show the print dialog.\n","sig":null,"attributes":[{"value":"/ Show the print dialog.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":39849,"byte_end":39875,"line_start":219,"line_end":219,"column_start":5,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":40003,"byte_end":40016,"line_start":223,"line_end":223,"column_start":15,"column_end":28},"name":"PRINT_PREVIEW","qualname":"::command::sys::PRINT_PREVIEW","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Show the print preview.\n","sig":null,"attributes":[{"value":"/ Show the print preview.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":39961,"byte_end":39988,"line_start":222,"line_end":222,"column_start":5,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":40127,"byte_end":40130,"line_start":226,"line_end":226,"column_start":15,"column_end":18},"name":"CUT","qualname":"::command::sys::CUT","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Cut the current selection.\n","sig":null,"attributes":[{"value":"/ Cut the current selection.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":40082,"byte_end":40112,"line_start":225,"line_end":225,"column_start":5,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":40235,"byte_end":40239,"line_start":229,"line_end":229,"column_start":15,"column_end":19},"name":"COPY","qualname":"::command::sys::COPY","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Copy the current selection.\n","sig":null,"attributes":[{"value":"/ Copy the current selection.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":40189,"byte_end":40220,"line_start":228,"line_end":228,"column_start":5,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":40324,"byte_end":40329,"line_start":232,"line_end":232,"column_start":15,"column_end":20},"name":"PASTE","qualname":"::command::sys::PASTE","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Paste.\n","sig":null,"attributes":[{"value":"/ Paste.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":40299,"byte_end":40309,"line_start":231,"line_end":231,"column_start":5,"column_end":15}}]},{"kind":"Const","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":40414,"byte_end":40418,"line_start":235,"line_end":235,"column_start":15,"column_end":19},"name":"UNDO","qualname":"::command::sys::UNDO","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Undo.\n","sig":null,"attributes":[{"value":"/ Undo.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":40390,"byte_end":40399,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":40502,"byte_end":40506,"line_start":238,"line_end":238,"column_start":15,"column_end":19},"name":"REDO","qualname":"::command::sys::REDO","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" Redo.\n","sig":null,"attributes":[{"value":"/ Redo.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":40478,"byte_end":40487,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":40636,"byte_end":40640,"line_start":243,"line_end":243,"column_start":15,"column_end":19},"name":"NOOP","qualname":"::command::Selector::NOOP","value":"Selector","parent":{"krate":0,"index":207},"children":[],"decl_id":null,"docs":" A selector that does nothing.\n","sig":null,"attributes":[{"value":"/ A selector that does nothing.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":40588,"byte_end":40621,"line_start":242,"line_end":242,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":40769,"byte_end":40772,"line_start":248,"line_end":248,"column_start":18,"column_end":21},"name":"new","qualname":"<Selector<T>>::new","value":"pub const fn new(&'static str) -> Selector<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Selector` with the given string.\n","sig":null,"attributes":[{"value":"/ Create a new `Selector` with the given string.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":40701,"byte_end":40751,"line_start":247,"line_end":247,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":41289,"byte_end":41293,"line_start":265,"line_end":265,"column_start":12,"column_end":16},"name":"with","qualname":"<Selector<T>>::with","value":"pub fn with(Self, T) -> Command","parent":null,"children":[],"decl_id":null,"docs":" Convenience method for [`Command::new`] with this selector.","sig":null,"attributes":[{"value":"/ Convenience method for [`Command::new`] with this selector.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":41025,"byte_end":41088,"line_start":259,"line_end":259,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":41093,"byte_end":41096,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ If the payload is `()` there is no need to call this,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":41101,"byte_end":41158,"line_start":261,"line_end":261,"column_start":5,"column_end":62}},{"value":"/ as `Selector<()>` implements `Into<Command>`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":41163,"byte_end":41212,"line_start":262,"line_end":262,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":41217,"byte_end":41220,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ [`Command::new`]: struct.Command.html#method.new","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":41225,"byte_end":41277,"line_start":264,"line_end":264,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":41729,"byte_end":41732,"line_start":279,"line_end":279,"column_start":12,"column_end":15},"name":"new","qualname":"<Command>::new","value":"pub fn new<T: Any>(Selector<T>, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Command` with a payload.","sig":null,"attributes":[{"value":"/ Create a new `Command` with a payload.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":41389,"byte_end":41431,"line_start":271,"line_end":271,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":41436,"byte_end":41439,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ [`Selector::with`] can be used to create `Command`s more conveniently.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":41444,"byte_end":41518,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":41523,"byte_end":41526,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ If you do not need a payload, [`Selector`] implements `Into<Command>`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":41531,"byte_end":41605,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":41610,"byte_end":41613,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ [`Selector`]: struct.Selector.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":41618,"byte_end":41656,"line_start":277,"line_end":277,"column_start":5,"column_end":43}},{"value":"/ [`Selector::with`]: struct.Selector.html#method.with","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":41661,"byte_end":41717,"line_start":278,"line_end":278,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":42221,"byte_end":42223,"line_start":295,"line_end":295,"column_start":12,"column_end":14},"name":"is","qualname":"<Command>::is","value":"pub fn is<T>(&Self, Selector<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` matches this `selector`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` matches this `selector`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":42156,"byte_end":42209,"line_start":294,"line_end":294,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":42852,"byte_end":42855,"line_start":311,"line_end":311,"column_start":12,"column_end":15},"name":"get","qualname":"<Command>::get","value":"pub fn get<T: Any>(&Self, Selector<T>) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(&T)` (this `Command`'s payload) if the selector matches.","sig":null,"attributes":[{"value":"/ Returns `Some(&T)` (this `Command`'s payload) if the selector matches.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":42319,"byte_end":42393,"line_start":299,"line_end":299,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":42398,"byte_end":42401,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self.is(selector) == false`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":42406,"byte_end":42459,"line_start":301,"line_end":301,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":42464,"byte_end":42467,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Alternatively you can check the selector with [`is`] and then use [`get_unchecked`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":42472,"byte_end":42560,"line_start":303,"line_end":303,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":42565,"byte_end":42568,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":42573,"byte_end":42585,"line_start":305,"line_end":305,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":42590,"byte_end":42593,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ Panics when the payload has a different type, than what the selector is supposed to carry.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":42598,"byte_end":42692,"line_start":307,"line_end":307,"column_start":5,"column_end":99}},{"value":"/ This can happen when two selectors with different types but the same key are used.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":42697,"byte_end":42783,"line_start":308,"line_end":308,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":42788,"byte_end":42791,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ [`get_unchecked`]: #method.get_unchecked","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":42796,"byte_end":42840,"line_start":310,"line_end":310,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":43865,"byte_end":43878,"line_start":338,"line_end":338,"column_start":12,"column_end":25},"name":"get_unchecked","qualname":"<Command>::get_unchecked","value":"pub fn get_unchecked<T: Any>(&Self, Selector<T>) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this `Command`'s payload.","sig":null,"attributes":[{"value":"/ Returns a reference to this `Command`'s payload.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":43295,"byte_end":43347,"line_start":324,"line_end":324,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":43352,"byte_end":43355,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ If the selector has already been checked with [`is`], then `get_unchecked` can be used safely.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":43360,"byte_end":43458,"line_start":326,"line_end":326,"column_start":5,"column_end":103}},{"value":"/ Otherwise you should use [`get`] instead.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":43463,"byte_end":43508,"line_start":327,"line_end":327,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":43513,"byte_end":43516,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":43521,"byte_end":43533,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":43538,"byte_end":43541,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Panics when `self.is(selector) == false`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":43546,"byte_end":43591,"line_start":331,"line_end":331,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":43596,"byte_end":43599,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Panics when the payload has a different type, than what the selector is supposed to carry.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":43604,"byte_end":43698,"line_start":333,"line_end":333,"column_start":5,"column_end":99}},{"value":"/ This can happen when two selectors with different types but the same key are used.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":43703,"byte_end":43789,"line_start":334,"line_end":334,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":43794,"byte_end":43797,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [`is`]: #method.is","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":43802,"byte_end":43824,"line_start":336,"line_end":336,"column_start":5,"column_end":27}},{"value":"/ [`get`]: #method.get","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":43829,"byte_end":43853,"line_start":337,"line_end":337,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":44200,"byte_end":44203,"line_start":350,"line_end":350,"column_start":12,"column_end":15},"name":"new","qualname":"<SingleUse<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":44337,"byte_end":44341,"line_start":355,"line_end":355,"column_start":12,"column_end":16},"name":"take","qualname":"<SingleUse<T>>::take","value":"pub fn take(&Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes the value, leaving a None in its place.\n","sig":null,"attributes":[{"value":"/ Takes the value, leaving a None in its place.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":44276,"byte_end":44325,"line_start":354,"line_end":354,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":47981,"byte_end":47989,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"EventCtx","qualname":"::contexts::EventCtx","value":"EventCtx {  }","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300}],"decl_id":null,"docs":" A mutable context provided to event handling methods of widgets.","sig":null,"attributes":[{"value":"/ A mutable context provided to event handling methods of widgets.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":47717,"byte_end":47785,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":47786,"byte_end":47789,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Widgets should call [`request_paint`] whenever an event causes a change","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":47790,"byte_end":47865,"line_start":57,"line_end":57,"column_start":1,"column_end":76}},{"value":"/ in the widget's appearance, to schedule a repaint.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":47866,"byte_end":47920,"line_start":58,"line_end":58,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":47921,"byte_end":47924,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [`request_paint`]: #method.request_paint","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":47925,"byte_end":47969,"line_start":60,"line_end":60,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":48687,"byte_end":48699,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"name":"LifeCycleCtx","qualname":"::contexts::LifeCycleCtx","value":"LifeCycleCtx {  }","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"decl_id":null,"docs":" A mutable context provided to the [`lifecycle`] method on widgets.","sig":null,"attributes":[{"value":"/ A mutable context provided to the [`lifecycle`] method on widgets.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":48211,"byte_end":48281,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":48282,"byte_end":48285,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Certain methods on this context are only meaningful during the handling of","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":48286,"byte_end":48364,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ specific lifecycle events; for instance [`register_child`]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":48365,"byte_end":48427,"line_start":72,"line_end":72,"column_start":1,"column_end":63}},{"value":"/ should only be called while handling [`LifeCycle::WidgetAdded`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":48428,"byte_end":48496,"line_start":73,"line_end":73,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":48497,"byte_end":48500,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`lifecycle`]: trait.Widget.html#tymethod.lifecycle","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":48501,"byte_end":48556,"line_start":75,"line_end":75,"column_start":1,"column_end":56}},{"value":"/ [`register_child`]: #method.register_child","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":48557,"byte_end":48603,"line_start":76,"line_end":76,"column_start":1,"column_end":47}},{"value":"/ [`LifeCycle::WidgetAdded`]: enum.LifeCycle.html#variant.WidgetAdded","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":48604,"byte_end":48675,"line_start":77,"line_end":77,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":49077,"byte_end":49086,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"UpdateCtx","qualname":"::contexts::UpdateCtx","value":"UpdateCtx {  }","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"decl_id":null,"docs":" A mutable context provided to data update methods of widgets.","sig":null,"attributes":[{"value":"/ A mutable context provided to data update methods of widgets.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":48811,"byte_end":48876,"line_start":83,"line_end":83,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":48877,"byte_end":48880,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Widgets should call [`request_paint`] whenever a data change causes a change","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":48881,"byte_end":48961,"line_start":85,"line_end":85,"column_start":1,"column_end":81}},{"value":"/ in the widget's appearance, to schedule a repaint.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":48962,"byte_end":49016,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":49017,"byte_end":49020,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [`request_paint`]: #method.request_paint","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":49021,"byte_end":49065,"line_start":88,"line_end":88,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":49433,"byte_end":49442,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"LayoutCtx","qualname":"::contexts::LayoutCtx","value":"LayoutCtx {  }","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"decl_id":null,"docs":" A context provided to layout handling methods of widgets.","sig":null,"attributes":[{"value":"/ A context provided to layout handling methods of widgets.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":49198,"byte_end":49259,"line_start":94,"line_end":94,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":49260,"byte_end":49263,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ As of now, the main service provided is access to a factory for","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":49264,"byte_end":49331,"line_start":96,"line_end":96,"column_start":1,"column_end":68}},{"value":"/ creating text layout objects, which are likely to be useful","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":49332,"byte_end":49395,"line_start":97,"line_end":97,"column_start":1,"column_end":64}},{"value":"/ during widget layout.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":49396,"byte_end":49421,"line_start":98,"line_end":98,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":50147,"byte_end":50155,"line_start":119,"line_end":119,"column_start":12,"column_end":20},"name":"PaintCtx","qualname":"::contexts::PaintCtx","value":"PaintCtx { render_ctx }","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"decl_id":null,"docs":" A context passed to paint methods of widgets.","sig":null,"attributes":[{"value":"/ A context passed to paint methods of widgets.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":49794,"byte_end":49843,"line_start":112,"line_end":112,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":49844,"byte_end":49847,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Widgets paint their appearance by calling methods on the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":49848,"byte_end":49908,"line_start":114,"line_end":114,"column_start":1,"column_end":61}},{"value":"/ `render_ctx`, which PaintCtx derefs to for convenience.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":49909,"byte_end":49968,"line_start":115,"line_end":115,"column_start":1,"column_end":60}},{"value":"/ This struct is expected to grow, for example to include the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":49969,"byte_end":50032,"line_start":116,"line_end":116,"column_start":1,"column_end":64}},{"value":"/ \"damage region\" indicating that only a subset of the entire","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":50033,"byte_end":50096,"line_start":117,"line_end":117,"column_start":1,"column_end":64}},{"value":"/ widget hierarchy needs repainting.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":50097,"byte_end":50135,"line_start":118,"line_end":118,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":50322,"byte_end":50332,"line_start":123,"line_end":123,"column_start":9,"column_end":19},"name":"render_ctx","qualname":"::contexts::PaintCtx::render_ctx","value":"&'a mut druid_shell::piet_common::D2DRenderContext<'c>","parent":{"krate":0,"index":321},"children":[],"decl_id":null,"docs":" The render context for actually painting.\n","sig":null,"attributes":[{"value":"/ The render context for actually painting.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":50268,"byte_end":50313,"line_start":122,"line_end":122,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3315},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51083,"byte_end":51089,"line_start":139,"line_end":139,"column_start":12,"column_end":18},"name":"Region","qualname":"::contexts::Region","value":"","parent":null,"children":[],"decl_id":null,"docs":" A region of a widget, generally used to describe what needs to be drawn.","sig":null,"attributes":[{"value":"/ A region of a widget, generally used to describe what needs to be drawn.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":50598,"byte_end":50674,"line_start":132,"line_end":132,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":50675,"byte_end":50678,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ This is currently just a single `Rect`, but may become more complicated in the future.  Although","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":50679,"byte_end":50779,"line_start":134,"line_end":134,"column_start":1,"column_end":101}},{"value":"/ this is just a wrapper around `Rect`, it has some different conventions. Mainly, \"signed\"","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":50780,"byte_end":50873,"line_start":135,"line_end":135,"column_start":1,"column_end":94}},{"value":"/ invalidation regions don't make sense. Therefore, a rectangle with non-positive width or height","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":50874,"byte_end":50973,"line_start":136,"line_end":136,"column_start":1,"column_end":100}},{"value":"/ is considered \"empty\", and all empty rectangles are treated the same.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":50974,"byte_end":51047,"line_start":137,"line_end":137,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3323},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51338,"byte_end":51347,"line_start":150,"line_end":150,"column_start":16,"column_end":25},"name":"widget_id","qualname":"<EventCtx>::widget_id","value":"pub fn widget_id(&Self) -> WidgetId","parent":null,"children":[],"decl_id":null,"docs":" get the `WidgetId` of the current widget.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3324},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51491,"byte_end":51497,"line_start":155,"line_end":155,"column_start":16,"column_end":22},"name":"window","qualname":"<EventCtx>::window","value":"pub fn window(&Self) -> &WindowHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the current `WindowHandle`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3325},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51635,"byte_end":51644,"line_start":160,"line_end":160,"column_start":16,"column_end":25},"name":"window_id","qualname":"<EventCtx>::window_id","value":"pub fn window_id(&Self) -> WindowId","parent":null,"children":[],"decl_id":null,"docs":" Get the `WindowId` of the current window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3326},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51782,"byte_end":51786,"line_start":165,"line_end":165,"column_start":16,"column_end":20},"name":"text","qualname":"<EventCtx>::text","value":"pub fn text(&Self) -> Text","parent":null,"children":[],"decl_id":null,"docs":" Get an object which can create text layouts.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3328},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51338,"byte_end":51347,"line_start":150,"line_end":150,"column_start":16,"column_end":25},"name":"widget_id","qualname":"<UpdateCtx>::widget_id","value":"pub fn widget_id(&Self) -> WidgetId","parent":null,"children":[],"decl_id":null,"docs":" get the `WidgetId` of the current widget.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3329},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51491,"byte_end":51497,"line_start":155,"line_end":155,"column_start":16,"column_end":22},"name":"window","qualname":"<UpdateCtx>::window","value":"pub fn window(&Self) -> &WindowHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the current `WindowHandle`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3330},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51635,"byte_end":51644,"line_start":160,"line_end":160,"column_start":16,"column_end":25},"name":"window_id","qualname":"<UpdateCtx>::window_id","value":"pub fn window_id(&Self) -> WindowId","parent":null,"children":[],"decl_id":null,"docs":" Get the `WindowId` of the current window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3331},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51782,"byte_end":51786,"line_start":165,"line_end":165,"column_start":16,"column_end":20},"name":"text","qualname":"<UpdateCtx>::text","value":"pub fn text(&Self) -> Text","parent":null,"children":[],"decl_id":null,"docs":" Get an object which can create text layouts.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3333},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51338,"byte_end":51347,"line_start":150,"line_end":150,"column_start":16,"column_end":25},"name":"widget_id","qualname":"<LifeCycleCtx>::widget_id","value":"pub fn widget_id(&Self) -> WidgetId","parent":null,"children":[],"decl_id":null,"docs":" get the `WidgetId` of the current widget.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3334},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51491,"byte_end":51497,"line_start":155,"line_end":155,"column_start":16,"column_end":22},"name":"window","qualname":"<LifeCycleCtx>::window","value":"pub fn window(&Self) -> &WindowHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the current `WindowHandle`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3335},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51635,"byte_end":51644,"line_start":160,"line_end":160,"column_start":16,"column_end":25},"name":"window_id","qualname":"<LifeCycleCtx>::window_id","value":"pub fn window_id(&Self) -> WindowId","parent":null,"children":[],"decl_id":null,"docs":" Get the `WindowId` of the current window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3336},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51782,"byte_end":51786,"line_start":165,"line_end":165,"column_start":16,"column_end":20},"name":"text","qualname":"<LifeCycleCtx>::text","value":"pub fn text(&Self) -> Text","parent":null,"children":[],"decl_id":null,"docs":" Get an object which can create text layouts.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3338},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51338,"byte_end":51347,"line_start":150,"line_end":150,"column_start":16,"column_end":25},"name":"widget_id","qualname":"<PaintCtx>::widget_id","value":"pub fn widget_id(&Self) -> WidgetId","parent":null,"children":[],"decl_id":null,"docs":" get the `WidgetId` of the current widget.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3339},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51491,"byte_end":51497,"line_start":155,"line_end":155,"column_start":16,"column_end":22},"name":"window","qualname":"<PaintCtx>::window","value":"pub fn window(&Self) -> &WindowHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the current `WindowHandle`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51635,"byte_end":51644,"line_start":160,"line_end":160,"column_start":16,"column_end":25},"name":"window_id","qualname":"<PaintCtx>::window_id","value":"pub fn window_id(&Self) -> WindowId","parent":null,"children":[],"decl_id":null,"docs":" Get the `WindowId` of the current window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51782,"byte_end":51786,"line_start":165,"line_end":165,"column_start":16,"column_end":20},"name":"text","qualname":"<PaintCtx>::text","value":"pub fn text(&Self) -> Text","parent":null,"children":[],"decl_id":null,"docs":" Get an object which can create text layouts.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51338,"byte_end":51347,"line_start":150,"line_end":150,"column_start":16,"column_end":25},"name":"widget_id","qualname":"<LayoutCtx>::widget_id","value":"pub fn widget_id(&Self) -> WidgetId","parent":null,"children":[],"decl_id":null,"docs":" get the `WidgetId` of the current widget.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3344},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51491,"byte_end":51497,"line_start":155,"line_end":155,"column_start":16,"column_end":22},"name":"window","qualname":"<LayoutCtx>::window","value":"pub fn window(&Self) -> &WindowHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the current `WindowHandle`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51635,"byte_end":51644,"line_start":160,"line_end":160,"column_start":16,"column_end":25},"name":"window_id","qualname":"<LayoutCtx>::window_id","value":"pub fn window_id(&Self) -> WindowId","parent":null,"children":[],"decl_id":null,"docs":" Get the `WindowId` of the current window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3346},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":51782,"byte_end":51786,"line_start":165,"line_end":165,"column_start":16,"column_end":20},"name":"text","qualname":"<LayoutCtx>::text","value":"pub fn text(&Self) -> Text","parent":null,"children":[],"decl_id":null,"docs":" Get an object which can create text layouts.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":52404,"byte_end":52408,"line_start":187,"line_end":187,"column_start":16,"column_end":20},"name":"size","qualname":"<EventCtx>::size","value":"pub fn size(&Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" The layout size.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":53272,"byte_end":53278,"line_start":205,"line_end":205,"column_start":16,"column_end":22},"name":"is_hot","qualname":"<EventCtx>::is_hot","value":"pub fn is_hot(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The \"hot\" (aka hover) status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3350},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":53802,"byte_end":53811,"line_start":219,"line_end":219,"column_start":16,"column_end":25},"name":"is_active","qualname":"<EventCtx>::is_active","value":"pub fn is_active(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The active status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":54924,"byte_end":54934,"line_start":242,"line_end":242,"column_start":16,"column_end":26},"name":"is_focused","qualname":"<EventCtx>::is_focused","value":"pub fn is_focused(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The focus status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":55341,"byte_end":55350,"line_start":252,"line_end":252,"column_start":16,"column_end":25},"name":"has_focus","qualname":"<EventCtx>::has_focus","value":"pub fn has_focus(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The (tree) focus status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3354},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":52404,"byte_end":52408,"line_start":187,"line_end":187,"column_start":16,"column_end":20},"name":"size","qualname":"<UpdateCtx>::size","value":"pub fn size(&Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" The layout size.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3355},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":53272,"byte_end":53278,"line_start":205,"line_end":205,"column_start":16,"column_end":22},"name":"is_hot","qualname":"<UpdateCtx>::is_hot","value":"pub fn is_hot(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The \"hot\" (aka hover) status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3356},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":53802,"byte_end":53811,"line_start":219,"line_end":219,"column_start":16,"column_end":25},"name":"is_active","qualname":"<UpdateCtx>::is_active","value":"pub fn is_active(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The active status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3357},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":54924,"byte_end":54934,"line_start":242,"line_end":242,"column_start":16,"column_end":26},"name":"is_focused","qualname":"<UpdateCtx>::is_focused","value":"pub fn is_focused(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The focus status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3358},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":55341,"byte_end":55350,"line_start":252,"line_end":252,"column_start":16,"column_end":25},"name":"has_focus","qualname":"<UpdateCtx>::has_focus","value":"pub fn has_focus(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The (tree) focus status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3360},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":52404,"byte_end":52408,"line_start":187,"line_end":187,"column_start":16,"column_end":20},"name":"size","qualname":"<LifeCycleCtx>::size","value":"pub fn size(&Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" The layout size.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3361},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":53272,"byte_end":53278,"line_start":205,"line_end":205,"column_start":16,"column_end":22},"name":"is_hot","qualname":"<LifeCycleCtx>::is_hot","value":"pub fn is_hot(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The \"hot\" (aka hover) status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3362},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":53802,"byte_end":53811,"line_start":219,"line_end":219,"column_start":16,"column_end":25},"name":"is_active","qualname":"<LifeCycleCtx>::is_active","value":"pub fn is_active(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The active status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3363},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":54924,"byte_end":54934,"line_start":242,"line_end":242,"column_start":16,"column_end":26},"name":"is_focused","qualname":"<LifeCycleCtx>::is_focused","value":"pub fn is_focused(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The focus status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3364},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":55341,"byte_end":55350,"line_start":252,"line_end":252,"column_start":16,"column_end":25},"name":"has_focus","qualname":"<LifeCycleCtx>::has_focus","value":"pub fn has_focus(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The (tree) focus status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3366},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":52404,"byte_end":52408,"line_start":187,"line_end":187,"column_start":16,"column_end":20},"name":"size","qualname":"<PaintCtx>::size","value":"pub fn size(&Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" The layout size.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3367},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":53272,"byte_end":53278,"line_start":205,"line_end":205,"column_start":16,"column_end":22},"name":"is_hot","qualname":"<PaintCtx>::is_hot","value":"pub fn is_hot(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The \"hot\" (aka hover) status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3368},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":53802,"byte_end":53811,"line_start":219,"line_end":219,"column_start":16,"column_end":25},"name":"is_active","qualname":"<PaintCtx>::is_active","value":"pub fn is_active(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The active status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3369},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":54924,"byte_end":54934,"line_start":242,"line_end":242,"column_start":16,"column_end":26},"name":"is_focused","qualname":"<PaintCtx>::is_focused","value":"pub fn is_focused(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The focus status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3370},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":55341,"byte_end":55350,"line_start":252,"line_end":252,"column_start":16,"column_end":25},"name":"has_focus","qualname":"<PaintCtx>::has_focus","value":"pub fn has_focus(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The (tree) focus status of a widget.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3372},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":55635,"byte_end":55645,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"invalidate","qualname":"<EventCtx>::invalidate","value":"pub fn invalidate(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.5.0\", note = \"use request_paint instead\")","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":55557,"byte_end":55623,"line_start":260,"line_end":260,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3373},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":56018,"byte_end":56031,"line_start":271,"line_end":271,"column_start":12,"column_end":25},"name":"request_paint","qualname":"<EventCtx>::request_paint","value":"pub fn request_paint(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request a [`paint`] pass. This is equivalent to calling\n [`request_paint_rect`] for the widget's [`paint_rect`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3374},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":56381,"byte_end":56399,"line_start":281,"line_end":281,"column_start":12,"column_end":30},"name":"request_paint_rect","qualname":"<EventCtx>::request_paint_rect","value":"pub fn request_paint_rect(&mut Self, Rect)","parent":null,"children":[],"decl_id":null,"docs":" Request a [`paint`] pass for redrawing a rectangle, which is given\n relative to our layout rectangle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3375},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":56923,"byte_end":56937,"line_start":295,"line_end":295,"column_start":12,"column_end":26},"name":"request_layout","qualname":"<EventCtx>::request_layout","value":"pub fn request_layout(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request a layout pass.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3376},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":57052,"byte_end":57070,"line_start":300,"line_end":300,"column_start":12,"column_end":30},"name":"request_anim_frame","qualname":"<EventCtx>::request_anim_frame","value":"pub fn request_anim_frame(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request an animation frame.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3377},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":57322,"byte_end":57335,"line_start":309,"line_end":309,"column_start":12,"column_end":25},"name":"request_timer","qualname":"<EventCtx>::request_timer","value":"pub fn request_timer(&mut Self, Duration) -> TimerToken","parent":null,"children":[],"decl_id":null,"docs":" Request a timer event.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3378},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":57590,"byte_end":57606,"line_start":316,"line_end":316,"column_start":12,"column_end":28},"name":"children_changed","qualname":"<EventCtx>::children_changed","value":"pub fn children_changed(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Indicate that your children have changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3379},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":58152,"byte_end":58166,"line_start":330,"line_end":330,"column_start":12,"column_end":26},"name":"submit_command","qualname":"<EventCtx>::submit_command","value":"pub fn submit_command<impl Into<Command>: Into<Command>,\n                      impl Into<Option<Target>>: Into<Option<Target>>>(&mut Self,\n                                                                       impl Into<Command>,\n                                                                       impl Into<Option<Target>>)","parent":null,"children":[],"decl_id":null,"docs":" Submit a [`Command`] to be run after this event is handled.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3382},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":58567,"byte_end":58575,"line_start":338,"line_end":338,"column_start":12,"column_end":20},"name":"set_menu","qualname":"<EventCtx>::set_menu","value":"pub fn set_menu<T: Any>(&mut Self, MenuDesc<T>)","parent":null,"children":[],"decl_id":null,"docs":" Set the menu of the window containing the current widget.\n `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3385},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":55635,"byte_end":55645,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"invalidate","qualname":"<UpdateCtx>::invalidate","value":"pub fn invalidate(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.5.0\", note = \"use request_paint instead\")","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":55557,"byte_end":55623,"line_start":260,"line_end":260,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3386},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":56018,"byte_end":56031,"line_start":271,"line_end":271,"column_start":12,"column_end":25},"name":"request_paint","qualname":"<UpdateCtx>::request_paint","value":"pub fn request_paint(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request a [`paint`] pass. This is equivalent to calling\n [`request_paint_rect`] for the widget's [`paint_rect`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3387},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":56381,"byte_end":56399,"line_start":281,"line_end":281,"column_start":12,"column_end":30},"name":"request_paint_rect","qualname":"<UpdateCtx>::request_paint_rect","value":"pub fn request_paint_rect(&mut Self, Rect)","parent":null,"children":[],"decl_id":null,"docs":" Request a [`paint`] pass for redrawing a rectangle, which is given\n relative to our layout rectangle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3388},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":56923,"byte_end":56937,"line_start":295,"line_end":295,"column_start":12,"column_end":26},"name":"request_layout","qualname":"<UpdateCtx>::request_layout","value":"pub fn request_layout(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request a layout pass.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3389},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":57052,"byte_end":57070,"line_start":300,"line_end":300,"column_start":12,"column_end":30},"name":"request_anim_frame","qualname":"<UpdateCtx>::request_anim_frame","value":"pub fn request_anim_frame(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request an animation frame.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3390},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":57322,"byte_end":57335,"line_start":309,"line_end":309,"column_start":12,"column_end":25},"name":"request_timer","qualname":"<UpdateCtx>::request_timer","value":"pub fn request_timer(&mut Self, Duration) -> TimerToken","parent":null,"children":[],"decl_id":null,"docs":" Request a timer event.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3391},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":57590,"byte_end":57606,"line_start":316,"line_end":316,"column_start":12,"column_end":28},"name":"children_changed","qualname":"<UpdateCtx>::children_changed","value":"pub fn children_changed(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Indicate that your children have changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3392},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":58152,"byte_end":58166,"line_start":330,"line_end":330,"column_start":12,"column_end":26},"name":"submit_command","qualname":"<UpdateCtx>::submit_command","value":"pub fn submit_command<impl Into<Command>: Into<Command>,\n                      impl Into<Option<Target>>: Into<Option<Target>>>(&mut Self,\n                                                                       impl Into<Command>,\n                                                                       impl Into<Option<Target>>)","parent":null,"children":[],"decl_id":null,"docs":" Submit a [`Command`] to be run after this event is handled.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3395},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":58567,"byte_end":58575,"line_start":338,"line_end":338,"column_start":12,"column_end":20},"name":"set_menu","qualname":"<UpdateCtx>::set_menu","value":"pub fn set_menu<T: Any>(&mut Self, MenuDesc<T>)","parent":null,"children":[],"decl_id":null,"docs":" Set the menu of the window containing the current widget.\n `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3398},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":55635,"byte_end":55645,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"invalidate","qualname":"<LifeCycleCtx>::invalidate","value":"pub fn invalidate(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.5.0\", note = \"use request_paint instead\")","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":55557,"byte_end":55623,"line_start":260,"line_end":260,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3399},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":56018,"byte_end":56031,"line_start":271,"line_end":271,"column_start":12,"column_end":25},"name":"request_paint","qualname":"<LifeCycleCtx>::request_paint","value":"pub fn request_paint(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request a [`paint`] pass. This is equivalent to calling\n [`request_paint_rect`] for the widget's [`paint_rect`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3400},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":56381,"byte_end":56399,"line_start":281,"line_end":281,"column_start":12,"column_end":30},"name":"request_paint_rect","qualname":"<LifeCycleCtx>::request_paint_rect","value":"pub fn request_paint_rect(&mut Self, Rect)","parent":null,"children":[],"decl_id":null,"docs":" Request a [`paint`] pass for redrawing a rectangle, which is given\n relative to our layout rectangle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3401},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":56923,"byte_end":56937,"line_start":295,"line_end":295,"column_start":12,"column_end":26},"name":"request_layout","qualname":"<LifeCycleCtx>::request_layout","value":"pub fn request_layout(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request a layout pass.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3402},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":57052,"byte_end":57070,"line_start":300,"line_end":300,"column_start":12,"column_end":30},"name":"request_anim_frame","qualname":"<LifeCycleCtx>::request_anim_frame","value":"pub fn request_anim_frame(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request an animation frame.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3403},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":57322,"byte_end":57335,"line_start":309,"line_end":309,"column_start":12,"column_end":25},"name":"request_timer","qualname":"<LifeCycleCtx>::request_timer","value":"pub fn request_timer(&mut Self, Duration) -> TimerToken","parent":null,"children":[],"decl_id":null,"docs":" Request a timer event.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3404},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":57590,"byte_end":57606,"line_start":316,"line_end":316,"column_start":12,"column_end":28},"name":"children_changed","qualname":"<LifeCycleCtx>::children_changed","value":"pub fn children_changed(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Indicate that your children have changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3405},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":58152,"byte_end":58166,"line_start":330,"line_end":330,"column_start":12,"column_end":26},"name":"submit_command","qualname":"<LifeCycleCtx>::submit_command","value":"pub fn submit_command<impl Into<Command>: Into<Command>,\n                      impl Into<Option<Target>>: Into<Option<Target>>>(&mut Self,\n                                                                       impl Into<Command>,\n                                                                       impl Into<Option<Target>>)","parent":null,"children":[],"decl_id":null,"docs":" Submit a [`Command`] to be run after this event is handled.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3408},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":58567,"byte_end":58575,"line_start":338,"line_end":338,"column_start":12,"column_end":20},"name":"set_menu","qualname":"<LifeCycleCtx>::set_menu","value":"pub fn set_menu<T: Any>(&mut Self, MenuDesc<T>)","parent":null,"children":[],"decl_id":null,"docs":" Set the menu of the window containing the current widget.\n `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":59349,"byte_end":59359,"line_start":357,"line_end":357,"column_start":12,"column_end":22},"name":"set_cursor","qualname":"<EventCtx>::set_cursor","value":"pub fn set_cursor(&mut Self, &Cursor)","parent":null,"children":[],"decl_id":null,"docs":" Set the cursor icon.","sig":null,"attributes":[{"value":"/ Set the cursor icon.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":58690,"byte_end":58714,"line_start":344,"line_end":344,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":58719,"byte_end":58722,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Call this when handling a mouse move event, to set the cursor for the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":58727,"byte_end":58800,"line_start":346,"line_end":346,"column_start":5,"column_end":78}},{"value":"/ widget. A container widget can safely call this method, then recurse","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":58805,"byte_end":58877,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ to its children, as a sequence of calls within an event propagation","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":58882,"byte_end":58953,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/ only has the effect of the last one (ie no need to worry about","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":58958,"byte_end":59024,"line_start":349,"line_end":349,"column_start":5,"column_end":71}},{"value":"/ flashing).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":59029,"byte_end":59043,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":59048,"byte_end":59051,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This method is expected to be called mostly from the [`MouseMove`]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":59056,"byte_end":59126,"line_start":352,"line_end":352,"column_start":5,"column_end":75}},{"value":"/ event handler, but can also be called in response to other events,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":59131,"byte_end":59201,"line_start":353,"line_end":353,"column_start":5,"column_end":75}},{"value":"/ for example pressing a key to change the behavior of a widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":59206,"byte_end":59272,"line_start":354,"line_end":354,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":59277,"byte_end":59280,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ [`MouseMove`]: enum.Event.html#variant.MouseMove","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":59285,"byte_end":59337,"line_start":356,"line_end":356,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":59583,"byte_end":59593,"line_start":364,"line_end":364,"column_start":12,"column_end":22},"name":"set_active","qualname":"<EventCtx>::set_active","value":"pub fn set_active(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set the \"active\" state of the widget.","sig":null,"attributes":[{"value":"/ Set the \"active\" state of the widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":59446,"byte_end":59487,"line_start":361,"line_end":361,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":59492,"byte_end":59495,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ See [`EventCtx::is_active`](struct.EventCtx.html#method.is_active).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":59500,"byte_end":59571,"line_start":363,"line_end":363,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":59972,"byte_end":59982,"line_start":373,"line_end":373,"column_start":12,"column_end":22},"name":"new_window","qualname":"<EventCtx>::new_window","value":"pub fn new_window<T: Any>(&mut Self, WindowDesc<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new window.\n `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","sig":null,"attributes":[{"value":"/ Create a new window.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":59754,"byte_end":59778,"line_start":369,"line_end":369,"column_start":5,"column_end":29}},{"value":"/ `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":59783,"byte_end":59881,"line_start":370,"line_end":370,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":59886,"byte_end":59889,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`AppLauncher::launch`]: struct.AppLauncher.html#method.launch","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":59894,"byte_end":59960,"line_start":372,"line_end":372,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":60809,"byte_end":60826,"line_start":393,"line_end":393,"column_start":12,"column_end":29},"name":"show_context_menu","qualname":"<EventCtx>::show_context_menu","value":"pub fn show_context_menu<T: Any>(&mut Self, ContextMenu<T>)","parent":null,"children":[],"decl_id":null,"docs":" Show the context menu in the window containing the current widget.\n `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","sig":null,"attributes":[{"value":"/ Show the context menu in the window containing the current widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":60545,"byte_end":60615,"line_start":389,"line_end":389,"column_start":5,"column_end":75}},{"value":"/ `T` must be the application's root `Data` type (the type provided to [`AppLauncher::launch`]).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":60620,"byte_end":60718,"line_start":390,"line_end":390,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":60723,"byte_end":60726,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ [`AppLauncher::launch`]: struct.AppLauncher.html#method.launch","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":60731,"byte_end":60797,"line_start":392,"line_end":392,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":61508,"byte_end":61519,"line_start":411,"line_end":411,"column_start":12,"column_end":23},"name":"set_handled","qualname":"<EventCtx>::set_handled","value":"pub fn set_handled(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Set the event as \"handled\", which stops its propagation to other\n widgets.\n","sig":null,"attributes":[{"value":"/ Set the event as \"handled\", which stops its propagation to other","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":61411,"byte_end":61479,"line_start":409,"line_end":409,"column_start":5,"column_end":73}},{"value":"/ widgets.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":61484,"byte_end":61496,"line_start":410,"line_end":410,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":61658,"byte_end":61668,"line_start":416,"line_end":416,"column_start":12,"column_end":22},"name":"is_handled","qualname":"<EventCtx>::is_handled","value":"pub fn is_handled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine whether the event has been handled by some other widget.\n","sig":null,"attributes":[{"value":"/ Determine whether the event has been handled by some other widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":61576,"byte_end":61646,"line_start":415,"line_end":415,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":62141,"byte_end":62154,"line_start":429,"line_end":429,"column_start":12,"column_end":25},"name":"request_focus","qualname":"<EventCtx>::request_focus","value":"pub fn request_focus(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Request keyboard focus.","sig":null,"attributes":[{"value":"/ Request keyboard focus.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":61721,"byte_end":61748,"line_start":420,"line_end":420,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":61753,"byte_end":61756,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Because only one widget can be focused at a time, multiple focus requests","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":61761,"byte_end":61838,"line_start":422,"line_end":422,"column_start":5,"column_end":82}},{"value":"/ from different widgets during a single event cycle means that the last","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":61843,"byte_end":61917,"line_start":423,"line_end":423,"column_start":5,"column_end":79}},{"value":"/ widget that requests focus will override the previous requests.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":61922,"byte_end":61989,"line_start":424,"line_end":424,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":61994,"byte_end":61997,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ See [`is_focused`] for more information about focus.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":62002,"byte_end":62058,"line_start":426,"line_end":426,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":62063,"byte_end":62066,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ [`is_focused`]: struct.EventCtx.html#method.is_focused","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":62071,"byte_end":62129,"line_start":428,"line_end":428,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":62856,"byte_end":62866,"line_start":445,"line_end":445,"column_start":12,"column_end":22},"name":"focus_next","qualname":"<EventCtx>::focus_next","value":"pub fn focus_next(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Transfer focus to the next focusable widget.","sig":null,"attributes":[{"value":"/ Transfer focus to the next focusable widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":62575,"byte_end":62623,"line_start":438,"line_end":438,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":62628,"byte_end":62631,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ This should only be called by a widget that currently has focus.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":62636,"byte_end":62704,"line_start":440,"line_end":440,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":62709,"byte_end":62712,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ See [`is_focused`] for more information about focus.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":62717,"byte_end":62773,"line_start":442,"line_end":442,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":62778,"byte_end":62781,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ [`is_focused`]: struct.EventCtx.html#method.is_focused","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":62786,"byte_end":62844,"line_start":444,"line_end":444,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":63394,"byte_end":63404,"line_start":460,"line_end":460,"column_start":12,"column_end":22},"name":"focus_prev","qualname":"<EventCtx>::focus_prev","value":"pub fn focus_prev(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Transfer focus to the previous focusable widget.","sig":null,"attributes":[{"value":"/ Transfer focus to the previous focusable widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":63109,"byte_end":63161,"line_start":453,"line_end":453,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":63166,"byte_end":63169,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ This should only be called by a widget that currently has focus.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":63174,"byte_end":63242,"line_start":455,"line_end":455,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":63247,"byte_end":63250,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ See [`is_focused`] for more information about focus.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":63255,"byte_end":63311,"line_start":457,"line_end":457,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":63316,"byte_end":63319,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ [`is_focused`]: struct.EventCtx.html#method.is_focused","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":63324,"byte_end":63382,"line_start":459,"line_end":459,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":63902,"byte_end":63914,"line_start":475,"line_end":475,"column_start":12,"column_end":24},"name":"resign_focus","qualname":"<EventCtx>::resign_focus","value":"pub fn resign_focus(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Give up focus.","sig":null,"attributes":[{"value":"/ Give up focus.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":63651,"byte_end":63669,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":63674,"byte_end":63677,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ This should only be called by a widget that currently has focus.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":63682,"byte_end":63750,"line_start":470,"line_end":470,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":63755,"byte_end":63758,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ See [`is_focused`] for more information about focus.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":63763,"byte_end":63819,"line_start":472,"line_end":472,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":63824,"byte_end":63827,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [`is_focused`]: struct.EventCtx.html#method.is_focused","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":63832,"byte_end":63890,"line_start":474,"line_end":474,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":64506,"byte_end":64520,"line_start":494,"line_end":494,"column_start":12,"column_end":26},"name":"register_child","qualname":"<LifeCycleCtx>::register_child","value":"pub fn register_child(&mut Self, WidgetId)","parent":null,"children":[],"decl_id":null,"docs":" Registers a child widget.","sig":null,"attributes":[{"value":"/ Registers a child widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":64262,"byte_end":64291,"line_start":488,"line_end":488,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":64296,"byte_end":64299,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ This should only be called in response to a `LifeCycle::WidgetAdded` event.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":64304,"byte_end":64383,"line_start":490,"line_end":490,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":64388,"byte_end":64391,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ In general, you should not need to call this method; it is handled by","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":64396,"byte_end":64469,"line_start":492,"line_end":492,"column_start":5,"column_end":78}},{"value":"/ the `WidgetPod`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":64474,"byte_end":64494,"line_start":493,"line_end":493,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":65027,"byte_end":65045,"line_start":506,"line_end":506,"column_start":12,"column_end":30},"name":"register_for_focus","qualname":"<LifeCycleCtx>::register_for_focus","value":"pub fn register_for_focus(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Register this widget to be eligile to accept focus automatically.","sig":null,"attributes":[{"value":"/ Register this widget to be eligile to accept focus automatically.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":64616,"byte_end":64685,"line_start":498,"line_end":498,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":64690,"byte_end":64693,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This should only be called in response to a [`LifeCycle::WidgetAdded`] event.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":64698,"byte_end":64779,"line_start":500,"line_end":500,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":64784,"byte_end":64787,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ See [`EventCtx::is_focused`] for more information about focus.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":64792,"byte_end":64858,"line_start":502,"line_end":502,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":64863,"byte_end":64866,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ [`LifeCycle::WidgetAdded`]: enum.Lifecycle.html#variant.WidgetAdded","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":64871,"byte_end":64942,"line_start":504,"line_end":504,"column_start":5,"column_end":76}},{"value":"/ [`EventCtx::is_focused`]: struct.EventCtx.html#method.is_focused","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":64947,"byte_end":65015,"line_start":505,"line_end":505,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":65699,"byte_end":65715,"line_start":523,"line_end":523,"column_start":12,"column_end":28},"name":"set_paint_insets","qualname":"<LayoutCtx>::set_paint_insets","value":"pub fn set_paint_insets<impl Into<Insets>: Into<Insets>>(&mut Self,\n                                                         impl Into<Insets>)","parent":null,"children":[],"decl_id":null,"docs":" Set explicit paint [`Insets`] for this widget.","sig":null,"attributes":[{"value":"/ Set explicit paint [`Insets`] for this widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":65159,"byte_end":65209,"line_start":512,"line_end":512,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":65214,"byte_end":65217,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ You are not required to set explicit paint bounds unless you need","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":65222,"byte_end":65291,"line_start":514,"line_end":514,"column_start":5,"column_end":74}},{"value":"/ to paint outside of your layout bounds. In this case, the argument","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":65296,"byte_end":65366,"line_start":515,"line_end":515,"column_start":5,"column_end":75}},{"value":"/ should be an [`Insets`] struct that indicates where your widget","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":65371,"byte_end":65438,"line_start":516,"line_end":516,"column_start":5,"column_end":72}},{"value":"/ needs to overpaint, relative to its bounds.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":65443,"byte_end":65490,"line_start":517,"line_end":517,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":65495,"byte_end":65498,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ For more information, see [`WidgetPod::paint_insets`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":65503,"byte_end":65561,"line_start":519,"line_end":519,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":65566,"byte_end":65569,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`Insets`]: struct.Insets.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":65574,"byte_end":65608,"line_start":521,"line_end":521,"column_start":5,"column_end":39}},{"value":"/ [`WidgetPod::paint_insets`]: struct.WidgetPod.html#method.paint_insets","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":65613,"byte_end":65687,"line_start":522,"line_end":522,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":66289,"byte_end":66294,"line_start":539,"line_end":539,"column_start":12,"column_end":17},"name":"depth","qualname":"<PaintCtx>::depth","value":"pub fn depth(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The depth in the tree of the currently painting widget.","sig":null,"attributes":[{"value":"/ The depth in the tree of the currently painting widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":65867,"byte_end":65926,"line_start":529,"line_end":529,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":65931,"byte_end":65934,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ This may be used in combination with [`paint_with_z_index`] in order","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":65939,"byte_end":66011,"line_start":531,"line_end":531,"column_start":5,"column_end":77}},{"value":"/ to correctly order painting operations.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":66016,"byte_end":66059,"line_start":532,"line_end":532,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":66064,"byte_end":66067,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ The `depth` here may not be exact; it is only guaranteed that a child will","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":66072,"byte_end":66150,"line_start":534,"line_end":534,"column_start":5,"column_end":83}},{"value":"/ have a greater depth than its parent.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":66155,"byte_end":66196,"line_start":535,"line_end":535,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":66201,"byte_end":66204,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ [`paint_with_z_index`]: #method.paint_with_z_index","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":66209,"byte_end":66263,"line_start":537,"line_end":537,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":66268,"byte_end":66277,"line_start":538,"line_end":538,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":66459,"byte_end":66465,"line_start":547,"line_end":547,"column_start":12,"column_end":18},"name":"region","qualname":"<PaintCtx>::region","value":"pub fn region(&Self) -> &Region","parent":null,"children":[],"decl_id":null,"docs":" Returns the currently visible [`Region`].","sig":null,"attributes":[{"value":"/ Returns the currently visible [`Region`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":66341,"byte_end":66386,"line_start":543,"line_end":543,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":66391,"byte_end":66394,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ [`Region`]: struct.Region.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":66399,"byte_end":66433,"line_start":545,"line_end":545,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":66438,"byte_end":66447,"line_start":546,"line_end":546,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":66786,"byte_end":66800,"line_start":556,"line_end":556,"column_start":12,"column_end":26},"name":"with_child_ctx","qualname":"<PaintCtx>::with_child_ctx","value":"pub fn with_child_ctx<impl Into<Region>: Into<Region>,\n                      impl FnOnce(&mut PaintCtx): FnOnce(&mut PaintCtx) ->\n                      ()>(&mut Self, impl Into<Region>,\n                          impl FnOnce(&mut PaintCtx))","parent":null,"children":[],"decl_id":null,"docs":" Creates a temporary `PaintCtx` with a new visible region, and calls\n the provided function with that `PaintCtx`.","sig":null,"attributes":[{"value":"/ Creates a temporary `PaintCtx` with a new visible region, and calls","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":66518,"byte_end":66589,"line_start":551,"line_end":551,"column_start":5,"column_end":76}},{"value":"/ the provided function with that `PaintCtx`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":66594,"byte_end":66641,"line_start":552,"line_end":552,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":66646,"byte_end":66649,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ This is used by containers to ensure that their children have the correct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":66654,"byte_end":66731,"line_start":554,"line_end":554,"column_start":5,"column_end":82}},{"value":"/ visible region given their layout.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":66736,"byte_end":66774,"line_start":555,"line_end":555,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67978,"byte_end":67987,"line_start":590,"line_end":590,"column_start":12,"column_end":21},"name":"with_save","qualname":"<PaintCtx>::with_save","value":"pub fn with_save<impl FnOnce(&mut PaintCtx): FnOnce(&mut PaintCtx) ->\n                 ()>(&mut Self, impl FnOnce(&mut PaintCtx))","parent":null,"children":[],"decl_id":null,"docs":" Saves the current context, executes the closures, and restores the context.","sig":null,"attributes":[{"value":"/ Saves the current context, executes the closures, and restores the context.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67227,"byte_end":67306,"line_start":569,"line_end":569,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67311,"byte_end":67314,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ This is useful if you would like to transform or clip or otherwise","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67319,"byte_end":67389,"line_start":571,"line_end":571,"column_start":5,"column_end":75}},{"value":"/ modify the drawing context but do not want that modification to","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67394,"byte_end":67461,"line_start":572,"line_end":572,"column_start":5,"column_end":72}},{"value":"/ effect other widgets.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67466,"byte_end":67491,"line_start":573,"line_end":573,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67496,"byte_end":67499,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67504,"byte_end":67518,"line_start":575,"line_end":575,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67523,"byte_end":67526,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67531,"byte_end":67538,"line_start":577,"line_end":577,"column_start":5,"column_end":12}},{"value":"/ # use druid::{Env, PaintCtx, RenderContext, theme};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67543,"byte_end":67598,"line_start":578,"line_end":578,"column_start":5,"column_end":60}},{"value":"/ # struct T;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67603,"byte_end":67618,"line_start":579,"line_end":579,"column_start":5,"column_end":20}},{"value":"/ # impl T {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67623,"byte_end":67637,"line_start":580,"line_end":580,"column_start":5,"column_end":19}},{"value":"/ fn paint(&mut self, ctx: &mut PaintCtx, _data: &T, env: &Env) {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67642,"byte_end":67709,"line_start":581,"line_end":581,"column_start":5,"column_end":72}},{"value":"/     let clip_rect = ctx.size().to_rect().inset(5.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67714,"byte_end":67770,"line_start":582,"line_end":582,"column_start":5,"column_end":61}},{"value":"/     ctx.with_save(|ctx| {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67775,"byte_end":67804,"line_start":583,"line_end":583,"column_start":5,"column_end":34}},{"value":"/         ctx.clip(clip_rect);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67809,"byte_end":67841,"line_start":584,"line_end":584,"column_start":5,"column_end":37}},{"value":"/         ctx.stroke(clip_rect, &env.get(theme::PRIMARY_DARK), 5.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67846,"byte_end":67916,"line_start":585,"line_end":585,"column_start":5,"column_end":75}},{"value":"/     });","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67921,"byte_end":67932,"line_start":586,"line_end":586,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67937,"byte_end":67942,"line_start":587,"line_end":587,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67947,"byte_end":67954,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":67959,"byte_end":67966,"line_start":589,"line_end":589,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":68483,"byte_end":68501,"line_start":606,"line_end":606,"column_start":12,"column_end":30},"name":"paint_with_z_index","qualname":"<PaintCtx>::paint_with_z_index","value":"pub fn paint_with_z_index<impl FnOnce(&mut PaintCtx) + 'static: FnOnce(&mut PaintCtx)\n                          -> () +\n                          'static>(&mut Self, u32,\n                                   impl FnOnce(&mut PaintCtx) + 'static)","parent":null,"children":[],"decl_id":null,"docs":" Allows to specify order for paint operations.","sig":null,"attributes":[{"value":"/ Allows to specify order for paint operations.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":68338,"byte_end":68387,"line_start":603,"line_end":603,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":68392,"byte_end":68395,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ Larger `z_index` indicate that an operation will be executed later.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":68400,"byte_end":68471,"line_start":605,"line_end":605,"column_start":5,"column_end":76}}]},{"kind":"Const","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":70324,"byte_end":70329,"line_start":666,"line_end":666,"column_start":15,"column_end":20},"name":"EMPTY","qualname":"::contexts::Region::EMPTY","value":"Region","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":" An empty region.\n","sig":null,"attributes":[{"value":"/ An empty region.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":70289,"byte_end":70309,"line_start":665,"line_end":665,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":70441,"byte_end":70448,"line_start":669,"line_end":669,"column_start":12,"column_end":19},"name":"to_rect","qualname":"<Region>::to_rect","value":"pub fn to_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest `Rect` that encloses the entire region.\n","sig":null,"attributes":[{"value":"/ Returns the smallest `Rect` that encloses the entire region.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":70365,"byte_end":70429,"line_start":668,"line_end":668,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":70571,"byte_end":70581,"line_start":675,"line_end":675,"column_start":12,"column_end":22},"name":"intersects","qualname":"<Region>::intersects","value":"pub fn intersects(&Self, Rect) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` intersects with `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` intersects with `other`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":70492,"byte_end":70545,"line_start":673,"line_end":673,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":70550,"byte_end":70559,"line_start":674,"line_end":674,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":70722,"byte_end":70730,"line_start":680,"line_end":680,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Region>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this region is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this region is empty.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":70667,"byte_end":70710,"line_start":679,"line_end":679,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":74315,"byte_end":74324,"line_start":50,"line_end":50,"column_start":12,"column_end":21},"name":"WidgetPod","qualname":"::core::WidgetPod","value":"WidgetPod {  }","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443}],"decl_id":null,"docs":" A container for one widget in the hierarchy.","sig":null,"attributes":[{"value":"/ A container for one widget in the hierarchy.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":73547,"byte_end":73595,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":73596,"byte_end":73599,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Generally, container widgets don't contain other widgets directly,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":73600,"byte_end":73670,"line_start":37,"line_end":37,"column_start":1,"column_end":71}},{"value":"/ but rather contain a `WidgetPod`, which has additional state needed","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":73671,"byte_end":73742,"line_start":38,"line_end":38,"column_start":1,"column_end":72}},{"value":"/ for layout and for the widget to participate in event flow.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":73743,"byte_end":73806,"line_start":39,"line_end":39,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":73807,"byte_end":73810,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ `WidgetPod` will translate internal druid events to regular events,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":73811,"byte_end":73882,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ synthesize additional events of interest, and stop propagation when it makes sense.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":73883,"byte_end":73970,"line_start":42,"line_end":42,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":73971,"byte_end":73974,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This struct also contains the previous data for a widget, which is","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":73975,"byte_end":74045,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/ essential for the [`update`] method, both to decide when the update","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":74046,"byte_end":74117,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/ needs to propagate, and to provide the previous data so that a","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":74118,"byte_end":74184,"line_start":46,"line_end":46,"column_start":1,"column_end":67}},{"value":"/ widget can process a diff between the old value and the new.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":74185,"byte_end":74249,"line_start":47,"line_end":47,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":74250,"byte_end":74253,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [`update`]: trait.Widget.html#tymethod.update","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":74254,"byte_end":74303,"line_start":49,"line_end":49,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":77582,"byte_end":77585,"line_start":138,"line_end":138,"column_start":12,"column_end":15},"name":"new","qualname":"<WidgetPod<T, W>>::new","value":"pub fn new(W) -> WidgetPod<T, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new widget pod.","sig":null,"attributes":[{"value":"/ Create a new widget pod.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":77322,"byte_end":77350,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":77355,"byte_end":77358,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ In a widget hierarchy, each widget is wrapped in a `WidgetPod`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":77363,"byte_end":77429,"line_start":135,"line_end":135,"column_start":5,"column_end":71}},{"value":"/ so it can participate in layout and event flow. The process of","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":77434,"byte_end":77500,"line_start":136,"line_end":136,"column_start":5,"column_end":71}},{"value":"/ adding a child widget to a container should call this method.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":77505,"byte_end":77570,"line_start":137,"line_end":137,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":78187,"byte_end":78196,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"is_active","qualname":"<WidgetPod<T, W>>::is_active","value":"pub fn is_active(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Query the \"active\" state of the widget.\n","sig":null,"attributes":[{"value":"/ Query the \"active\" state of the widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":78132,"byte_end":78175,"line_start":157,"line_end":157,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":78313,"byte_end":78323,"line_start":163,"line_end":163,"column_start":12,"column_end":22},"name":"has_active","qualname":"<WidgetPod<T, W>>::has_active","value":"pub fn has_active(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any descendant is active.\n","sig":null,"attributes":[{"value":"/ Returns `true` if any descendant is active.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":78254,"byte_end":78301,"line_start":162,"line_end":162,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":78547,"byte_end":78553,"line_start":171,"line_end":171,"column_start":12,"column_end":18},"name":"is_hot","qualname":"<WidgetPod<T, W>>::is_hot","value":"pub fn is_hot(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Query the \"hot\" state of the widget.","sig":null,"attributes":[{"value":"/ Query the \"hot\" state of the widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":78382,"byte_end":78422,"line_start":167,"line_end":167,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":78427,"byte_end":78430,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ See [`EventCtx::is_hot`](struct.EventCtx.html#method.is_hot) for","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":78435,"byte_end":78503,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ additional information.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":78508,"byte_end":78535,"line_start":170,"line_end":170,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":78663,"byte_end":78669,"line_start":176,"line_end":176,"column_start":12,"column_end":18},"name":"widget","qualname":"<WidgetPod<T, W>>::widget","value":"pub fn widget(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the inner widget.\n","sig":null,"attributes":[{"value":"/ Return a reference to the inner widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":78608,"byte_end":78651,"line_start":175,"line_end":175,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":78779,"byte_end":78789,"line_start":181,"line_end":181,"column_start":12,"column_end":22},"name":"widget_mut","qualname":"<WidgetPod<T, W>>::widget_mut","value":"pub fn widget_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the inner widget.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the inner widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":78716,"byte_end":78767,"line_start":180,"line_end":180,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":78895,"byte_end":78897,"line_start":186,"line_end":186,"column_start":12,"column_end":14},"name":"id","qualname":"<WidgetPod<T, W>>::id","value":"pub fn id(&Self) -> WidgetId","parent":null,"children":[],"decl_id":null,"docs":" Get the identity of the widget.\n","sig":null,"attributes":[{"value":"/ Get the identity of the widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":78848,"byte_end":78883,"line_start":185,"line_end":185,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":79594,"byte_end":79609,"line_start":202,"line_end":202,"column_start":12,"column_end":27},"name":"set_layout_rect","qualname":"<WidgetPod<T, W>>::set_layout_rect","value":"pub fn set_layout_rect(&mut Self, &mut LayoutCtx, &T, &Env, Rect)","parent":null,"children":[],"decl_id":null,"docs":" Set the layout [`Rect`].","sig":null,"attributes":[{"value":"/ Set the layout [`Rect`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":78952,"byte_end":78980,"line_start":190,"line_end":190,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":78985,"byte_end":78988,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ A container widget should call the [`Widget::layout`] method on its children in","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":78993,"byte_end":79076,"line_start":192,"line_end":192,"column_start":5,"column_end":88}},{"value":"/ its own [`Widget::layout`] implementation, then possibly modify the returned [`Size`], and","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":79081,"byte_end":79175,"line_start":193,"line_end":193,"column_start":5,"column_end":99}},{"value":"/ finally call this `set_layout_rect` method on the child to set the final layout [`Rect`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":79180,"byte_end":79273,"line_start":194,"line_end":194,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":79278,"byte_end":79281,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ The child will receive the [`LifeCycle::Size`] event informing them of the final [`Size`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":79286,"byte_end":79380,"line_start":196,"line_end":196,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":79385,"byte_end":79388,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [`Widget::layout`]: trait.Widget.html#tymethod.layout","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":79393,"byte_end":79450,"line_start":198,"line_end":198,"column_start":5,"column_end":62}},{"value":"/ [`Rect`]: struct.Rect.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":79455,"byte_end":79485,"line_start":199,"line_end":199,"column_start":5,"column_end":35}},{"value":"/ [`Size`]: struct.Size.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":79490,"byte_end":79520,"line_start":200,"line_end":200,"column_start":5,"column_end":35}},{"value":"/ [`LifeCycle::Size`]: enum.LifeCycle.html#variant.Size","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":79525,"byte_end":79582,"line_start":201,"line_end":201,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":80724,"byte_end":80739,"line_start":239,"line_end":239,"column_start":12,"column_end":27},"name":"get_layout_rect","qualname":"<WidgetPod<T, W>>::get_layout_rect","value":"pub fn get_layout_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.5.0\", note = \"use layout_rect() instead\")","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":80627,"byte_end":80693,"line_start":237,"line_end":237,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":81019,"byte_end":81030,"line_start":249,"line_end":249,"column_start":12,"column_end":23},"name":"layout_rect","qualname":"<WidgetPod<T, W>>::layout_rect","value":"pub fn layout_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns the layout [`Rect`].","sig":null,"attributes":[{"value":"/ Returns the layout [`Rect`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":80795,"byte_end":80827,"line_start":243,"line_end":243,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":80832,"byte_end":80835,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This will be the same [`Rect`] that was set by [`set_layout_rect`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":80840,"byte_end":80911,"line_start":245,"line_end":245,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":80916,"byte_end":80919,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ [`Rect`]: struct.Rect.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":80924,"byte_end":80954,"line_start":247,"line_end":247,"column_start":5,"column_end":35}},{"value":"/ [`set_layout_rect`]: #method.set_layout_rect","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":80959,"byte_end":81007,"line_start":248,"line_end":248,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":81614,"byte_end":81633,"line_start":262,"line_end":262,"column_start":12,"column_end":31},"name":"set_viewport_offset","qualname":"<WidgetPod<T, W>>::set_viewport_offset","value":"pub fn set_viewport_offset(&mut Self, Vec2)","parent":null,"children":[],"decl_id":null,"docs":" Set the viewport offset.","sig":null,"attributes":[{"value":"/ Set the viewport offset.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":81110,"byte_end":81138,"line_start":253,"line_end":253,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":81143,"byte_end":81146,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This is relevant only for children of a scroll view (or similar). It must","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":81151,"byte_end":81228,"line_start":255,"line_end":255,"column_start":5,"column_end":82}},{"value":"/ be set by the parent widget whenever it modifies the position of its child","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":81233,"byte_end":81311,"line_start":256,"line_end":256,"column_start":5,"column_end":83}},{"value":"/ while painting it and propagating events. As a rule of thumb, you need this","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":81316,"byte_end":81395,"line_start":257,"line_end":257,"column_start":5,"column_end":84}},{"value":"/ if and only if you `Affine::translate` the paint context before painting","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":81400,"byte_end":81476,"line_start":258,"line_end":258,"column_start":5,"column_end":81}},{"value":"/ your child. For an example, see the implentation of [`Scroll`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":81481,"byte_end":81548,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":81553,"byte_end":81556,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ [`Scroll`]: widget/struct.Scroll.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":81561,"byte_end":81602,"line_start":261,"line_end":261,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":81897,"byte_end":81912,"line_start":271,"line_end":271,"column_start":12,"column_end":27},"name":"viewport_offset","qualname":"<WidgetPod<T, W>>::viewport_offset","value":"pub fn viewport_offset(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" The viewport offset.","sig":null,"attributes":[{"value":"/ The viewport offset.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":81717,"byte_end":81741,"line_start":266,"line_end":266,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":81746,"byte_end":81749,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This will be the same value as set by [`set_viewport_offset`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":81754,"byte_end":81820,"line_start":268,"line_end":268,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":81825,"byte_end":81828,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ [`set_viewport_offset`]: #method.viewport_offset","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":81833,"byte_end":81885,"line_start":270,"line_end":270,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82394,"byte_end":82404,"line_start":284,"line_end":284,"column_start":12,"column_end":22},"name":"paint_rect","qualname":"<WidgetPod<T, W>>::paint_rect","value":"pub fn paint_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Get the widget's paint [`Rect`].","sig":null,"attributes":[{"value":"/ Get the widget's paint [`Rect`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":81976,"byte_end":82012,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82017,"byte_end":82020,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This is the [`Rect`] that widget has indicated it needs to paint in.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82025,"byte_end":82097,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ This is the same as the [`layout_rect`] with the [`paint_insets`] applied;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82102,"byte_end":82180,"line_start":278,"line_end":278,"column_start":5,"column_end":83}},{"value":"/ in the general case it is the same as the [`layout_rect`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82185,"byte_end":82247,"line_start":279,"line_end":279,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82252,"byte_end":82255,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ [`layout_rect`]: #method.layout_rect","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82260,"byte_end":82300,"line_start":281,"line_end":281,"column_start":5,"column_end":45}},{"value":"/ [`Rect`]: struct.Rect.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82305,"byte_end":82335,"line_start":282,"line_end":282,"column_start":5,"column_end":35}},{"value":"/ [`paint_insets`]: #method.paint_insets","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82340,"byte_end":82382,"line_start":283,"line_end":283,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":83065,"byte_end":83077,"line_start":302,"line_end":302,"column_start":12,"column_end":24},"name":"paint_insets","qualname":"<WidgetPod<T, W>>::paint_insets","value":"pub fn paint_insets(&Self) -> Insets","parent":null,"children":[],"decl_id":null,"docs":" Return the paint [`Insets`] for this widget.","sig":null,"attributes":[{"value":"/ Return the paint [`Insets`] for this widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82465,"byte_end":82513,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82518,"byte_end":82521,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ If these [`Insets`] are nonzero, they describe the area beyond a widget's","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82526,"byte_end":82603,"line_start":290,"line_end":290,"column_start":5,"column_end":82}},{"value":"/ layout rect where it needs to paint.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82608,"byte_end":82648,"line_start":291,"line_end":291,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82653,"byte_end":82656,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ These are generally zero; exceptions are widgets that do things like","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82661,"byte_end":82733,"line_start":293,"line_end":293,"column_start":5,"column_end":77}},{"value":"/ paint a drop shadow.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82738,"byte_end":82762,"line_start":294,"line_end":294,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82767,"byte_end":82770,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ A widget can set its insets by calling [`set_paint_insets`] during its","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82775,"byte_end":82849,"line_start":296,"line_end":296,"column_start":5,"column_end":79}},{"value":"/ [`layout`] method.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82854,"byte_end":82876,"line_start":297,"line_end":297,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82881,"byte_end":82884,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ [`Insets`]: struct.Insets.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82889,"byte_end":82923,"line_start":299,"line_end":299,"column_start":5,"column_end":39}},{"value":"/ [`set_paint_insets`]: struct.LayoutCtx.html#method.set_paint_insets","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":82928,"byte_end":82999,"line_start":300,"line_end":300,"column_start":5,"column_end":76}},{"value":"/ [`layout`]: trait.Widget.html#tymethod.layout","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":83004,"byte_end":83053,"line_start":301,"line_end":301,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":83628,"byte_end":83655,"line_start":316,"line_end":316,"column_start":12,"column_end":39},"name":"compute_parent_paint_insets","qualname":"<WidgetPod<T, W>>::compute_parent_paint_insets","value":"pub fn compute_parent_paint_insets(&Self, Size) -> Insets","parent":null,"children":[],"decl_id":null,"docs":" Given a parents layout size, determine the appropriate paint `Insets`\n for the parent.","sig":null,"attributes":[{"value":"/ Given a parents layout size, determine the appropriate paint `Insets`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":83140,"byte_end":83213,"line_start":306,"line_end":306,"column_start":5,"column_end":78}},{"value":"/ for the parent.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":83218,"byte_end":83237,"line_start":307,"line_end":307,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":83242,"byte_end":83245,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method to be used from the [`layout`] method","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":83250,"byte_end":83320,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ of a `Widget` that manages a child; it allows the parent to correctly","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":83325,"byte_end":83398,"line_start":310,"line_end":310,"column_start":5,"column_end":78}},{"value":"/ propogate a child's desired paint rect, if it extends beyond the bounds","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":83403,"byte_end":83478,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ of the parent's layout rect.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":83483,"byte_end":83515,"line_start":312,"line_end":312,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":83520,"byte_end":83523,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ [`layout`]: trait.Widget.html#tymethod.layout","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":83528,"byte_end":83577,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/ [`Insets`]: struct.Insets.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":83582,"byte_end":83616,"line_start":315,"line_end":315,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":85603,"byte_end":85612,"line_start":371,"line_end":371,"column_start":12,"column_end":21},"name":"paint_raw","qualname":"<WidgetPod<T, W>>::paint_raw","value":"pub fn paint_raw(&mut Self, &mut PaintCtx, &T, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Paint a child widget.","sig":null,"attributes":[{"value":"/ Paint a child widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":85171,"byte_end":85196,"line_start":360,"line_end":360,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":85201,"byte_end":85204,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Generally called by container widgets as part of their [`Widget::paint`]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":85209,"byte_end":85285,"line_start":362,"line_end":362,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":85290,"byte_end":85301,"line_start":363,"line_end":363,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":85306,"byte_end":85309,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Note that this method does not apply the offset of the layout rect.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":85314,"byte_end":85385,"line_start":365,"line_end":365,"column_start":5,"column_end":76}},{"value":"/ If that is desired, use [`paint`] instead.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":85390,"byte_end":85436,"line_start":366,"line_end":366,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":85441,"byte_end":85444,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ [`layout`]: trait.Widget.html#tymethod.layout","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":85449,"byte_end":85498,"line_start":368,"line_end":368,"column_start":5,"column_end":54}},{"value":"/ [`Widget::paint`]: trait.Widget.html#tymethod.paint","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":85503,"byte_end":85558,"line_start":369,"line_end":369,"column_start":5,"column_end":60}},{"value":"/ [`paint`]: #method.paint","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":85563,"byte_end":85591,"line_start":370,"line_end":370,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":86844,"byte_end":86849,"line_start":405,"line_end":405,"column_start":12,"column_end":17},"name":"paint","qualname":"<WidgetPod<T, W>>::paint","value":"pub fn paint(&mut Self, &mut PaintCtx, &T, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Paint the widget, translating it by the origin of its layout rectangle.","sig":null,"attributes":[{"value":"/ Paint the widget, translating it by the origin of its layout rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":86617,"byte_end":86692,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":86697,"byte_end":86700,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ This will recursively paint widgets, stopping if a widget's layout","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":86705,"byte_end":86775,"line_start":403,"line_end":403,"column_start":5,"column_end":75}},{"value":"/ rect is outside of the currently visible region.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":86780,"byte_end":86832,"line_start":404,"line_end":404,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":87071,"byte_end":87083,"line_start":411,"line_end":411,"column_start":12,"column_end":24},"name":"paint_always","qualname":"<WidgetPod<T, W>>::paint_always","value":"pub fn paint_always(&mut Self, &mut PaintCtx, &T, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Paint the widget, even if its layout rect is outside of the currently\n visible region.\n","sig":null,"attributes":[{"value":"/ Paint the widget, even if its layout rect is outside of the currently","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":86962,"byte_end":87035,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ visible region.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":87040,"byte_end":87059,"line_start":410,"line_end":410,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":90129,"byte_end":90135,"line_start":487,"line_end":487,"column_start":12,"column_end":18},"name":"layout","qualname":"<WidgetPod<T, W>>::layout","value":"pub fn layout(&mut Self, &mut LayoutCtx, &BoxConstraints, &T, &Env) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Compute layout of a widget.","sig":null,"attributes":[{"value":"/ Compute layout of a widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":89926,"byte_end":89957,"line_start":481,"line_end":481,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":89962,"byte_end":89965,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ Generally called by container widgets as part of their [`layout`]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":89970,"byte_end":90039,"line_start":483,"line_end":483,"column_start":5,"column_end":74}},{"value":"/ method.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":90044,"byte_end":90055,"line_start":484,"line_end":484,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":90060,"byte_end":90063,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ [`layout`]: trait.Widget.html#tymethod.layout","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":90068,"byte_end":90117,"line_start":486,"line_end":486,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":91478,"byte_end":91483,"line_start":528,"line_end":528,"column_start":12,"column_end":17},"name":"event","qualname":"<WidgetPod<T, W>>::event","value":"pub fn event(&mut Self, &mut EventCtx, &Event, &mut T, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Propagate an event.","sig":null,"attributes":[{"value":"/ Propagate an event.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":91131,"byte_end":91154,"line_start":520,"line_end":520,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":91159,"byte_end":91162,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ Generally the [`event`] method of a container widget will call this","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":91167,"byte_end":91238,"line_start":522,"line_end":522,"column_start":5,"column_end":76}},{"value":"/ method on all its children. Here is where a great deal of the event","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":91243,"byte_end":91314,"line_start":523,"line_end":523,"column_start":5,"column_end":76}},{"value":"/ flow logic resides, particularly whether to continue propagating","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":91319,"byte_end":91387,"line_start":524,"line_end":524,"column_start":5,"column_end":73}},{"value":"/ the event.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":91392,"byte_end":91406,"line_start":525,"line_end":525,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":91411,"byte_end":91414,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ [`event`]: trait.Widget.html#tymethod.event","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":91419,"byte_end":91466,"line_start":527,"line_end":527,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":99277,"byte_end":99286,"line_start":722,"line_end":722,"column_start":12,"column_end":21},"name":"lifecycle","qualname":"<WidgetPod<T, W>>::lifecycle","value":"pub fn lifecycle(&mut Self, &mut LifeCycleCtx, &LifeCycle, &T, &Env)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":104429,"byte_end":104435,"line_start":846,"line_end":846,"column_start":12,"column_end":18},"name":"update","qualname":"<WidgetPod<T, W>>::update","value":"pub fn update(&mut Self, &mut UpdateCtx, &T, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Propagate a data update.","sig":null,"attributes":[{"value":"/ Propagate a data update.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":104229,"byte_end":104257,"line_start":840,"line_end":840,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":104262,"byte_end":104265,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ Generally called by container widgets as part of their [`update`]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":104270,"byte_end":104339,"line_start":842,"line_end":842,"column_start":5,"column_end":74}},{"value":"/ method.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":104344,"byte_end":104355,"line_start":843,"line_end":843,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":104360,"byte_end":104363,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ [`update`]: trait.Widget.html#tymethod.update","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":104368,"byte_end":104417,"line_start":845,"line_end":845,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":105493,"byte_end":105498,"line_start":877,"line_end":877,"column_start":12,"column_end":17},"name":"boxed","qualname":"<WidgetPod<T, W>>::boxed","value":"pub fn boxed(Self) -> WidgetPod<T, Box<Widget<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Box the contained widget.","sig":null,"attributes":[{"value":"/ Box the contained widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":105325,"byte_end":105354,"line_start":873,"line_end":873,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":105359,"byte_end":105362,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ Convert a `WidgetPod` containing a widget of a specific concrete type","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":105367,"byte_end":105440,"line_start":875,"line_end":875,"column_start":5,"column_end":78}},{"value":"/ into a dynamically boxed widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":105445,"byte_end":105481,"line_start":876,"line_end":876,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":113150,"byte_end":113154,"line_start":106,"line_end":106,"column_start":11,"column_end":15},"name":"Data","qualname":"::data::Data","value":"Data: Clone + 'static","parent":null,"children":[{"krate":0,"index":504}],"decl_id":null,"docs":" A trait used to represent value types.","sig":null,"attributes":[{"value":"/ A trait used to represent value types.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":110509,"byte_end":110551,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":110552,"byte_end":110555,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ These should be cheap to compare and cheap to clone.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":110556,"byte_end":110612,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":110613,"byte_end":110616,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ See <https://sinusoid.es/lager/model.html#id2> for a well-written","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":110617,"byte_end":110686,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ explanation of value types (albeit within a C++ context).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":110687,"byte_end":110748,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":110749,"byte_end":110752,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ## Derive macro","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":110753,"byte_end":110772,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":110773,"byte_end":110776,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ In general, you can use `derive` to generate a `Data` impl for your types.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":110777,"byte_end":110855,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":110856,"byte_end":110859,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":110860,"byte_end":110867,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":110868,"byte_end":110893,"line_start":38,"line_end":38,"column_start":1,"column_end":26}},{"value":"/ # use druid::Data;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":110894,"byte_end":110916,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/ #[derive(Clone, Data)]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":110917,"byte_end":110943,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ enum Foo {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":110944,"byte_end":110958,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/     Case1(i32, f32),","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":110959,"byte_end":110983,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/     Case2 { a: String, b: Arc<i32> }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":110984,"byte_end":111024,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111025,"byte_end":111030,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111031,"byte_end":111038,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111039,"byte_end":111042,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ### Derive macro attributes","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111043,"byte_end":111074,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111075,"byte_end":111078,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ There are a number of field attributes available for use with `derive(Data)`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111079,"byte_end":111160,"line_start":49,"line_end":49,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111161,"byte_end":111164,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ - **`#[data(ignore)]`**","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111165,"byte_end":111192,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111193,"byte_end":111196,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Skip this field when computing `same`ness.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111197,"byte_end":111243,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111244,"byte_end":111247,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ If the type you are implementing `Data` on contains some fields that are","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111248,"byte_end":111324,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ not relevant to the `Data` impl, you can ignore them with this attribute.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111325,"byte_end":111402,"line_start":56,"line_end":56,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111403,"byte_end":111406,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ - **`#[data(same_fn = \"path\")]`**","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111407,"byte_end":111444,"line_start":58,"line_end":58,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111445,"byte_end":111448,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Use a specific function to compute `same`ness.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111449,"byte_end":111499,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111500,"byte_end":111503,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ By default, derived implementations of `Data` just call [`Data::same`]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111504,"byte_end":111578,"line_start":62,"line_end":62,"column_start":1,"column_end":75}},{"value":"/ recursively on each field. With this attribute, you can specify a","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111579,"byte_end":111648,"line_start":63,"line_end":63,"column_start":1,"column_end":70}},{"value":"/ custom function that will be used instead.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111649,"byte_end":111695,"line_start":64,"line_end":64,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111696,"byte_end":111699,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This function must have a signature in the form, `fn<T>(&T, &T) -> bool`,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111700,"byte_end":111777,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/ where `T` is the type of the field.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111778,"byte_end":111817,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111818,"byte_end":111821,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ## Collection types","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111822,"byte_end":111845,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111846,"byte_end":111849,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ `Data` is not implemented for `std` collection types, because comparing them","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111850,"byte_end":111930,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/ can be expensive. To use collection types with druid, there are two easy options:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":111931,"byte_end":112016,"line_start":72,"line_end":72,"column_start":1,"column_end":86}},{"value":"/ either wrap the collection in an `Arc`, or build druid with the `im` feature,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112017,"byte_end":112098,"line_start":73,"line_end":73,"column_start":1,"column_end":82}},{"value":"/ which adds `Data` implementations to the collections from the [`im` crate],","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112099,"byte_end":112178,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ a set of immutable data structures that fit nicely with druid.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112179,"byte_end":112245,"line_start":75,"line_end":75,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112246,"byte_end":112249,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ If the `im` feature is used, the `im` crate is reexported from the root","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112250,"byte_end":112325,"line_start":77,"line_end":77,"column_start":1,"column_end":76}},{"value":"/ of the druid crate.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112326,"byte_end":112349,"line_start":78,"line_end":78,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112350,"byte_end":112353,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ### Example:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112354,"byte_end":112370,"line_start":80,"line_end":80,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112371,"byte_end":112374,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112375,"byte_end":112382,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ # use std::path::PathBuf;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112383,"byte_end":112412,"line_start":83,"line_end":83,"column_start":1,"column_end":30}},{"value":"/ # use std::time::Instant;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112413,"byte_end":112442,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/ # use druid::Data;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112443,"byte_end":112465,"line_start":85,"line_end":85,"column_start":1,"column_end":23}},{"value":"/ #[derive(Clone, Data)]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112466,"byte_end":112492,"line_start":86,"line_end":86,"column_start":1,"column_end":27}},{"value":"/ struct PathEntry {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112493,"byte_end":112515,"line_start":87,"line_end":87,"column_start":1,"column_end":23}},{"value":"/     // There's no Data impl for PathBuf, but no problem","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112516,"byte_end":112575,"line_start":88,"line_end":88,"column_start":1,"column_end":60}},{"value":"/     #[data(same_fn = \"PartialEq::eq\")]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112576,"byte_end":112618,"line_start":89,"line_end":89,"column_start":1,"column_end":43}},{"value":"/     path: PathBuf,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112619,"byte_end":112641,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/     priority: usize,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112642,"byte_end":112666,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"/     // This field is not part of our data model.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112667,"byte_end":112719,"line_start":92,"line_end":92,"column_start":1,"column_end":53}},{"value":"/     #[data(ignore)]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112720,"byte_end":112743,"line_start":93,"line_end":93,"column_start":1,"column_end":24}},{"value":"/     last_read: Instant,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112744,"byte_end":112771,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112772,"byte_end":112777,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112778,"byte_end":112785,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112786,"byte_end":112789,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ## C-style enums","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112790,"byte_end":112810,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112811,"byte_end":112814,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ In the case of a \"c-style\" enum (one that only contains unit variants,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112815,"byte_end":112889,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ that is where no variant has fields), the implementation that is generated","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112890,"byte_end":112968,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/ checks for equality. Therefore, such types must also implement `PartialEq`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":112969,"byte_end":113048,"line_start":102,"line_end":102,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":113049,"byte_end":113052,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ [`Data::same`]: trait.Data.html#tymethod.same","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":113053,"byte_end":113102,"line_start":104,"line_end":104,"column_start":1,"column_end":50}},{"value":"/ [`im` crate]: https://docs.rs/im","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":113103,"byte_end":113139,"line_start":105,"line_end":105,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":113746,"byte_end":113750,"line_start":118,"line_end":118,"column_start":8,"column_end":12},"name":"same","qualname":"::data::Data::same","value":"pub fn same(&Self, &Self) -> bool","parent":{"krate":0,"index":503},"children":[],"decl_id":null,"docs":" Determine whether two values are the same.","sig":null,"attributes":[{"value":"/ Determine whether two values are the same.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":113203,"byte_end":113249,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":113254,"byte_end":113257,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This is intended to always be a fast operation. If it returns","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":113262,"byte_end":113327,"line_start":110,"line_end":110,"column_start":5,"column_end":70}},{"value":"/ `true`, the two values *must* be equal, but two equal values","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":113332,"byte_end":113396,"line_start":111,"line_end":111,"column_start":5,"column_end":69}},{"value":"/ need not be considered the same here, as will often be the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":113401,"byte_end":113463,"line_start":112,"line_end":112,"column_start":5,"column_end":67}},{"value":"/ case when two copies are separately allocated.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":113468,"byte_end":113518,"line_start":113,"line_end":113,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":113523,"byte_end":113526,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Note that \"equal\" above has a slightly different meaning than","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":113531,"byte_end":113596,"line_start":115,"line_end":115,"column_start":5,"column_end":70}},{"value":"/ `PartialEq`, for example two floating point NaN values should","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":113601,"byte_end":113666,"line_start":116,"line_end":116,"column_start":5,"column_end":70}},{"value":"/ be considered equal when they have the same bit representation.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":113671,"byte_end":113738,"line_start":117,"line_end":117,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3550},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124968,"byte_end":124971,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"Env","qualname":"::env::Env","value":"","parent":null,"children":[],"decl_id":null,"docs":" An environment passed down through all widget traversals.","sig":null,"attributes":[{"value":"/ An environment passed down through all widget traversals.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":123983,"byte_end":124044,"line_start":28,"line_end":28,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124045,"byte_end":124048,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ All widget methods have access to an environment, and it is passed","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124049,"byte_end":124119,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ downwards during traversals.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124120,"byte_end":124152,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124153,"byte_end":124156,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ A widget can retrieve theme parameters (colors, dimensions, etc.). In","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124157,"byte_end":124230,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ addition, it can pass custom data down to all descendants. An important","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124231,"byte_end":124306,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ example of the latter is setting a value for enabled/disabled status","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124307,"byte_end":124379,"line_start":35,"line_end":35,"column_start":1,"column_end":73}},{"value":"/ so that an entire subtree can be disabled (\"grayed out\") with one","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124380,"byte_end":124449,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124450,"byte_end":124462,"line_start":37,"line_end":37,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124463,"byte_end":124466,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`EnvScope`] can be used to override parts of `Env` for its descendants.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124467,"byte_end":124543,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124544,"byte_end":124547,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Important","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124548,"byte_end":124563,"line_start":41,"line_end":41,"column_start":1,"column_end":16}},{"value":"/ It is the programmer's responsibility to ensure that the environment","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124564,"byte_end":124636,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ is used correctly. See [`Key`] for an example.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124637,"byte_end":124687,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/ - [`Key`]s should be `const`s with unique names","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124688,"byte_end":124739,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ - [`Key`]s must always be set before they are used.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124740,"byte_end":124795,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/ - Values can only be overwritten by values of the same type.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124796,"byte_end":124860,"line_start":46,"line_end":46,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124861,"byte_end":124864,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`EnvScope`]: widget/struct.EnvScope.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124865,"byte_end":124910,"line_start":48,"line_end":48,"column_start":1,"column_end":46}},{"value":"/ [`Key`]: struct.Key.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":124911,"byte_end":124939,"line_start":49,"line_end":49,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126060,"byte_end":126063,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"Key","qualname":"::env::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619}],"decl_id":null,"docs":" A typed [`Env`] key.","sig":null,"attributes":[{"value":"/ A typed [`Env`] key.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125116,"byte_end":125140,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125141,"byte_end":125144,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ This lets you retrieve values of a given type. The parameter","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125145,"byte_end":125209,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ implements [`ValueType`]. For \"expensive\" types, this is a reference,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125210,"byte_end":125283,"line_start":63,"line_end":63,"column_start":1,"column_end":74}},{"value":"/ so the type for a string is `Key<&str>`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125284,"byte_end":125328,"line_start":64,"line_end":64,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125329,"byte_end":125332,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125333,"byte_end":125347,"line_start":66,"line_end":66,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125348,"byte_end":125351,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125352,"byte_end":125359,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/# use druid::{Key, Color, WindowDesc, AppLauncher, widget::Label};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125360,"byte_end":125429,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/ const IMPORTANT_LABEL_COLOR: Key<Color> = Key::new(\"my-app.important-label-color\");","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125430,"byte_end":125517,"line_start":70,"line_end":70,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125518,"byte_end":125521,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn important_label() -> Label<()> {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125522,"byte_end":125561,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/     Label::new(\"Warning!\").with_text_color(IMPORTANT_LABEL_COLOR)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125562,"byte_end":125631,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125632,"byte_end":125637,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125638,"byte_end":125641,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125642,"byte_end":125657,"line_start":76,"line_end":76,"column_start":1,"column_end":16}},{"value":"/     let main_window = WindowDesc::new(important_label);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125658,"byte_end":125717,"line_start":77,"line_end":77,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125718,"byte_end":125721,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     AppLauncher::with_window(main_window)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125722,"byte_end":125767,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/         .configure_env(|env, _state| {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125768,"byte_end":125810,"line_start":80,"line_end":80,"column_start":1,"column_end":43}},{"value":"/             // The `Key` must be set before it is used.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125811,"byte_end":125870,"line_start":81,"line_end":81,"column_start":1,"column_end":60}},{"value":"/             env.set(IMPORTANT_LABEL_COLOR, Color::rgb(1.0, 0.0, 0.0));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125871,"byte_end":125945,"line_start":82,"line_end":82,"column_start":1,"column_end":75}},{"value":"/         });","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125946,"byte_end":125961,"line_start":83,"line_end":83,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125962,"byte_end":125967,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125968,"byte_end":125975,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125976,"byte_end":125979,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [`ValueType`]: trait.ValueType.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":125980,"byte_end":126019,"line_start":87,"line_end":87,"column_start":1,"column_end":40}},{"value":"/ [`Env`]: struct.Env.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126020,"byte_end":126048,"line_start":88,"line_end":88,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3562},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126447,"byte_end":126452,"line_start":101,"line_end":101,"column_start":5,"column_end":10},"name":"Point","qualname":"::env::Value::Point","value":"Value::Point(Point)","parent":{"krate":0,"index":3561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3565},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126465,"byte_end":126469,"line_start":102,"line_end":102,"column_start":5,"column_end":9},"name":"Size","qualname":"::env::Value::Size","value":"Value::Size(Size)","parent":{"krate":0,"index":3561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3568},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126481,"byte_end":126485,"line_start":103,"line_end":103,"column_start":5,"column_end":9},"name":"Rect","qualname":"::env::Value::Rect","value":"Value::Rect(Rect)","parent":{"krate":0,"index":3561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3571},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126497,"byte_end":126502,"line_start":104,"line_end":104,"column_start":5,"column_end":10},"name":"Color","qualname":"::env::Value::Color","value":"Value::Color(Color)","parent":{"krate":0,"index":3561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3574},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126515,"byte_end":126520,"line_start":105,"line_end":105,"column_start":5,"column_end":10},"name":"Float","qualname":"::env::Value::Float","value":"Value::Float(f64)","parent":{"krate":0,"index":3561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3577},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126531,"byte_end":126535,"line_start":106,"line_end":106,"column_start":5,"column_end":9},"name":"Bool","qualname":"::env::Value::Bool","value":"Value::Bool(bool)","parent":{"krate":0,"index":3561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3580},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126547,"byte_end":126558,"line_start":107,"line_end":107,"column_start":5,"column_end":16},"name":"UnsignedInt","qualname":"::env::Value::UnsignedInt","value":"Value::UnsignedInt(u64)","parent":{"krate":0,"index":3561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3583},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126569,"byte_end":126575,"line_start":108,"line_end":108,"column_start":5,"column_end":11},"name":"String","qualname":"::env::Value::String","value":"Value::String(String)","parent":{"krate":0,"index":3561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3561},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126435,"byte_end":126440,"line_start":100,"line_end":100,"column_start":10,"column_end":15},"name":"Value","qualname":"::env::Value","value":"pub enum Value {\n    Point(Point),\n    Size(Size),\n    Rect(Rect),\n    Color(Color),\n    Float(f64),\n    Bool(bool),\n    UnsignedInt(u64),\n    String(String),\n}","parent":null,"children":[{"krate":0,"index":3562},{"krate":0,"index":3565},{"krate":0,"index":3568},{"krate":0,"index":3571},{"krate":0,"index":3574},{"krate":0,"index":3577},{"krate":0,"index":3580},{"krate":0,"index":3583}],"decl_id":null,"docs":" A dynamic type representing all values that can be stored in an environment.\n","sig":null,"attributes":[{"value":"/ A dynamic type representing all values that can be stored in an environment.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126306,"byte_end":126386,"line_start":97,"line_end":97,"column_start":1,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126927,"byte_end":126935,"line_start":120,"line_end":120,"column_start":5,"column_end":13},"name":"Concrete","qualname":"::env::KeyOrValue::Concrete","value":"KeyOrValue::Concrete(Value)","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":625},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126948,"byte_end":126951,"line_start":121,"line_end":121,"column_start":5,"column_end":8},"name":"Key","qualname":"::env::KeyOrValue::Key","value":"KeyOrValue::Key(Key<T>)","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126907,"byte_end":126917,"line_start":119,"line_end":119,"column_start":10,"column_end":20},"name":"KeyOrValue","qualname":"::env::KeyOrValue","value":"pub enum KeyOrValue<T> { Concrete(Value), Key(Key<T>), }","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":625}],"decl_id":null,"docs":" Either a concrete `T` or a [`Key<T>`] that can be resolved in the [`Env`].","sig":null,"attributes":[{"value":"/ Either a concrete `T` or a [`Key<T>`] that can be resolved in the [`Env`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126614,"byte_end":126692,"line_start":112,"line_end":112,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126693,"byte_end":126696,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This is a way to allow widgets to interchangeably use either a specific","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126697,"byte_end":126772,"line_start":114,"line_end":114,"column_start":1,"column_end":76}},{"value":"/ value or a value from the environment for some purpose.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126773,"byte_end":126832,"line_start":115,"line_end":115,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126833,"byte_end":126836,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [`Key<T>`]: struct.Key.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126837,"byte_end":126868,"line_start":117,"line_end":117,"column_start":1,"column_end":32}},{"value":"/ [`Env`]: struct.Env.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126869,"byte_end":126897,"line_start":118,"line_end":118,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":127256,"byte_end":127265,"line_start":130,"line_end":130,"column_start":11,"column_end":20},"name":"ValueType","qualname":"::env::ValueType","value":"ValueType<'a>: Sized","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631}],"decl_id":null,"docs":" Values which can be stored in an environment.","sig":null,"attributes":[{"value":"/ Values which can be stored in an environment.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":126964,"byte_end":127013,"line_start":124,"line_end":124,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":127014,"byte_end":127017,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Note that for \"expensive\" types this is the reference. For example,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":127018,"byte_end":127089,"line_start":126,"line_end":126,"column_start":1,"column_end":72}},{"value":"/ for strings, this trait is implemented on `&'a str`. The trait is","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":127090,"byte_end":127159,"line_start":127,"line_end":127,"column_start":1,"column_end":70}},{"value":"/ parametrized on a lifetime so that it can be used for references in","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":127160,"byte_end":127231,"line_start":128,"line_end":128,"column_start":1,"column_end":72}},{"value":"/ this way.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":127232,"byte_end":127245,"line_start":129,"line_end":129,"column_start":1,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":127326,"byte_end":127331,"line_start":132,"line_end":132,"column_start":10,"column_end":15},"name":"Owned","qualname":"::env::ValueType::Owned","value":"type Owned: Into<Value>;","parent":{"krate":0,"index":628},"children":[],"decl_id":null,"docs":" The corresponding owned type.\n","sig":null,"attributes":[{"value":"/ The corresponding owned type.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":127283,"byte_end":127316,"line_start":131,"line_end":131,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":127417,"byte_end":127431,"line_start":135,"line_end":135,"column_start":8,"column_end":22},"name":"try_from_value","qualname":"::env::ValueType::try_from_value","value":"pub fn try_from_value(&'a Value) -> Result<Self, ValueTypeError>","parent":{"krate":0,"index":628},"children":[],"decl_id":null,"docs":" Attempt to convert the generic `Value` into this type.\n","sig":null,"attributes":[{"value":"/ Attempt to convert the generic `Value` into this type.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":127351,"byte_end":127409,"line_start":134,"line_end":134,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":3588},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":127706,"byte_end":127720,"line_start":144,"line_end":144,"column_start":12,"column_end":26},"name":"ValueTypeError","qualname":"::env::ValueTypeError","value":"ValueTypeError {  }","parent":null,"children":[{"krate":0,"index":3589},{"krate":0,"index":3590}],"decl_id":null,"docs":" The error type for environment access.","sig":null,"attributes":[{"value":"/ The error type for environment access.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":127482,"byte_end":127524,"line_start":138,"line_end":138,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":127525,"byte_end":127528,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ This error is expected to happen rarely, if ever, as it only","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":127529,"byte_end":127593,"line_start":140,"line_end":140,"column_start":1,"column_end":65}},{"value":"/ happens when the string part of keys collide but the types","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":127594,"byte_end":127656,"line_start":141,"line_end":141,"column_start":1,"column_end":63}},{"value":"/ mismatch.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":127657,"byte_end":127670,"line_start":142,"line_end":142,"column_start":1,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":129118,"byte_end":129130,"line_start":186,"line_end":186,"column_start":15,"column_end":27},"name":"DEBUG_WIDGET","qualname":"::env::Env::DEBUG_WIDGET","value":"Key<bool>","parent":{"krate":0,"index":632},"children":[],"decl_id":null,"docs":" A key used to tell widgets to print additional debug information.","sig":null,"attributes":[{"value":"/ A key used to tell widgets to print additional debug information.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":128389,"byte_end":128458,"line_start":165,"line_end":165,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":128463,"byte_end":128466,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This does nothing by default; however you can check this key while","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":128471,"byte_end":128541,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ debugging a widget to limit println spam.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":128546,"byte_end":128591,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":128596,"byte_end":128599,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ For convenience, this key can be set with the [`WidgetExt::debug_widget`]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":128604,"byte_end":128681,"line_start":170,"line_end":170,"column_start":5,"column_end":82}},{"value":"/ method.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":128686,"byte_end":128697,"line_start":171,"line_end":171,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":128702,"byte_end":128705,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":128710,"byte_end":128724,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":128729,"byte_end":128732,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":128737,"byte_end":128750,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/ # use druid::Env;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":128755,"byte_end":128776,"line_start":176,"line_end":176,"column_start":5,"column_end":26}},{"value":"/ # let env = Env::default();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":128781,"byte_end":128812,"line_start":177,"line_end":177,"column_start":5,"column_end":36}},{"value":"/ # let widget_id = 0;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":128817,"byte_end":128841,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/ # let my_rect = druid::Rect::ZERO;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":128846,"byte_end":128884,"line_start":179,"line_end":179,"column_start":5,"column_end":43}},{"value":"/ if env.get(Env::DEBUG_WIDGET) {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":128889,"byte_end":128924,"line_start":180,"line_end":180,"column_start":5,"column_end":40}},{"value":"/     eprintln!(\"widget {:?} bounds: {:?}\", widget_id, my_rect);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":128929,"byte_end":128995,"line_start":181,"line_end":181,"column_start":5,"column_end":71}},{"value":"/ }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":129000,"byte_end":129005,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":129010,"byte_end":129017,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":129022,"byte_end":129025,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [`WidgetExt::debug_widget`]: trait.WidgetExt.html#method.debug_widget","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":129030,"byte_end":129103,"line_start":185,"line_end":185,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":129563,"byte_end":129566,"line_start":197,"line_end":197,"column_start":12,"column_end":15},"name":"get","qualname":"<Env>::get","value":"pub fn get<'a, V: ValueType,\n           impl Borrow<Key<V>>: Borrow<Key<V>>>(&'a Self, impl Borrow<Key<V>>)\n-> V","parent":null,"children":[],"decl_id":null,"docs":" Gets a value from the environment, expecting it to be present.","sig":null,"attributes":[{"value":"/ Gets a value from the environment, expecting it to be present.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":129190,"byte_end":129256,"line_start":188,"line_end":188,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":129261,"byte_end":129264,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that the return value is a reference for \"expensive\" types such","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":129269,"byte_end":129341,"line_start":190,"line_end":190,"column_start":5,"column_end":77}},{"value":"/ as strings, but an ordinary value for \"cheap\" types such as numbers","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":129346,"byte_end":129417,"line_start":191,"line_end":191,"column_start":5,"column_end":76}},{"value":"/ and colors.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":129422,"byte_end":129437,"line_start":192,"line_end":192,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":129442,"byte_end":129445,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":129450,"byte_end":129462,"line_start":194,"line_end":194,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":129467,"byte_end":129470,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Panics if the key is not found, or if it is present with the wrong type.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":129475,"byte_end":129551,"line_start":196,"line_end":196,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":130005,"byte_end":130012,"line_start":211,"line_end":211,"column_start":12,"column_end":19},"name":"try_get","qualname":"<Env>::try_get","value":"pub fn try_get<'a, V: ValueType,\n               impl Borrow<Key<V>>: Borrow<Key<V>>>(&'a Self,\n                                                    impl Borrow<Key<V>>)\n-> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Gets a value from the environment.","sig":null,"attributes":[{"value":"/ Gets a value from the environment.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":129848,"byte_end":129886,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":129891,"byte_end":129894,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":129899,"byte_end":129911,"line_start":208,"line_end":208,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":129916,"byte_end":129919,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Panics if the value for the key is found, but has the wrong type.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":129924,"byte_end":129993,"line_start":210,"line_end":210,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":130611,"byte_end":130622,"line_start":228,"line_end":228,"column_start":12,"column_end":23},"name":"get_untyped","qualname":"<Env>::get_untyped","value":"pub fn get_untyped<impl Borrow<Key<()>>: Borrow<Key<()>>>(&Self,\n                                                          impl Borrow<Key<()>>)\n-> &Value","parent":null,"children":[],"decl_id":null,"docs":" Gets a value from the environment, in its encapsulated [`Value`] form,\n expecting the key to be present.","sig":null,"attributes":[{"value":"/ Gets a value from the environment, in its encapsulated [`Value`] form,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":130217,"byte_end":130291,"line_start":218,"line_end":218,"column_start":5,"column_end":79}},{"value":"/ expecting the key to be present.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":130296,"byte_end":130332,"line_start":219,"line_end":219,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":130337,"byte_end":130340,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ *WARNING:* This is not intended for general use, but only for inspecting an `Env` e.g.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":130345,"byte_end":130435,"line_start":221,"line_end":221,"column_start":5,"column_end":95}},{"value":"/ for debugging, theme editing, and theme loading.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":130440,"byte_end":130492,"line_start":222,"line_end":222,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":130497,"byte_end":130500,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":130505,"byte_end":130517,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":130522,"byte_end":130525,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Panics if the key is not found","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":130530,"byte_end":130564,"line_start":226,"line_end":226,"column_start":5,"column_end":39}},{"value":"/ [`Value`]: enum.Value.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":130569,"byte_end":130599,"line_start":227,"line_end":227,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":131192,"byte_end":131207,"line_start":243,"line_end":243,"column_start":12,"column_end":27},"name":"try_get_untyped","qualname":"<Env>::try_get_untyped","value":"pub fn try_get_untyped<impl Borrow<Key<()>>: Borrow<Key<()>>>(&Self,\n                                                              impl Borrow<Key<()>>)\n-> Option<&Value>","parent":null,"children":[],"decl_id":null,"docs":" Gets a value from the environment, in its encapsulated [`Value`] form,\n returning None if a value isn't found.","sig":null,"attributes":[{"value":"/ Gets a value from the environment, in its encapsulated [`Value`] form,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":130864,"byte_end":130938,"line_start":237,"line_end":237,"column_start":5,"column_end":79}},{"value":"/ returning None if a value isn't found.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":130943,"byte_end":130985,"line_start":238,"line_end":238,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":130990,"byte_end":130993,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ *WARNING:* This is not intended for general use, but only for inspecting an `Env` e.g.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":130998,"byte_end":131088,"line_start":240,"line_end":240,"column_start":5,"column_end":95}},{"value":"/ for debugging, theme editing, and theme loading.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":131093,"byte_end":131145,"line_start":241,"line_end":241,"column_start":5,"column_end":57}},{"value":"/ [`Value`]: enum.Value.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":131150,"byte_end":131180,"line_start":242,"line_end":242,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":131548,"byte_end":131555,"line_start":251,"line_end":251,"column_start":12,"column_end":19},"name":"get_all","qualname":"<Env>::get_all","value":"pub fn get_all(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Gets the entire contents of the `Env`, in key-value pairs.","sig":null,"attributes":[{"value":"/ Gets the entire contents of the `Env`, in key-value pairs.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":131314,"byte_end":131376,"line_start":247,"line_end":247,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":131381,"byte_end":131384,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ *WARNING:* This is not intended for general use, but only for inspecting an `Env` e.g.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":131389,"byte_end":131479,"line_start":249,"line_end":249,"column_start":5,"column_end":95}},{"value":"/ for debugging, theme editing, and theme loading.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":131484,"byte_end":131536,"line_start":250,"line_end":250,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":131710,"byte_end":131716,"line_start":256,"line_end":256,"column_start":12,"column_end":18},"name":"adding","qualname":"<Env>::adding","value":"pub fn adding<'a, V: ValueType,\n              impl Into<V::Owned>: Into<V::Owned>>(Self, Key<V>,\n                                                   impl Into<V::Owned>) -> Env","parent":null,"children":[],"decl_id":null,"docs":" Adds a key/value, acting like a builder.\n","sig":null,"attributes":[{"value":"/ Adds a key/value, acting like a builder.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":131654,"byte_end":131698,"line_start":255,"line_end":255,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":132112,"byte_end":132115,"line_start":268,"line_end":268,"column_start":12,"column_end":15},"name":"set","qualname":"<Env>::set","value":"pub fn set<'a, V: ValueType,\n           impl Into<V::Owned>: Into<V::Owned>>(&'a mut Self, Key<V>,\n                                                impl Into<V::Owned>)","parent":null,"children":[],"decl_id":null,"docs":" Sets a value in an environment.","sig":null,"attributes":[{"value":"/ Sets a value in an environment.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":131926,"byte_end":131961,"line_start":262,"line_end":262,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":131966,"byte_end":131969,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":131974,"byte_end":131986,"line_start":264,"line_end":264,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":131991,"byte_end":131994,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Panics if the environment already has a value for the key, but it is","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":131999,"byte_end":132071,"line_start":266,"line_end":266,"column_start":5,"column_end":77}},{"value":"/ of a different type.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":132076,"byte_end":132100,"line_start":267,"line_end":267,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133030,"byte_end":133045,"line_start":294,"line_end":294,"column_start":12,"column_end":27},"name":"get_debug_color","qualname":"<Env>::get_debug_color","value":"pub fn get_debug_color(&Self, u64) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Given an id, returns one of 18 distinct colors\n","sig":null,"attributes":[{"value":"/ Given an id, returns one of 18 distinct colors","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":132949,"byte_end":132999,"line_start":292,"line_end":292,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133600,"byte_end":133603,"line_start":313,"line_end":313,"column_start":18,"column_end":21},"name":"new","qualname":"<Key<T>>::new","value":"pub const fn new(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new strongly typed `Key` with the given string value.\n The type of the key will be inferred.","sig":null,"attributes":[{"value":"/ Create a new strongly typed `Key` with the given string value.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133215,"byte_end":133281,"line_start":301,"line_end":301,"column_start":5,"column_end":71}},{"value":"/ The type of the key will be inferred.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133286,"byte_end":133327,"line_start":302,"line_end":302,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133332,"byte_end":133335,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133340,"byte_end":133354,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133359,"byte_end":133362,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133367,"byte_end":133374,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use druid::Key;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133379,"byte_end":133398,"line_start":307,"line_end":307,"column_start":5,"column_end":24}},{"value":"/ use druid::piet::Color;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133403,"byte_end":133430,"line_start":308,"line_end":308,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133435,"byte_end":133438,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ let float_key: Key<f64> = Key::new(\"a.very.good.float\");","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133443,"byte_end":133503,"line_start":310,"line_end":310,"column_start":5,"column_end":65}},{"value":"/ let color_key: Key<Color> = Key::new(\"a.very.nice.color\");","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133508,"byte_end":133570,"line_start":311,"line_end":311,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133575,"byte_end":133582,"line_start":312,"line_end":312,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":134068,"byte_end":134075,"line_start":329,"line_end":329,"column_start":18,"column_end":25},"name":"untyped","qualname":"<Key<()>>::untyped","value":"pub const fn untyped(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an untyped `Key` with the given string value.","sig":null,"attributes":[{"value":"/ Create an untyped `Key` with the given string value.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133739,"byte_end":133795,"line_start":322,"line_end":322,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133800,"byte_end":133803,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ *WARNING:* This is not for general usage - it's only useful","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133808,"byte_end":133871,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/ for inspecting the contents of an [`Env`]  - this is expected to be","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133876,"byte_end":133947,"line_start":325,"line_end":325,"column_start":5,"column_end":76}},{"value":"/ used for debugging, loading, and manipulating themes.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133952,"byte_end":134009,"line_start":326,"line_end":326,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":134014,"byte_end":134017,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ [`Env`]: struct.Env.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":134022,"byte_end":134050,"line_start":328,"line_end":328,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":134365,"byte_end":134383,"line_start":343,"line_end":343,"column_start":12,"column_end":30},"name":"to_inner_unchecked","qualname":"<Value>::to_inner_unchecked","value":"pub fn to_inner_unchecked<'a, V: ValueType>(&'a Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the inner object.","sig":null,"attributes":[{"value":"/ Get a reference to the inner object.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":134209,"byte_end":134249,"line_start":338,"line_end":338,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":134254,"byte_end":134257,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":134262,"byte_end":134274,"line_start":340,"line_end":340,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":134279,"byte_end":134282,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ Panics when the value variant doesn't match the provided type.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":134287,"byte_end":134353,"line_start":342,"line_end":342,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":140463,"byte_end":140470,"line_start":532,"line_end":532,"column_start":12,"column_end":19},"name":"resolve","qualname":"<KeyOrValue<T>>::resolve","value":"pub fn resolve(&'a Self, &'a Env) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3644},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143872,"byte_end":143887,"line_start":58,"line_end":58,"column_start":5,"column_end":20},"name":"WindowConnected","qualname":"::event::Event::WindowConnected","value":"Event::WindowConnected","parent":{"krate":0,"index":3643},"children":[],"decl_id":null,"docs":" Sent to all widgets in a given window when that window is first instantiated.","sig":null,"attributes":[{"value":"/ Sent to all widgets in a given window when that window is first instantiated.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143436,"byte_end":143517,"line_start":49,"line_end":49,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143522,"byte_end":143525,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This should always be the first `Event` received, although widgets will","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143530,"byte_end":143605,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ receive [`LifeCycle::WidgetAdded`] first.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143610,"byte_end":143655,"line_start":52,"line_end":52,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143660,"byte_end":143663,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Widgets should handle this event if they need to do some addition setup","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143668,"byte_end":143743,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ when a window is first created.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143748,"byte_end":143783,"line_start":55,"line_end":55,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143788,"byte_end":143791,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ [`LifeCycle::WidgetAdded`]: enum.LifeCycle.html#variant.WidgetAdded","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143796,"byte_end":143867,"line_start":57,"line_end":57,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3646},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":144217,"byte_end":144227,"line_start":65,"line_end":65,"column_start":5,"column_end":15},"name":"WindowSize","qualname":"::event::Event::WindowSize","value":"Event::WindowSize(Size)","parent":{"krate":0,"index":3643},"children":[],"decl_id":null,"docs":" Called on the root widget when the window size changes.","sig":null,"attributes":[{"value":"/ Called on the root widget when the window size changes.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143893,"byte_end":143952,"line_start":59,"line_end":59,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143957,"byte_end":143960,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Discussion: it's not obvious this should be propagated to user","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143965,"byte_end":144031,"line_start":61,"line_end":61,"column_start":5,"column_end":71}},{"value":"/ widgets. It *is* propagated through the RootWidget and handled","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":144036,"byte_end":144102,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ in the WindowPod, but after that it might be considered better","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":144107,"byte_end":144173,"line_start":63,"line_end":63,"column_start":5,"column_end":71}},{"value":"/ to just handle it in `layout`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":144178,"byte_end":144212,"line_start":64,"line_end":64,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3649},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":144286,"byte_end":144295,"line_start":67,"line_end":67,"column_start":5,"column_end":14},"name":"MouseDown","qualname":"::event::Event::MouseDown","value":"Event::MouseDown(MouseEvent)","parent":{"krate":0,"index":3643},"children":[],"decl_id":null,"docs":" Called when a mouse button is pressed.\n","sig":null,"attributes":[{"value":"/ Called when a mouse button is pressed.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":144239,"byte_end":144281,"line_start":66,"line_end":66,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3652},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":144361,"byte_end":144368,"line_start":69,"line_end":69,"column_start":5,"column_end":12},"name":"MouseUp","qualname":"::event::Event::MouseUp","value":"Event::MouseUp(MouseEvent)","parent":{"krate":0,"index":3643},"children":[],"decl_id":null,"docs":" Called when a mouse button is released.\n","sig":null,"attributes":[{"value":"/ Called when a mouse button is released.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":144313,"byte_end":144356,"line_start":68,"line_end":68,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3655},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145115,"byte_end":145124,"line_start":84,"line_end":84,"column_start":5,"column_end":14},"name":"MouseMove","qualname":"::event::Event::MouseMove","value":"Event::MouseMove(MouseEvent)","parent":{"krate":0,"index":3643},"children":[],"decl_id":null,"docs":" Called when the mouse is moved.","sig":null,"attributes":[{"value":"/ Called when the mouse is moved.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":144386,"byte_end":144421,"line_start":70,"line_end":70,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":144426,"byte_end":144429,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ The `MouseMove` event is propagated to the active widget, if","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":144434,"byte_end":144498,"line_start":72,"line_end":72,"column_start":5,"column_end":69}},{"value":"/ there is one, otherwise to hot widgets (see `HotChanged`).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":144503,"byte_end":144565,"line_start":73,"line_end":73,"column_start":5,"column_end":67}},{"value":"/ If a widget loses its hot status due to `MouseMove` then that specific","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":144570,"byte_end":144644,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ `MouseMove` event is also still sent to that widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":144649,"byte_end":144705,"line_start":75,"line_end":75,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":144710,"byte_end":144713,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The `MouseMove` event is also the primary mechanism for widgets","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":144718,"byte_end":144785,"line_start":77,"line_end":77,"column_start":5,"column_end":72}},{"value":"/ to set a cursor, for example to an I-bar inside a text widget. A","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":144790,"byte_end":144858,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/ simple tactic is for the widget to unconditionally call","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":144863,"byte_end":144922,"line_start":79,"line_end":79,"column_start":5,"column_end":64}},{"value":"/ [`set_cursor`] in the MouseMove handler, as `MouseMove` is only","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":144927,"byte_end":144994,"line_start":80,"line_end":80,"column_start":5,"column_end":72}},{"value":"/ propagated to active or hot widgets.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":144999,"byte_end":145039,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145044,"byte_end":145047,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ [`set_cursor`]: struct.EventCtx.html#method.set_cursor","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145052,"byte_end":145110,"line_start":83,"line_end":83,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3658},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145203,"byte_end":145208,"line_start":86,"line_end":86,"column_start":5,"column_end":10},"name":"Wheel","qualname":"::event::Event::Wheel","value":"Event::Wheel(MouseEvent)","parent":{"krate":0,"index":3643},"children":[],"decl_id":null,"docs":" Called when the mouse wheel or trackpad is scrolled.\n","sig":null,"attributes":[{"value":"/ Called when the mouse wheel or trackpad is scrolled.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145142,"byte_end":145198,"line_start":85,"line_end":85,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3661},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145611,"byte_end":145618,"line_start":94,"line_end":94,"column_start":5,"column_end":12},"name":"KeyDown","qualname":"::event::Event::KeyDown","value":"Event::KeyDown(KeyEvent)","parent":{"krate":0,"index":3643},"children":[],"decl_id":null,"docs":" Called when a key is pressed.","sig":null,"attributes":[{"value":"/ Called when a key is pressed.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145226,"byte_end":145259,"line_start":87,"line_end":87,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145264,"byte_end":145267,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note: the intent is for each physical key press to correspond to","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145272,"byte_end":145340,"line_start":89,"line_end":89,"column_start":5,"column_end":73}},{"value":"/ a single `KeyDown` event. This is sometimes different than the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145345,"byte_end":145411,"line_start":90,"line_end":90,"column_start":5,"column_end":71}},{"value":"/ raw events provided by the platform. In particular, Windows sends","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145416,"byte_end":145485,"line_start":91,"line_end":91,"column_start":5,"column_end":74}},{"value":"/ one or both of WM_KEYDOWN (a raw key code) and WM_CHAR (the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145490,"byte_end":145553,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/ Unicode value), depending on the actual key.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145558,"byte_end":145606,"line_start":93,"line_end":93,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3664},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145795,"byte_end":145800,"line_start":99,"line_end":99,"column_start":5,"column_end":10},"name":"KeyUp","qualname":"::event::Event::KeyUp","value":"Event::KeyUp(KeyEvent)","parent":{"krate":0,"index":3643},"children":[],"decl_id":null,"docs":" Called when a key is released.","sig":null,"attributes":[{"value":"/ Called when a key is released.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145634,"byte_end":145668,"line_start":95,"line_end":95,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145673,"byte_end":145676,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Because of repeat, there may be a number `KeyDown` events before","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145681,"byte_end":145749,"line_start":97,"line_end":97,"column_start":5,"column_end":73}},{"value":"/ a corresponding `KeyUp` is sent.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145754,"byte_end":145790,"line_start":98,"line_end":98,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3667},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145865,"byte_end":145870,"line_start":101,"line_end":101,"column_start":5,"column_end":10},"name":"Paste","qualname":"::event::Event::Paste","value":"Event::Paste(Clipboard)","parent":{"krate":0,"index":3643},"children":[],"decl_id":null,"docs":" Called when a paste command is received.\n","sig":null,"attributes":[{"value":"/ Called when a paste command is received.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145816,"byte_end":145860,"line_start":100,"line_end":100,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3670},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145970,"byte_end":145974,"line_start":105,"line_end":105,"column_start":5,"column_end":9},"name":"Zoom","qualname":"::event::Event::Zoom","value":"Event::Zoom(f64)","parent":{"krate":0,"index":3643},"children":[],"decl_id":null,"docs":" Called when the trackpad is pinched.","sig":null,"attributes":[{"value":"/ Called when the trackpad is pinched.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145887,"byte_end":145927,"line_start":102,"line_end":102,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145932,"byte_end":145935,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ The value is a delta.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145940,"byte_end":145965,"line_start":104,"line_end":104,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3673},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146417,"byte_end":146422,"line_start":116,"line_end":116,"column_start":5,"column_end":10},"name":"Timer","qualname":"::event::Event::Timer","value":"Event::Timer(TimerToken)","parent":{"krate":0,"index":3643},"children":[],"decl_id":null,"docs":" Called on a timer event.","sig":null,"attributes":[{"value":"/ Called on a timer event.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":145985,"byte_end":146013,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146018,"byte_end":146021,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Request a timer event through [`EventCtx::request_timer()`]. That will","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146026,"byte_end":146100,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ cause a timer event later.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146105,"byte_end":146135,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146140,"byte_end":146143,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Note that timer events from other widgets may be delivered as well. Use","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146148,"byte_end":146223,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ the token returned from the `request_timer()` call to filter events more","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146228,"byte_end":146304,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ precisely.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146309,"byte_end":146323,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146328,"byte_end":146331,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ [`EventCtx::request_timer()`]: struct.EventCtx.html#method.request_timer","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146336,"byte_end":146412,"line_start":115,"line_end":115,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3676},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146927,"byte_end":146934,"line_start":127,"line_end":127,"column_start":5,"column_end":12},"name":"Command","qualname":"::event::Event::Command","value":"Event::Command(Command)","parent":{"krate":0,"index":3643},"children":[],"decl_id":null,"docs":" Called with an arbitrary [`Command`], submitted from elsewhere in\n the application.","sig":null,"attributes":[{"value":"/ Called with an arbitrary [`Command`], submitted from elsewhere in","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146440,"byte_end":146509,"line_start":117,"line_end":117,"column_start":5,"column_end":74}},{"value":"/ the application.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146514,"byte_end":146534,"line_start":118,"line_end":118,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146539,"byte_end":146542,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Commands can be issued when the user triggers a menu item or an","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146547,"byte_end":146614,"line_start":120,"line_end":120,"column_start":5,"column_end":72}},{"value":"/ application-level hotkey, or they can be created dynamically by","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146619,"byte_end":146686,"line_start":121,"line_end":121,"column_start":5,"column_end":72}},{"value":"/ [`Widget`]s, at runtime, with [`EventCtx::submit_command`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146691,"byte_end":146754,"line_start":122,"line_end":122,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146759,"byte_end":146762,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [`Command`]: struct.Command.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146767,"byte_end":146803,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/ [`Widget`]: trait.Widget.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146808,"byte_end":146841,"line_start":125,"line_end":125,"column_start":5,"column_end":38}},{"value":"/ [`EventCtx::submit_command`]: struct.EventCtx.html#method.submit_command","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146846,"byte_end":146922,"line_start":126,"line_end":126,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3679},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147112,"byte_end":147120,"line_start":133,"line_end":133,"column_start":5,"column_end":13},"name":"Internal","qualname":"::event::Event::Internal","value":"Event::Internal(InternalEvent)","parent":{"krate":0,"index":3643},"children":[],"decl_id":null,"docs":" Internal druid event.","sig":null,"attributes":[{"value":"/ Internal druid event.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146949,"byte_end":146974,"line_start":128,"line_end":128,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146979,"byte_end":146982,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This should always be passed down to descendant [`WidgetPod`]s.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":146987,"byte_end":147054,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147059,"byte_end":147062,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`WidgetPod`]: struct.WidgetPod.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147067,"byte_end":147107,"line_start":132,"line_end":132,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":3643},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143424,"byte_end":143429,"line_start":48,"line_end":48,"column_start":10,"column_end":15},"name":"Event","qualname":"::event::Event","value":"pub enum Event {\n\n    /// Sent to all widgets in a given window when that window is first instantiated.\n    ///\n    /// This should always be the first `Event` received, although widgets will\n    /// receive [`LifeCycle::WidgetAdded`] first.\n    ///\n    /// Widgets should handle this event if they need to do some addition setup\n    /// when a window is first created.\n    ///\n    /// [`LifeCycle::WidgetAdded`]: enum.LifeCycle.html#variant.WidgetAdded\n    WindowConnected,\n\n    /// Called on the root widget when the window size changes.\n    ///\n    /// Discussion: it's not obvious this should be propagated to user\n    /// widgets. It *is* propagated through the RootWidget and handled\n    /// in the WindowPod, but after that it might be considered better\n    /// to just handle it in `layout`.\n    WindowSize(Size),\n\n    /// Called when a mouse button is pressed.\n    MouseDown(MouseEvent),\n\n    /// Called when a mouse button is released.\n    MouseUp(MouseEvent),\n\n    /// Called when the mouse is moved.\n    ///\n    /// The `MouseMove` event is propagated to the active widget, if\n    /// there is one, otherwise to hot widgets (see `HotChanged`).\n    /// If a widget loses its hot status due to `MouseMove` then that specific\n    /// `MouseMove` event is also still sent to that widget.\n    ///\n    /// The `MouseMove` event is also the primary mechanism for widgets\n    /// to set a cursor, for example to an I-bar inside a text widget. A\n    /// simple tactic is for the widget to unconditionally call\n    /// [`set_cursor`] in the MouseMove handler, as `MouseMove` is only\n    /// propagated to active or hot widgets.\n    ///\n    /// [`set_cursor`]: struct.EventCtx.html#method.set_cursor\n    MouseMove(MouseEvent),\n\n    /// Called when the mouse wheel or trackpad is scrolled.\n    Wheel(MouseEvent),\n\n    /// Called when a key is pressed.\n    ///\n    /// Note: the intent is for each physical key press to correspond to\n    /// a single `KeyDown` event. This is sometimes different than the\n    /// raw events provided by the platform. In particular, Windows sends\n    /// one or both of WM_KEYDOWN (a raw key code) and WM_CHAR (the\n    /// Unicode value), depending on the actual key.\n    KeyDown(KeyEvent),\n\n    /// Called when a key is released.\n    ///\n    /// Because of repeat, there may be a number `KeyDown` events before\n    /// a corresponding `KeyUp` is sent.\n    KeyUp(KeyEvent),\n\n    /// Called when a paste command is received.\n    Paste(Clipboard),\n\n    /// Called when the trackpad is pinched.\n    ///\n    /// The value is a delta.\n    Zoom(f64),\n\n    /// Called on a timer event.\n    ///\n    /// Request a timer event through [`EventCtx::request_timer()`]. That will\n    /// cause a timer event later.\n    ///\n    /// Note that timer events from other widgets may be delivered as well. Use\n    /// the token returned from the `request_timer()` call to filter events more\n    /// precisely.\n    ///\n    /// [`EventCtx::request_timer()`]: struct.EventCtx.html#method.request_timer\n    Timer(TimerToken),\n\n    /// Called with an arbitrary [`Command`], submitted from elsewhere in\n    /// the application.\n    ///\n    /// Commands can be issued when the user triggers a menu item or an\n    /// application-level hotkey, or they can be created dynamically by\n    /// [`Widget`]s, at runtime, with [`EventCtx::submit_command`].\n    ///\n    /// [`Command`]: struct.Command.html\n    /// [`Widget`]: trait.Widget.html\n    /// [`EventCtx::submit_command`]: struct.EventCtx.html#method.submit_command\n    Command(Command),\n\n    /// Internal druid event.\n    ///\n    /// This should always be passed down to descendant [`WidgetPod`]s.\n    ///\n    /// [`WidgetPod`]: struct.WidgetPod.html\n    Internal(InternalEvent),\n}","parent":null,"children":[{"krate":0,"index":3644},{"krate":0,"index":3646},{"krate":0,"index":3649},{"krate":0,"index":3652},{"krate":0,"index":3655},{"krate":0,"index":3658},{"krate":0,"index":3661},{"krate":0,"index":3664},{"krate":0,"index":3667},{"krate":0,"index":3670},{"krate":0,"index":3673},{"krate":0,"index":3676},{"krate":0,"index":3679}],"decl_id":null,"docs":" An event, propagated downwards during event flow.","sig":null,"attributes":[{"value":"/ An event, propagated downwards during event flow.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":142220,"byte_end":142273,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":142274,"byte_end":142277,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Events are things that happen that can change the state of widgets.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":142278,"byte_end":142349,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ An important category is events plumbed from the platform windowing","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":142350,"byte_end":142421,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ system, which includes mouse and keyboard events, but also (in the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":142422,"byte_end":142492,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ future) status changes such as window focus changes.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":142493,"byte_end":142549,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":142550,"byte_end":142553,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Events can also be higher level concepts indicating state changes","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":142554,"byte_end":142623,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ within the widget hierarchy, for example when a widget gains or loses","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":142624,"byte_end":142697,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ focus or \"hot\" (also known as hover) status.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":142698,"byte_end":142746,"line_start":33,"line_end":33,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":142747,"byte_end":142750,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Events are a key part of what is called \"event flow\", which is","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":142751,"byte_end":142817,"line_start":35,"line_end":35,"column_start":1,"column_end":67}},{"value":"/ basically the propagation of an event through the widget hierarchy","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":142818,"byte_end":142888,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"/ through the [`event`] widget method. A container widget will","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":142889,"byte_end":142953,"line_start":37,"line_end":37,"column_start":1,"column_end":65}},{"value":"/ generally pass the event to its children, mediated through the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":142954,"byte_end":143020,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ [`WidgetPod`] container, which is where most of the event flow logic","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143021,"byte_end":143093,"line_start":39,"line_end":39,"column_start":1,"column_end":73}},{"value":"/ is applied (especially the decision whether or not to propagate).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143094,"byte_end":143163,"line_start":40,"line_end":40,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143164,"byte_end":143167,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This enum is expected to grow considerably, as there are many, many","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143168,"byte_end":143239,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"/ different kinds of events that are relevant in a GUI.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143240,"byte_end":143297,"line_start":43,"line_end":43,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143298,"byte_end":143301,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`event`]: trait.Widget.html#tymethod.event","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143302,"byte_end":143349,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/ [`WidgetPod`]: struct.WidgetPod.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":143350,"byte_end":143390,"line_start":46,"line_end":46,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3687},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147638,"byte_end":147648,"line_start":149,"line_end":149,"column_start":5,"column_end":15},"name":"MouseLeave","qualname":"::event::InternalEvent::MouseLeave","value":"InternalEvent::MouseLeave","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Sent in some cases when the mouse has left the window.","sig":null,"attributes":[{"value":"/ Sent in some cases when the mouse has left the window.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147422,"byte_end":147480,"line_start":145,"line_end":145,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147485,"byte_end":147488,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This is used in cases when the platform no longer sends mouse events,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147493,"byte_end":147566,"line_start":147,"line_end":147,"column_start":5,"column_end":78}},{"value":"/ but we know that we've stopped receiving the mouse events.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147571,"byte_end":147633,"line_start":148,"line_end":148,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3689},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147714,"byte_end":147729,"line_start":151,"line_end":151,"column_start":5,"column_end":20},"name":"TargetedCommand","qualname":"::event::InternalEvent::TargetedCommand","value":"InternalEvent::TargetedCommand(Target, Command)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" A command still in the process of being dispatched.\n","sig":null,"attributes":[{"value":"/ A command still in the process of being dispatched.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147654,"byte_end":147709,"line_start":150,"line_end":150,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3693},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147791,"byte_end":147801,"line_start":153,"line_end":153,"column_start":5,"column_end":15},"name":"RouteTimer","qualname":"::event::InternalEvent::RouteTimer","value":"InternalEvent::RouteTimer(TimerToken, WidgetId)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":" Used for routing timer events.\n","sig":null,"attributes":[{"value":"/ Used for routing timer events.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147752,"byte_end":147786,"line_start":152,"line_end":152,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":3686},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147402,"byte_end":147415,"line_start":144,"line_end":144,"column_start":10,"column_end":23},"name":"InternalEvent","qualname":"::event::InternalEvent","value":"pub enum InternalEvent {\n\n    /// Sent in some cases when the mouse has left the window.\n    ///\n    /// This is used in cases when the platform no longer sends mouse events,\n    /// but we know that we've stopped receiving the mouse events.\n    MouseLeave,\n\n    /// A command still in the process of being dispatched.\n    TargetedCommand(Target, Command),\n\n    /// Used for routing timer events.\n    RouteTimer(TimerToken, WidgetId),\n}","parent":null,"children":[{"krate":0,"index":3687},{"krate":0,"index":3689},{"krate":0,"index":3693}],"decl_id":null,"docs":" Internal events used by druid inside [`WidgetPod`].","sig":null,"attributes":[{"value":"/ Internal events used by druid inside [`WidgetPod`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147140,"byte_end":147195,"line_start":136,"line_end":136,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147196,"byte_end":147199,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ These events are translated into regular [`Event`]s","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147200,"byte_end":147255,"line_start":138,"line_end":138,"column_start":1,"column_end":56}},{"value":"/ and should not be used directly.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147256,"byte_end":147292,"line_start":139,"line_end":139,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147293,"byte_end":147296,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [`WidgetPod`]: struct.WidgetPod.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147297,"byte_end":147337,"line_start":141,"line_end":141,"column_start":1,"column_end":41}},{"value":"/ [`Event`]: enum.Event.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147338,"byte_end":147368,"line_start":142,"line_end":142,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3702},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":149072,"byte_end":149083,"line_start":182,"line_end":182,"column_start":5,"column_end":16},"name":"WidgetAdded","qualname":"::event::LifeCycle::WidgetAdded","value":"LifeCycle::WidgetAdded","parent":{"krate":0,"index":3701},"children":[],"decl_id":null,"docs":" Sent to a `Widget` when it is added to the widget tree. This should be\n the first message that each widget receives.","sig":null,"attributes":[{"value":"/ Sent to a `Widget` when it is added to the widget tree. This should be","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147912,"byte_end":147986,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ the first message that each widget receives.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147991,"byte_end":148039,"line_start":160,"line_end":160,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148044,"byte_end":148047,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Widgets should handle this event in order to do any initial setup.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148052,"byte_end":148122,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148127,"byte_end":148130,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ In addition to setup, this event is also used by the framework to","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148135,"byte_end":148204,"line_start":164,"line_end":164,"column_start":5,"column_end":74}},{"value":"/ track certain types of important widget state.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148209,"byte_end":148259,"line_start":165,"line_end":165,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148264,"byte_end":148267,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ## Registering children","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148272,"byte_end":148299,"line_start":167,"line_end":167,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148304,"byte_end":148307,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Container widgets (widgets which use [`WidgetPod`] to manage children)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148312,"byte_end":148386,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ must ensure that this event is forwarded to those children. The [`WidgetPod`]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148391,"byte_end":148472,"line_start":170,"line_end":170,"column_start":5,"column_end":86}},{"value":"/ itself will handle registering those children with the system; this is","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148477,"byte_end":148551,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ required for things like correct routing of events.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148556,"byte_end":148611,"line_start":172,"line_end":172,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148616,"byte_end":148619,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ## Participating in focus","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148624,"byte_end":148653,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148658,"byte_end":148661,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Widgets which wish to participate in automatic focus (using tab to change","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148666,"byte_end":148743,"line_start":176,"line_end":176,"column_start":5,"column_end":82}},{"value":"/ focus) must handle this event and call [`LifeCycleCtx::register_for_focus`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148748,"byte_end":148828,"line_start":177,"line_end":177,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148833,"byte_end":148836,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [`LifeCycleCtx::register_child`]: struct.LifeCycleCtx.html#method.register_child","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148841,"byte_end":148925,"line_start":179,"line_end":179,"column_start":5,"column_end":89}},{"value":"/ [`WidgetPod`]: struct.WidgetPod.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148930,"byte_end":148970,"line_start":180,"line_end":180,"column_start":5,"column_end":45}},{"value":"/ [`LifeCycleCtx::register_for_focus`]: struct.LifeCycleCtx.html#method.register_for_focus","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":148975,"byte_end":149067,"line_start":181,"line_end":181,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3704},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":149412,"byte_end":149416,"line_start":190,"line_end":190,"column_start":5,"column_end":9},"name":"Size","qualname":"::event::LifeCycle::Size","value":"LifeCycle::Size(Size)","parent":{"krate":0,"index":3701},"children":[],"decl_id":null,"docs":" Called when the size of the widget changes.","sig":null,"attributes":[{"value":"/ Called when the size of the widget changes.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":149089,"byte_end":149136,"line_start":183,"line_end":183,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":149141,"byte_end":149144,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The [`Size`] is derived from the [`Rect`] that was set with [`WidgetPod::set_layout_rect`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":149149,"byte_end":149244,"line_start":185,"line_end":185,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":149249,"byte_end":149252,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ [`Size`]: struct.Size.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":149257,"byte_end":149287,"line_start":187,"line_end":187,"column_start":5,"column_end":35}},{"value":"/ [`Rect`]: struct.Rect.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":149292,"byte_end":149322,"line_start":188,"line_end":188,"column_start":5,"column_end":35}},{"value":"/ [`WidgetPod::set_layout_rect`]: struct.WidgetPod.html#method.set_layout_rect","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":149327,"byte_end":149407,"line_start":189,"line_end":189,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3707},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":149730,"byte_end":149739,"line_start":196,"line_end":196,"column_start":5,"column_end":14},"name":"AnimFrame","qualname":"::event::LifeCycle::AnimFrame","value":"LifeCycle::AnimFrame(u64)","parent":{"krate":0,"index":3701},"children":[],"decl_id":null,"docs":" Called at the beginning of a new animation frame.","sig":null,"attributes":[{"value":"/ Called at the beginning of a new animation frame.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":149428,"byte_end":149481,"line_start":191,"line_end":191,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":149486,"byte_end":149489,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ On the first frame when transitioning from idle to animating, `interval`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":149494,"byte_end":149570,"line_start":193,"line_end":193,"column_start":5,"column_end":81}},{"value":"/ will be 0. (This logic is presently per-window but might change to","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":149575,"byte_end":149645,"line_start":194,"line_end":194,"column_start":5,"column_end":75}},{"value":"/ per-widget to make it more consistent). Otherwise it is in nanoseconds.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":149650,"byte_end":149725,"line_start":195,"line_end":195,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3710},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150138,"byte_end":150148,"line_start":205,"line_end":205,"column_start":5,"column_end":15},"name":"HotChanged","qualname":"::event::LifeCycle::HotChanged","value":"LifeCycle::HotChanged(bool)","parent":{"krate":0,"index":3701},"children":[],"decl_id":null,"docs":" Called when the \"hot\" status changes.","sig":null,"attributes":[{"value":"/ Called when the \"hot\" status changes.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":149750,"byte_end":149791,"line_start":197,"line_end":197,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":149796,"byte_end":149799,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ This will always be called _before_ the event that triggered it; that is,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":149804,"byte_end":149881,"line_start":199,"line_end":199,"column_start":5,"column_end":82}},{"value":"/ when the mouse moves over a widget, that widget will receive","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":149886,"byte_end":149950,"line_start":200,"line_end":200,"column_start":5,"column_end":69}},{"value":"/ `LifeCycle::HotChanged` before it receives `Event::MouseMove`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":149955,"byte_end":150021,"line_start":201,"line_end":201,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150026,"byte_end":150029,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ See [`is_hot`](struct.EventCtx.html#method.is_hot) for","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150034,"byte_end":150092,"line_start":203,"line_end":203,"column_start":5,"column_end":63}},{"value":"/ discussion about the hot status.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150097,"byte_end":150133,"line_start":204,"line_end":204,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3713},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150587,"byte_end":150599,"line_start":215,"line_end":215,"column_start":5,"column_end":17},"name":"FocusChanged","qualname":"::event::LifeCycle::FocusChanged","value":"LifeCycle::FocusChanged(bool)","parent":{"krate":0,"index":3701},"children":[],"decl_id":null,"docs":" Called when the focus status changes.","sig":null,"attributes":[{"value":"/ Called when the focus status changes.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150160,"byte_end":150201,"line_start":206,"line_end":206,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150206,"byte_end":150209,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This will always be called immediately after a new widget gains focus.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150214,"byte_end":150288,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ The newly focused widget will receive this with `true` and the widget","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150293,"byte_end":150366,"line_start":209,"line_end":209,"column_start":5,"column_end":78}},{"value":"/ that lost focus will receive this with `false`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150371,"byte_end":150422,"line_start":210,"line_end":210,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150427,"byte_end":150430,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ See [`EventCtx::is_focused`] for more information about focus.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150435,"byte_end":150501,"line_start":212,"line_end":212,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150506,"byte_end":150509,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ [`EventCtx::is_focused`]: struct.EventCtx.html#method.is_focused","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150514,"byte_end":150582,"line_start":214,"line_end":214,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3716},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150784,"byte_end":150792,"line_start":221,"line_end":221,"column_start":5,"column_end":13},"name":"Internal","qualname":"::event::LifeCycle::Internal","value":"LifeCycle::Internal(InternalLifeCycle)","parent":{"krate":0,"index":3701},"children":[],"decl_id":null,"docs":" Internal druid lifecycle event.","sig":null,"attributes":[{"value":"/ Internal druid lifecycle event.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150611,"byte_end":150646,"line_start":216,"line_end":216,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150651,"byte_end":150654,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This should always be passed down to descendant [`WidgetPod`]s.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150659,"byte_end":150726,"line_start":218,"line_end":218,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150731,"byte_end":150734,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ [`WidgetPod`]: struct.WidgetPod.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150739,"byte_end":150779,"line_start":220,"line_end":220,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":3701},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147896,"byte_end":147905,"line_start":158,"line_end":158,"column_start":10,"column_end":19},"name":"LifeCycle","qualname":"::event::LifeCycle","value":"pub enum LifeCycle {\n\n    /// Sent to a `Widget` when it is added to the widget tree. This should be\n    /// the first message that each widget receives.\n    ///\n    /// Widgets should handle this event in order to do any initial setup.\n    ///\n    /// In addition to setup, this event is also used by the framework to\n    /// track certain types of important widget state.\n    ///\n    /// ## Registering children\n    ///\n    /// Container widgets (widgets which use [`WidgetPod`] to manage children)\n    /// must ensure that this event is forwarded to those children. The [`WidgetPod`]\n    /// itself will handle registering those children with the system; this is\n    /// required for things like correct routing of events.\n    ///\n    /// ## Participating in focus\n    ///\n    /// Widgets which wish to participate in automatic focus (using tab to change\n    /// focus) must handle this event and call [`LifeCycleCtx::register_for_focus`].\n    ///\n    /// [`LifeCycleCtx::register_child`]: struct.LifeCycleCtx.html#method.register_child\n    /// [`WidgetPod`]: struct.WidgetPod.html\n    /// [`LifeCycleCtx::register_for_focus`]: struct.LifeCycleCtx.html#method.register_for_focus\n    WidgetAdded,\n\n    /// Called when the size of the widget changes.\n    ///\n    /// The [`Size`] is derived from the [`Rect`] that was set with [`WidgetPod::set_layout_rect`].\n    ///\n    /// [`Size`]: struct.Size.html\n    /// [`Rect`]: struct.Rect.html\n    /// [`WidgetPod::set_layout_rect`]: struct.WidgetPod.html#method.set_layout_rect\n    Size(Size),\n\n    /// Called at the beginning of a new animation frame.\n    ///\n    /// On the first frame when transitioning from idle to animating, `interval`\n    /// will be 0. (This logic is presently per-window but might change to\n    /// per-widget to make it more consistent). Otherwise it is in nanoseconds.\n    AnimFrame(u64),\n\n    /// Called when the \"hot\" status changes.\n    ///\n    /// This will always be called _before_ the event that triggered it; that is,\n    /// when the mouse moves over a widget, that widget will receive\n    /// `LifeCycle::HotChanged` before it receives `Event::MouseMove`.\n    ///\n    /// See [`is_hot`](struct.EventCtx.html#method.is_hot) for\n    /// discussion about the hot status.\n    HotChanged(bool),\n\n    /// Called when the focus status changes.\n    ///\n    /// This will always be called immediately after a new widget gains focus.\n    /// The newly focused widget will receive this with `true` and the widget\n    /// that lost focus will receive this with `false`.\n    ///\n    /// See [`EventCtx::is_focused`] for more information about focus.\n    ///\n    /// [`EventCtx::is_focused`]: struct.EventCtx.html#method.is_focused\n    FocusChanged(bool),\n\n    /// Internal druid lifecycle event.\n    ///\n    /// This should always be passed down to descendant [`WidgetPod`]s.\n    ///\n    /// [`WidgetPod`]: struct.WidgetPod.html\n    Internal(InternalLifeCycle),\n}","parent":null,"children":[{"krate":0,"index":3702},{"krate":0,"index":3704},{"krate":0,"index":3707},{"krate":0,"index":3710},{"krate":0,"index":3713},{"krate":0,"index":3716}],"decl_id":null,"docs":" Application life cycle events.\n","sig":null,"attributes":[{"value":"/ Application life cycle events.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":147828,"byte_end":147862,"line_start":156,"line_end":156,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3724},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":151201,"byte_end":151217,"line_start":234,"line_end":234,"column_start":5,"column_end":21},"name":"RouteWidgetAdded","qualname":"::event::InternalLifeCycle::RouteWidgetAdded","value":"InternalLifeCycle::RouteWidgetAdded","parent":{"krate":0,"index":3723},"children":[],"decl_id":null,"docs":" Used to route the `WidgetAdded` event to the required widgets.\n","sig":null,"attributes":[{"value":"/ Used to route the `WidgetAdded` event to the required widgets.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":151130,"byte_end":151196,"line_start":233,"line_end":233,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":3726},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":151271,"byte_end":151288,"line_start":236,"line_end":236,"column_start":5,"column_end":22},"name":"RouteFocusChanged","qualname":"::event::InternalLifeCycle::RouteFocusChanged","value":"InternalLifeCycle::RouteFocusChanged { old, new }","parent":{"krate":0,"index":3723},"children":[],"decl_id":null,"docs":" Used to route the `FocusChanged` event.\n","sig":null,"attributes":[{"value":"/ Used to route the `FocusChanged` event.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":151223,"byte_end":151266,"line_start":235,"line_end":235,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":3723},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":151106,"byte_end":151123,"line_start":232,"line_end":232,"column_start":10,"column_end":27},"name":"InternalLifeCycle","qualname":"::event::InternalLifeCycle","value":"pub enum InternalLifeCycle {\n\n    /// Used to route the `WidgetAdded` event to the required widgets.\n    RouteWidgetAdded,\n\n    /// Used to route the `FocusChanged` event.\n    RouteFocusChanged {\n        /// the widget that is losing focus, if any\n        old: Option<WidgetId>,\n        /// the widget that is gaining focus, if any\n        new: Option<WidgetId>,\n    },\n}","parent":null,"children":[{"krate":0,"index":3724},{"krate":0,"index":3726}],"decl_id":null,"docs":" Internal lifecycle events used by druid inside [`WidgetPod`].","sig":null,"attributes":[{"value":"/ Internal lifecycle events used by druid inside [`WidgetPod`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150816,"byte_end":150881,"line_start":224,"line_end":224,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150882,"byte_end":150885,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ These events are translated into regular [`LifeCycle`] events","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150886,"byte_end":150951,"line_start":226,"line_end":226,"column_start":1,"column_end":66}},{"value":"/ and should not be used directly.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150952,"byte_end":150988,"line_start":227,"line_end":227,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150989,"byte_end":150992,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ [`WidgetPod`]: struct.WidgetPod.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":150993,"byte_end":151033,"line_start":229,"line_end":229,"column_start":1,"column_end":41}},{"value":"/ [`LifeCycle`]: enum.LifeCycle.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":151034,"byte_end":151072,"line_start":230,"line_end":230,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":152261,"byte_end":152277,"line_start":263,"line_end":263,"column_start":12,"column_end":28},"name":"transform_scroll","qualname":"<Event>::transform_scroll","value":"pub fn transform_scroll(&Self, Vec2, Rect, bool) -> Option<Event>","parent":null,"children":[],"decl_id":null,"docs":" Transform the event for the contents of a scrolling container.","sig":null,"attributes":[{"value":"/ Transform the event for the contents of a scrolling container.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":152008,"byte_end":152074,"line_start":258,"line_end":258,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":152079,"byte_end":152082,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ the `force` flag is used to ensure an event is delivered even","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":152087,"byte_end":152152,"line_start":260,"line_end":260,"column_start":5,"column_end":70}},{"value":"/ if the cursor is out of the viewport, such as if the contents are active","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":152157,"byte_end":152233,"line_start":261,"line_end":261,"column_start":5,"column_end":81}},{"value":"/ or hot.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":152238,"byte_end":152249,"line_start":262,"line_end":262,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3733},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":157063,"byte_end":157075,"line_start":32,"line_end":32,"column_start":12,"column_end":24},"name":"ExtEventSink","qualname":"::ext_event::ExtEventSink","value":"ExtEventSink {  }","parent":null,"children":[{"krate":0,"index":3734},{"krate":0,"index":3735}],"decl_id":null,"docs":" A thing that can move into other threads and be used to submit commands back\n to the running application.","sig":null,"attributes":[{"value":"/ A thing that can move into other threads and be used to submit commands back","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":156842,"byte_end":156922,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ to the running application.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":156923,"byte_end":156954,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":156955,"byte_end":156958,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This API is preliminary, and may be changed or removed without warning.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":156959,"byte_end":157034,"line_start":30,"line_end":30,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3744},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":157955,"byte_end":157968,"line_start":54,"line_end":54,"column_start":12,"column_end":25},"name":"ExtEventError","qualname":"::ext_event::ExtEventError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error that occurs if an external event cannot be submitted.\n This probably means that the application has gone away.\n","sig":null,"attributes":[{"value":"/ An error that occurs if an external event cannot be submitted.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":157793,"byte_end":157859,"line_start":51,"line_end":51,"column_start":1,"column_end":67}},{"value":"/ This probably means that the application has gone away.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":157860,"byte_end":157919,"line_start":52,"line_end":52,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":159539,"byte_end":159553,"line_start":103,"line_end":103,"column_start":12,"column_end":26},"name":"submit_command","qualname":"<ExtEventSink>::submit_command","value":"pub fn submit_command<T: Any + Send + Sync, impl Into<Box<T>>: Into<Box<T>>,\n                      impl Into<Option<Target>>: Into<Option<Target>>>(&Self,\n                                                                       Selector<T>,\n                                                                       impl Into<Box<T>>,\n                                                                       impl Into<Option<Target>>)\n-> Result<(), ExtEventError>","parent":null,"children":[],"decl_id":null,"docs":" Submit a [`Command`] to the running application.","sig":null,"attributes":[{"value":"/ Submit a [`Command`] to the running application.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":158794,"byte_end":158846,"line_start":87,"line_end":87,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":158851,"byte_end":158854,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`Command`] is not thread safe, so you cannot submit it directly;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":158859,"byte_end":158928,"line_start":89,"line_end":89,"column_start":5,"column_end":74}},{"value":"/ instead you have to pass the [`Selector`] and the payload","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":158933,"byte_end":158994,"line_start":90,"line_end":90,"column_start":5,"column_end":66}},{"value":"/ separately, and it will be turned into a `Command` when it is received.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":158999,"byte_end":159074,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":159079,"byte_end":159082,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The `payload` must implement `Any + Send + Sync`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":159087,"byte_end":159140,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":159145,"byte_end":159148,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ If no explicit `Target` is submitted, the `Command` will be sent to","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":159153,"byte_end":159224,"line_start":95,"line_end":95,"column_start":5,"column_end":76}},{"value":"/ the application's first window; if that window is subsequently closed,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":159229,"byte_end":159303,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ then the command will be sent to *an arbitrary other window*.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":159308,"byte_end":159373,"line_start":97,"line_end":97,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":159378,"byte_end":159381,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This limitation may be removed in the future.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":159386,"byte_end":159435,"line_start":99,"line_end":99,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":159440,"byte_end":159443,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ [`Command`]: struct.Command.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":159448,"byte_end":159484,"line_start":101,"line_end":101,"column_start":5,"column_end":41}},{"value":"/ [`Selector`]: struct.Selector.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":159489,"byte_end":159527,"line_start":102,"line_end":102,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lens","qualname":"::lens","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":4550},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":4554},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947}],"decl_id":null,"docs":" Support for lenses, a way of focusing on subfields of data.","sig":null,"attributes":[{"value":"/ Support for lenses, a way of focusing on subfields of data.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":160943,"byte_end":161006,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161007,"byte_end":161010,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Lenses are useful whenever a widget only needs access to a subfield of a larger struct or","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161011,"byte_end":161104,"line_start":17,"line_end":17,"column_start":1,"column_end":94}},{"value":"/ generally access to part of a larger value.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161105,"byte_end":161152,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161153,"byte_end":161156,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ For example: If one wants to embed a [`TextBox`] in a widget with a `Data` type","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161157,"byte_end":161240,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/ that is not `String`, they need to specify how to access a `String` from within the `Data`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161241,"byte_end":161336,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161337,"byte_end":161340,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`TextBox`]: ../widget/struct.TextBox.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161341,"byte_end":161387,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161388,"byte_end":161395,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use druid::{Data, Lens, Widget, WidgetExt, widget::{TextBox, Flex}};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161396,"byte_end":161468,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161469,"byte_end":161472,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Debug, Data, Lens)]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161473,"byte_end":161512,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ struct MyState {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161513,"byte_end":161533,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/     search_term: String,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161534,"byte_end":161562,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/     scale: f64,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161563,"byte_end":161582,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161583,"byte_end":161597,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161598,"byte_end":161603,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161604,"byte_end":161607,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161608,"byte_end":161611,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn my_sidebar() -> impl Widget<MyState> {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161612,"byte_end":161657,"line_start":35,"line_end":35,"column_start":1,"column_end":46}},{"value":"/     // `TextBox` is of type `Widget<String>`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161658,"byte_end":161706,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/     // via `.lens` we get it to be of type `Widget<MyState>`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161707,"byte_end":161772,"line_start":37,"line_end":37,"column_start":1,"column_end":66}},{"value":"/     // `MyState::search_term` is a lens generated by the `derive(Lens)` macro,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161773,"byte_end":161855,"line_start":38,"line_end":38,"column_start":1,"column_end":83}},{"value":"/     // that provides access to the search_term field.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161856,"byte_end":161913,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/     let searchbar = TextBox::new().lens(MyState::search_term);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161914,"byte_end":161980,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161981,"byte_end":161984,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":161985,"byte_end":161999,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":162000,"byte_end":162003,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     // We can now use `searchbar` just like any other `Widget<MyState>`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":162004,"byte_end":162079,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/     Flex::column().with_child(searchbar)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":162080,"byte_end":162124,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":162125,"byte_end":162130,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\mod.rs","byte_start":162131,"byte_end":162138,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":764},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163719,"byte_end":163723,"line_start":38,"line_end":38,"column_start":11,"column_end":15},"name":"Lens","qualname":"::lens::lens::Lens","value":"Lens<T: ?Sized, U: ?Sized>","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":770}],"decl_id":null,"docs":" A lens is a datatype that gives access to a part of a larger\n data structure.","sig":null,"attributes":[{"value":"/ A lens is a datatype that gives access to a part of a larger","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163039,"byte_end":163103,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ data structure.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163104,"byte_end":163123,"line_start":24,"line_end":24,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163124,"byte_end":163127,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ A simple example of a lens is a field of a struct; in this case,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163128,"byte_end":163196,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ the lens itself is zero-sized. Another case is accessing an array","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163197,"byte_end":163266,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ element, in which case the lens contains the array index.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163267,"byte_end":163328,"line_start":28,"line_end":28,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163329,"byte_end":163332,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Many `Lens` implementations will be derived by macro, but custom","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163333,"byte_end":163401,"line_start":30,"line_end":30,"column_start":1,"column_end":69}},{"value":"/ implementations are practical as well.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163402,"byte_end":163444,"line_start":31,"line_end":31,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163445,"byte_end":163448,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The name \"lens\" is inspired by the [Haskell lens] package, which","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163449,"byte_end":163517,"line_start":33,"line_end":33,"column_start":1,"column_end":69}},{"value":"/ has generally similar goals. It's likely we'll develop more","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163518,"byte_end":163581,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/ sophistication, for example combinators to combine lenses.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163582,"byte_end":163644,"line_start":35,"line_end":35,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163645,"byte_end":163648,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [Haskell lens]: http://hackage.haskell.org/package/lens","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163649,"byte_end":163708,"line_start":37,"line_end":37,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":164016,"byte_end":164020,"line_start":44,"line_end":44,"column_start":8,"column_end":12},"name":"with","qualname":"::lens::lens::Lens::with","value":"pub fn with<V, F: FnOnce(&U) -> V>(&Self, &T, F) -> V","parent":{"krate":0,"index":764},"children":[],"decl_id":null,"docs":" Get non-mut access to the field.","sig":null,"attributes":[{"value":"/ Get non-mut access to the field.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163752,"byte_end":163788,"line_start":39,"line_end":39,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163793,"byte_end":163796,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Runs the supplied closure with a reference to the data. It's","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163801,"byte_end":163865,"line_start":41,"line_end":41,"column_start":5,"column_end":69}},{"value":"/ structured this way, as opposed to simply returning a reference,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163870,"byte_end":163938,"line_start":42,"line_end":42,"column_start":5,"column_end":73}},{"value":"/ so that the data might be synthesized on-the-fly by the lens.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":163943,"byte_end":164008,"line_start":43,"line_end":43,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":164558,"byte_end":164566,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"with_mut","qualname":"::lens::lens::Lens::with_mut","value":"pub fn with_mut<V, F: FnOnce(&mut U) -> V>(&Self, &mut T, F) -> V","parent":{"krate":0,"index":764},"children":[],"decl_id":null,"docs":" Get mutable access to the field.","sig":null,"attributes":[{"value":"/ Get mutable access to the field.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":164078,"byte_end":164114,"line_start":46,"line_end":46,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":164119,"byte_end":164122,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This method is defined in terms of a closure, rather than simply","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":164127,"byte_end":164195,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ yielding a mutable reference, because it is intended to be used","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":164200,"byte_end":164267,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/ with value-type data (also known as immutable data structures).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":164272,"byte_end":164339,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/ For example, a lens for an immutable list might be implemented by","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":164344,"byte_end":164413,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ cloning the list, giving the closure mutable access to the clone,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":164418,"byte_end":164487,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ then updating the reference after the closure returns.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":164492,"byte_end":164550,"line_start":53,"line_end":53,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":164678,"byte_end":164685,"line_start":58,"line_end":58,"column_start":11,"column_end":18},"name":"LensExt","qualname":"::lens::lens::LensExt","value":"LensExt<A: ?Sized, B: ?Sized>: Lens<A, B>","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":790}],"decl_id":null,"docs":" Helpers for manipulating `Lens`es\n","sig":null,"attributes":[{"value":"/ Helpers for manipulating `Lens`es","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":164630,"byte_end":164667,"line_start":57,"line_end":57,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":164775,"byte_end":164778,"line_start":60,"line_end":60,"column_start":8,"column_end":11},"name":"get","qualname":"::lens::lens::LensExt::get","value":"pub fn get(&Self, &A) -> B where B: Clone","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":" Copy the targeted value out of `data`\n","sig":null,"attributes":[{"value":"/ Copy the targeted value out of `data`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":164726,"byte_end":164767,"line_start":59,"line_end":59,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":164940,"byte_end":164943,"line_start":68,"line_end":68,"column_start":8,"column_end":11},"name":"put","qualname":"::lens::lens::LensExt::put","value":"pub fn put(&Self, &mut A, B) where B: Sized","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":" Set the targeted value in `data` to `value`\n","sig":null,"attributes":[{"value":"/ Set the targeted value in `data` to `value`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":164885,"byte_end":164932,"line_start":67,"line_end":67,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":165360,"byte_end":165364,"line_start":83,"line_end":83,"column_start":8,"column_end":12},"name":"then","qualname":"::lens::lens::LensExt::then","value":"pub fn then<Other, C: ?Sized>(Self, Other) -> Then<Self, Other, B> where\nOther: Lens<B, C> + Sized, C, Self: Sized","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":" Compose a `Lens<A, B>` with a `Lens<B, C>` to produce a `Lens<A, C>`","sig":null,"attributes":[{"value":"/ Compose a `Lens<A, B>` with a `Lens<B, C>` to produce a `Lens<A, C>`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":165065,"byte_end":165137,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":165142,"byte_end":165145,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":165150,"byte_end":165157,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ # use druid::*;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":165162,"byte_end":165181,"line_start":78,"line_end":78,"column_start":5,"column_end":24}},{"value":"/ struct Foo { x: (u32, bool) }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":165186,"byte_end":165219,"line_start":79,"line_end":79,"column_start":5,"column_end":38}},{"value":"/ let lens = lens!(Foo, x).then(lens!((u32, bool), 1));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":165224,"byte_end":165281,"line_start":80,"line_end":80,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(lens.get(&Foo { x: (0, true) }), true);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":165286,"byte_end":165340,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":165345,"byte_end":165352,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":166202,"byte_end":166205,"line_start":105,"line_end":105,"column_start":8,"column_end":11},"name":"map","qualname":"::lens::lens::LensExt::map","value":"pub fn map<Get, Put, C>(Self, Get, Put) -> Then<Self, Map<Get, Put>, B> where\nGet: Fn(&B) -> C, Put: Fn(&mut B, C) -> (), Self: Sized","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":" Combine a `Lens<A, B>` with a function that can transform a `B` and its inverse.","sig":null,"attributes":[{"value":"/ Combine a `Lens<A, B>` with a function that can transform a `B` and its inverse.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":165552,"byte_end":165636,"line_start":92,"line_end":92,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":165641,"byte_end":165644,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Useful for cases where the desired value doesn't physically exist in `A`, but can be","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":165649,"byte_end":165737,"line_start":94,"line_end":94,"column_start":5,"column_end":93}},{"value":"/ computed. For example, a lens like the following might be used to adapt a value with the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":165742,"byte_end":165834,"line_start":95,"line_end":95,"column_start":5,"column_end":97}},{"value":"/ range 0-2 for use with a `Widget<f64>` like `Slider` that has a range of 0-1:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":165839,"byte_end":165920,"line_start":96,"line_end":96,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":165925,"byte_end":165928,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":165933,"byte_end":165940,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ # use druid::*;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":165945,"byte_end":165964,"line_start":99,"line_end":99,"column_start":5,"column_end":24}},{"value":"/ let lens = lens!((bool, f64), 1);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":165969,"byte_end":166006,"line_start":100,"line_end":100,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(lens.map(|x| x / 2.0, |x, y| *x = y * 2.0).get(&(true, 2.0)), 1.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":166011,"byte_end":166093,"line_start":101,"line_end":101,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":166098,"byte_end":166105,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":166110,"byte_end":166113,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ The computed `C` may represent a whole or only part of the original `B`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":166118,"byte_end":166194,"line_start":104,"line_end":104,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":166574,"byte_end":166579,"line_start":120,"line_end":120,"column_start":8,"column_end":13},"name":"deref","qualname":"::lens::lens::LensExt::deref","value":"pub fn deref(Self) -> Then<Self, Deref, B> where B: ops::Deref +\nops::DerefMut, Self: Sized","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":" Invoke a type's `Deref` impl","sig":null,"attributes":[{"value":"/ Invoke a type's `Deref` impl","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":166417,"byte_end":166449,"line_start":114,"line_end":114,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":166454,"byte_end":166457,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":166462,"byte_end":166469,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ # use druid::*;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":166474,"byte_end":166493,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(lens::Id.deref().get(&Box::new(42)), 42);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":166498,"byte_end":166554,"line_start":118,"line_end":118,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":166559,"byte_end":166566,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":166888,"byte_end":166893,"line_start":134,"line_end":134,"column_start":8,"column_end":13},"name":"index","qualname":"::lens::lens::LensExt::index","value":"pub fn index<I>(Self, I) -> Then<Self, Index<I>, B> where I: Clone,\nB: ops::Index<I> + ops::IndexMut<I>, Self: Sized","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":" Access an index in a container","sig":null,"attributes":[{"value":"/ Access an index in a container","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":166722,"byte_end":166756,"line_start":128,"line_end":128,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":166761,"byte_end":166764,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":166769,"byte_end":166776,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ # use druid::*;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":166781,"byte_end":166800,"line_start":131,"line_end":131,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(lens::Id.index(2).get(&vec![0u32, 1, 2, 3]), 2);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":166805,"byte_end":166868,"line_start":132,"line_end":132,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":166873,"byte_end":166880,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":167610,"byte_end":167616,"line_start":156,"line_end":156,"column_start":8,"column_end":14},"name":"in_arc","qualname":"::lens::lens::LensExt::in_arc","value":"pub fn in_arc(Self) -> InArc<Self> where A: Clone, B: Data, Self: Sized","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":" Adapt to operate on the contents of an `Arc` with efficient copy-on-write semantics","sig":null,"attributes":[{"value":"/ Adapt to operate on the contents of an `Arc` with efficient copy-on-write semantics","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":167088,"byte_end":167175,"line_start":143,"line_end":143,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":167180,"byte_end":167183,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":167188,"byte_end":167195,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ # use druid::*; use std::sync::Arc;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":167200,"byte_end":167239,"line_start":146,"line_end":146,"column_start":5,"column_end":44}},{"value":"/ let lens = lens::Id.index(2).in_arc();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":167244,"byte_end":167286,"line_start":147,"line_end":147,"column_start":5,"column_end":47}},{"value":"/ let mut x = Arc::new(vec![0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":167291,"byte_end":167334,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/ let original = x.clone();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":167339,"byte_end":167368,"line_start":149,"line_end":149,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(lens.get(&x), 2);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":167373,"byte_end":167405,"line_start":150,"line_end":150,"column_start":5,"column_end":37}},{"value":"/ lens.put(&mut x, 2);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":167410,"byte_end":167434,"line_start":151,"line_end":151,"column_start":5,"column_end":29}},{"value":"/ assert!(Arc::ptr_eq(&original, &x), \"no-op writes don't cause a deep copy\");","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":167439,"byte_end":167519,"line_start":152,"line_end":152,"column_start":5,"column_end":85}},{"value":"/ lens.put(&mut x, 42);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":167524,"byte_end":167549,"line_start":153,"line_end":153,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(&*x, &[0, 1, 42, 3]);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":167554,"byte_end":167590,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":167595,"byte_end":167602,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":168844,"byte_end":168852,"line_start":190,"line_end":190,"column_start":12,"column_end":20},"name":"LensWrap","qualname":"::lens::lens::LensWrap","value":"LensWrap {  }","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801}],"decl_id":null,"docs":" A wrapper for its widget subtree to have access to a part\n of its parent's data.","sig":null,"attributes":[{"value":"/ A wrapper for its widget subtree to have access to a part","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":167872,"byte_end":167933,"line_start":170,"line_end":170,"column_start":1,"column_end":62}},{"value":"/ of its parent's data.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":167934,"byte_end":167959,"line_start":171,"line_end":171,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":167960,"byte_end":167963,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ Every widget in druid is instantiated with access to data of some","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":167964,"byte_end":168033,"line_start":173,"line_end":173,"column_start":1,"column_end":70}},{"value":"/ type; the root widget has access to the entire application data.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":168034,"byte_end":168102,"line_start":174,"line_end":174,"column_start":1,"column_end":69}},{"value":"/ Often, a part of the widget hierarchy is only concerned with a part","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":168103,"byte_end":168174,"line_start":175,"line_end":175,"column_start":1,"column_end":72}},{"value":"/ of that data. The `LensWrap` widget is a way to \"focus\" the data","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":168175,"byte_end":168243,"line_start":176,"line_end":176,"column_start":1,"column_end":69}},{"value":"/ reference down, for the subtree. One advantage is performance;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":168244,"byte_end":168310,"line_start":177,"line_end":177,"column_start":1,"column_end":67}},{"value":"/ data changes that don't intersect the scope of the lens aren't","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":168311,"byte_end":168377,"line_start":178,"line_end":178,"column_start":1,"column_end":67}},{"value":"/ propagated.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":168378,"byte_end":168393,"line_start":179,"line_end":179,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":168394,"byte_end":168397,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ Another advantage is generality and reuse. If a widget (or tree of","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":168398,"byte_end":168468,"line_start":181,"line_end":181,"column_start":1,"column_end":71}},{"value":"/ widgets) is designed to work with some chunk of data, then with a","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":168469,"byte_end":168538,"line_start":182,"line_end":182,"column_start":1,"column_end":70}},{"value":"/ lens that same code can easily be reused across all occurrences of","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":168539,"byte_end":168609,"line_start":183,"line_end":183,"column_start":1,"column_end":71}},{"value":"/ that chunk within the application state.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":168610,"byte_end":168654,"line_start":184,"line_end":184,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":168655,"byte_end":168658,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ This wrapper takes a [`Lens`] as an argument, which is a specification","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":168659,"byte_end":168733,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/ of a struct field, or some other way of narrowing the scope.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":168734,"byte_end":168798,"line_start":187,"line_end":187,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":168799,"byte_end":168802,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ [`Lens`]: trait.Lens.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":168803,"byte_end":168832,"line_start":189,"line_end":189,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":169214,"byte_end":169217,"line_start":202,"line_end":202,"column_start":12,"column_end":15},"name":"new","qualname":"<LensWrap<U, L, W>>::new","value":"pub fn new(W, L) -> LensWrap<U, L, W>","parent":null,"children":[],"decl_id":null,"docs":" Wrap a widget with a lens.","sig":null,"attributes":[{"value":"/ Wrap a widget with a lens.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":169027,"byte_end":169057,"line_start":198,"line_end":198,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":169062,"byte_end":169065,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ When the lens has type `Lens<T, U>`, the inner widget has data","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":169070,"byte_end":169136,"line_start":200,"line_end":200,"column_start":5,"column_end":71}},{"value":"/ of type `U`, and the wrapped widget has data of type `T`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":169141,"byte_end":169202,"line_start":201,"line_end":201,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":171009,"byte_end":171014,"line_start":265,"line_end":265,"column_start":12,"column_end":17},"name":"Field","qualname":"::lens::lens::Field","value":"Field {  }","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":828}],"decl_id":null,"docs":" Lens accessing a member of some type using accessor functions","sig":null,"attributes":[{"value":"/ Lens accessing a member of some type using accessor functions","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":170798,"byte_end":170863,"line_start":258,"line_end":258,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":170864,"byte_end":170867,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ See also the `lens` macro.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":170868,"byte_end":170898,"line_start":260,"line_end":260,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":170899,"byte_end":170902,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":170903,"byte_end":170910,"line_start":262,"line_end":262,"column_start":1,"column_end":8}},{"value":"/ let lens = druid::lens::Field::new(|x: &Vec<u32>| &x[42], |x| &mut x[42]);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":170911,"byte_end":170989,"line_start":263,"line_end":263,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":170990,"byte_end":170997,"line_start":264,"line_end":264,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":171175,"byte_end":171178,"line_start":272,"line_end":272,"column_start":12,"column_end":15},"name":"new","qualname":"<Field<Get, GetMut>>::new","value":"pub fn new<T: ?Sized, U: ?Sized>(Get, GetMut) -> Self where Get: Fn(&T) -> &U,\nGetMut: Fn(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Construct a lens from a pair of getter functions\n","sig":null,"attributes":[{"value":"/ Construct a lens from a pair of getter functions","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":171111,"byte_end":171163,"line_start":271,"line_end":271,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":3750},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":172398,"byte_end":172402,"line_start":319,"line_end":319,"column_start":12,"column_end":16},"name":"Then","qualname":"::lens::lens::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":3754},{"krate":0,"index":3755},{"krate":0,"index":3756}],"decl_id":null,"docs":" `Lens` composed of two lenses joined together\n","sig":null,"attributes":[{"value":"/ `Lens` composed of two lenses joined together","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":172314,"byte_end":172363,"line_start":317,"line_end":317,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":172599,"byte_end":172602,"line_start":329,"line_end":329,"column_start":12,"column_end":15},"name":"new","qualname":"<Then<T, U, B>>::new","value":"pub fn new<A: ?Sized, C: ?Sized>(T, U) -> Self where T: Lens<A, B>,\nU: Lens<B, C>","parent":null,"children":[],"decl_id":null,"docs":" Compose two lenses","sig":null,"attributes":[{"value":"/ Compose two lenses","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":172523,"byte_end":172545,"line_start":326,"line_end":326,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":172550,"byte_end":172553,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ See also `LensExt::then`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":172558,"byte_end":172587,"line_start":328,"line_end":328,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3766},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":173550,"byte_end":173553,"line_start":371,"line_end":371,"column_start":12,"column_end":15},"name":"Map","qualname":"::lens::lens::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":3769},{"krate":0,"index":3770}],"decl_id":null,"docs":" `Lens` built from a getter and a setter\n","sig":null,"attributes":[{"value":"/ `Lens` built from a getter and a setter","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":173465,"byte_end":173508,"line_start":369,"line_end":369,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":173707,"byte_end":173710,"line_start":380,"line_end":380,"column_start":12,"column_end":15},"name":"new","qualname":"<Map<Get, Put>>::new","value":"pub fn new<A: ?Sized, B>(Get, Put) -> Self where Get: Fn(&A) -> B,\nPut: Fn(&mut A, B) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Construct a mapping","sig":null,"attributes":[{"value":"/ Construct a mapping","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":173632,"byte_end":173655,"line_start":377,"line_end":377,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":173660,"byte_end":173663,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ See also `LensExt::map`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":173668,"byte_end":173695,"line_start":379,"line_end":379,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":3782},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":174403,"byte_end":174408,"line_start":410,"line_end":410,"column_start":12,"column_end":17},"name":"Deref","qualname":"::lens::lens::Deref","value":"","parent":null,"children":[],"decl_id":null,"docs":" `Lens` for invoking `Deref` and `DerefMut` on a type","sig":null,"attributes":[{"value":"/ `Lens` for invoking `Deref` and `DerefMut` on a type","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":174270,"byte_end":174326,"line_start":406,"line_end":406,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":174327,"byte_end":174330,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ See also `LensExt::deref`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":174331,"byte_end":174361,"line_start":408,"line_end":408,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3789},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":174800,"byte_end":174805,"line_start":426,"line_end":426,"column_start":12,"column_end":17},"name":"Index","qualname":"::lens::lens::Index","value":"Index {  }","parent":null,"children":[{"krate":0,"index":3791}],"decl_id":null,"docs":" `Lens` for indexing containers\n","sig":null,"attributes":[{"value":"/ `Lens` for indexing containers","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":174724,"byte_end":174758,"line_start":424,"line_end":424,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":174959,"byte_end":174962,"line_start":434,"line_end":434,"column_start":12,"column_end":15},"name":"new","qualname":"<Index<I>>::new","value":"pub fn new(I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a lens that accesses a particular index","sig":null,"attributes":[{"value":"/ Construct a lens that accesses a particular index","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":174851,"byte_end":174904,"line_start":431,"line_end":431,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":174909,"byte_end":174912,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ See also `LensExt::index`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":174917,"byte_end":174947,"line_start":433,"line_end":433,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3800},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":175605,"byte_end":175607,"line_start":456,"line_end":456,"column_start":12,"column_end":14},"name":"Id","qualname":"::lens::lens::Id","value":"","parent":null,"children":[],"decl_id":null,"docs":" The identity lens: the lens which does nothing, i.e. exposes exactly the original value.","sig":null,"attributes":[{"value":"/ The identity lens: the lens which does nothing, i.e. exposes exactly the original value.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":175381,"byte_end":175473,"line_start":452,"line_end":452,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":175474,"byte_end":175477,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ Useful for starting a lens combinator chain, or passing to lens-based interfaces.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":175478,"byte_end":175563,"line_start":454,"line_end":454,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":3807},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":176029,"byte_end":176034,"line_start":472,"line_end":472,"column_start":12,"column_end":17},"name":"InArc","qualname":"::lens::lens::InArc","value":"InArc {  }","parent":null,"children":[{"krate":0,"index":3809}],"decl_id":null,"docs":" A `Lens` that exposes data within an `Arc` with copy-on-write semantics","sig":null,"attributes":[{"value":"/ A `Lens` that exposes data within an `Arc` with copy-on-write semantics","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":175836,"byte_end":175911,"line_start":468,"line_end":468,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":175912,"byte_end":175915,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ A copy is only made in the event that a different value is written.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":175916,"byte_end":175987,"line_start":470,"line_end":470,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":176174,"byte_end":176177,"line_start":480,"line_end":480,"column_start":12,"column_end":15},"name":"new","qualname":"<InArc<L>>::new","value":"pub fn new<A, B>(L) -> Self where A: Clone, B: Data, L: Lens<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Adapt a lens to operate on an `Arc`","sig":null,"attributes":[{"value":"/ Adapt a lens to operate on an `Arc`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":176080,"byte_end":176119,"line_start":477,"line_end":477,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":176124,"byte_end":176127,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ See also `LensExt::in_arc`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":176132,"byte_end":176162,"line_start":479,"line_end":479,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3825},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":180275,"byte_end":180290,"line_start":92,"line_end":92,"column_start":12,"column_end":27},"name":"LocalizedString","qualname":"::localization::LocalizedString","value":"LocalizedString {  }","parent":null,"children":[{"krate":0,"index":3827},{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3830},{"krate":0,"index":3831}],"decl_id":null,"docs":" A string that can be localized based on the current locale.","sig":null,"attributes":[{"value":"/ A string that can be localized based on the current locale.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":180042,"byte_end":180105,"line_start":87,"line_end":87,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":180106,"byte_end":180109,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ At its simplest, a `LocalizedString` is a key that can be resolved","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":180110,"byte_end":180180,"line_start":89,"line_end":89,"column_start":1,"column_end":71}},{"value":"/ against a map of localized strings for a given locale.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":180181,"byte_end":180239,"line_start":90,"line_end":90,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":187579,"byte_end":187582,"line_start":295,"line_end":295,"column_start":18,"column_end":21},"name":"new","qualname":"<LocalizedString<T>>::new","value":"pub const fn new(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `LocalizedString` with the given key.\n","sig":null,"attributes":[{"value":"/ Create a new `LocalizedString` with the given key.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":187507,"byte_end":187561,"line_start":294,"line_end":294,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":187934,"byte_end":187950,"line_start":308,"line_end":308,"column_start":12,"column_end":28},"name":"with_placeholder","qualname":"<LocalizedString<T>>::with_placeholder","value":"pub fn with_placeholder<impl Into<String>: Into<String>>(Self,\n                                                         impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a placeholder value. This will be used if localization fails.","sig":null,"attributes":[{"value":"/ Add a placeholder value. This will be used if localization fails.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":187792,"byte_end":187861,"line_start":305,"line_end":305,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":187866,"byte_end":187869,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This is intended for use during prototyping.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":187874,"byte_end":187922,"line_start":307,"line_end":307,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":188238,"byte_end":188251,"line_start":315,"line_end":315,"column_start":12,"column_end":25},"name":"localized_str","qualname":"<LocalizedString<T>>::localized_str","value":"pub fn localized_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Return the localized value for this string, or the placeholder, if\n the localization is missing, or the key if there is no placeholder.\n","sig":null,"attributes":[{"value":"/ Return the localized value for this string, or the placeholder, if","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":188080,"byte_end":188150,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ the localization is missing, or the key if there is no placeholder.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":188155,"byte_end":188226,"line_start":314,"line_end":314,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":188602,"byte_end":188610,"line_start":325,"line_end":325,"column_start":12,"column_end":20},"name":"with_arg","qualname":"<LocalizedString<T>>::with_arg","value":"pub fn with_arg<impl Fn(&T, &Env) -> FluentValue<'static> + 'static: Fn(&T,\n                                                                        &Env)\n                -> FluentValue +\n                'static>(Self, &'static str,\n                         impl Fn(&T, &Env) -> FluentValue<'static> + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a named argument and a corresponding closure. This closure\n is a function that will return a value for the given key from the current\n environment and data.\n","sig":null,"attributes":[{"value":"/ Add a named argument and a corresponding closure. This closure","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":188412,"byte_end":188478,"line_start":322,"line_end":322,"column_start":5,"column_end":71}},{"value":"/ is a function that will return a value for the given key from the current","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":188483,"byte_end":188560,"line_start":323,"line_end":323,"column_start":5,"column_end":82}},{"value":"/ environment and data.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":188565,"byte_end":188590,"line_start":324,"line_end":324,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":189065,"byte_end":189072,"line_start":340,"line_end":340,"column_start":12,"column_end":19},"name":"resolve","qualname":"<LocalizedString<T>>::resolve","value":"pub fn resolve<'a>(&'a mut Self, &T, &Env) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Lazily compute the localized value for this string based on the provided\n environment and data.","sig":null,"attributes":[{"value":"/ Lazily compute the localized value for this string based on the provided","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":188868,"byte_end":188944,"line_start":336,"line_end":336,"column_start":5,"column_end":81}},{"value":"/ environment and data.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":188949,"byte_end":188974,"line_start":337,"line_end":337,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":188979,"byte_end":188982,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if the current value of the string has changed.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":188987,"byte_end":189053,"line_start":339,"line_end":339,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":3838},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":196270,"byte_end":196278,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"MenuDesc","qualname":"::menu::MenuDesc","value":"MenuDesc {  }","parent":null,"children":[{"krate":0,"index":3840},{"krate":0,"index":3841}],"decl_id":null,"docs":" A platform-agnostic description of an application, window, or context\n menu.\n","sig":null,"attributes":[{"value":"/ A platform-agnostic description of an application, window, or context","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":196158,"byte_end":196231,"line_start":114,"line_end":114,"column_start":1,"column_end":74}},{"value":"/ menu.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":196232,"byte_end":196241,"line_start":115,"line_end":115,"column_start":1,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3847},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":196561,"byte_end":196565,"line_start":127,"line_end":127,"column_start":5,"column_end":9},"name":"Item","qualname":"::menu::MenuEntry::Item","value":"MenuEntry::Item(MenuItem<T>)","parent":{"krate":0,"index":3845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3850},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":196584,"byte_end":196591,"line_start":128,"line_end":128,"column_start":5,"column_end":12},"name":"SubMenu","qualname":"::menu::MenuEntry::SubMenu","value":"MenuEntry::SubMenu(MenuDesc<T>)","parent":{"krate":0,"index":3845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3853},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":196610,"byte_end":196619,"line_start":129,"line_end":129,"column_start":5,"column_end":14},"name":"Separator","qualname":"::menu::MenuEntry::Separator","value":"MenuEntry::Separator","parent":{"krate":0,"index":3845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3845},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":196542,"byte_end":196551,"line_start":126,"line_end":126,"column_start":10,"column_end":19},"name":"MenuEntry","qualname":"::menu::MenuEntry","value":"pub enum MenuEntry<T> { Item(MenuItem<T>), SubMenu(MenuDesc<T>), Separator, }","parent":null,"children":[{"krate":0,"index":3847},{"krate":0,"index":3850},{"krate":0,"index":3853}],"decl_id":null,"docs":" An item in a menu, which may be a normal item, a submenu, or a separator.\n","sig":null,"attributes":[{"value":"/ An item in a menu, which may be a normal item, a submenu, or a separator.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":196394,"byte_end":196471,"line_start":123,"line_end":123,"column_start":1,"column_end":78}},{"value":"allow(clippy :: large_enum_variant)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":196496,"byte_end":196532,"line_start":125,"line_end":125,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3861},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":197084,"byte_end":197092,"line_start":143,"line_end":143,"column_start":12,"column_end":20},"name":"MenuItem","qualname":"::menu::MenuItem","value":"MenuItem {  }","parent":null,"children":[{"krate":0,"index":3863},{"krate":0,"index":3864},{"krate":0,"index":3865},{"krate":0,"index":3866},{"krate":0,"index":3867},{"krate":0,"index":3868},{"krate":0,"index":3869}],"decl_id":null,"docs":" A normal menu item.","sig":null,"attributes":[{"value":"/ A normal menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":196624,"byte_end":196647,"line_start":132,"line_end":132,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":196648,"byte_end":196651,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ A `MenuItem` always has a title (a [`LocalizedString`]) as well a [`Command`],","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":196652,"byte_end":196734,"line_start":134,"line_end":134,"column_start":1,"column_end":83}},{"value":"/ that is sent to the application when the item is selected.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":196735,"byte_end":196797,"line_start":135,"line_end":135,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":196798,"byte_end":196801,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ In addition, other properties can be set during construction, such as whether","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":196802,"byte_end":196883,"line_start":137,"line_end":137,"column_start":1,"column_end":82}},{"value":"/ the item is selected (checked), or enabled, or if it has a hotkey.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":196884,"byte_end":196954,"line_start":138,"line_end":138,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":196955,"byte_end":196958,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ [`LocalizedString`]: struct.LocalizedString.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":196959,"byte_end":197011,"line_start":140,"line_end":140,"column_start":1,"column_end":53}},{"value":"/ [`Command`]: struct.Command.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":197012,"byte_end":197048,"line_start":141,"line_end":141,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3876},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":197489,"byte_end":197500,"line_start":157,"line_end":157,"column_start":12,"column_end":23},"name":"ContextMenu","qualname":"::menu::ContextMenu","value":"ContextMenu {  }","parent":null,"children":[{"krate":0,"index":3878},{"krate":0,"index":3879}],"decl_id":null,"docs":" A menu displayed as a pop-over.\n","sig":null,"attributes":[{"value":"/ A menu displayed as a pop-over.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":197418,"byte_end":197453,"line_start":155,"line_end":155,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":197996,"byte_end":197999,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"new","qualname":"<MenuItem<T>>::new","value":"pub fn new<impl Into<Command>: Into<Command>>(LocalizedString<T>,\n                                              impl Into<Command>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `MenuItem`.\n","sig":null,"attributes":[{"value":"/ Create a new `MenuItem`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":197956,"byte_end":197984,"line_start":172,"line_end":172,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":198814,"byte_end":198820,"line_start":198,"line_end":198,"column_start":12,"column_end":18},"name":"hotkey","qualname":"<MenuItem<T>>::hotkey","value":"pub fn hotkey<impl Into<Option<RawMods>>: Into<Option<RawMods>>,\n              impl Into<KeyCompare>: Into<KeyCompare>>(Self,\n                                                       impl Into<Option<RawMods>>,\n                                                       impl Into<KeyCompare>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" A builder method that adds a hotkey for this item.","sig":null,"attributes":[{"value":"/ A builder method that adds a hotkey for this item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":198322,"byte_end":198376,"line_start":185,"line_end":185,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":198381,"byte_end":198384,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":198389,"byte_end":198402,"line_start":187,"line_end":187,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":198407,"byte_end":198410,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":198415,"byte_end":198422,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ # use druid::{LocalizedString, MenuDesc, MenuItem, Selector, SysMods};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":198427,"byte_end":198501,"line_start":190,"line_end":190,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":198506,"byte_end":198509,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let item = MenuItem::new(LocalizedString::new(\"My Menu Item\"), Selector::new(\"My Selector\"))","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":198514,"byte_end":198610,"line_start":192,"line_end":192,"column_start":5,"column_end":101}},{"value":"/     .hotkey(SysMods::Cmd, \"m\");","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":198615,"byte_end":198650,"line_start":193,"line_end":193,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":198655,"byte_end":198658,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # // hide the type param in or example code by letting it be inferred here","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":198663,"byte_end":198741,"line_start":195,"line_end":195,"column_start":5,"column_end":83}},{"value":"/ # MenuDesc::<u32>::empty().append(item);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":198746,"byte_end":198790,"line_start":196,"line_end":196,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":198795,"byte_end":198802,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":199018,"byte_end":199026,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"disabled","qualname":"<MenuItem<T>>::disabled","value":"pub fn disabled(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disable this menu item.\n","sig":null,"attributes":[{"value":"/ Disable this menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":198979,"byte_end":199006,"line_start":203,"line_end":203,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":199174,"byte_end":199185,"line_start":210,"line_end":210,"column_start":12,"column_end":23},"name":"disabled_if","qualname":"<MenuItem<T>>::disabled_if","value":"pub fn disabled_if<impl FnMut() -> bool: FnMut() ->\n                   bool>(Self, impl FnMut() -> bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disable this menu item if the provided predicate is true.\n","sig":null,"attributes":[{"value":"/ Disable this menu item if the provided predicate is true.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":199101,"byte_end":199162,"line_start":209,"line_end":209,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":199423,"byte_end":199431,"line_start":219,"line_end":219,"column_start":12,"column_end":20},"name":"selected","qualname":"<MenuItem<T>>::selected","value":"pub fn selected(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Mark this menu item as selected. This will usually be indicated by\n a checkmark.\n","sig":null,"attributes":[{"value":"/ Mark this menu item as selected. This will usually be indicated by","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":199320,"byte_end":199390,"line_start":217,"line_end":217,"column_start":5,"column_end":75}},{"value":"/ a checkmark.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":199395,"byte_end":199411,"line_start":218,"line_end":218,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":199584,"byte_end":199595,"line_start":225,"line_end":225,"column_start":12,"column_end":23},"name":"selected_if","qualname":"<MenuItem<T>>::selected_if","value":"pub fn selected_if<impl FnMut() -> bool: FnMut() ->\n                   bool>(Self, impl FnMut() -> bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Mark this item as selected, if the provided predicate is true.\n","sig":null,"attributes":[{"value":"/ Mark this item as selected, if the provided predicate is true.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":199506,"byte_end":199572,"line_start":224,"line_end":224,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":199801,"byte_end":199806,"line_start":235,"line_end":235,"column_start":12,"column_end":17},"name":"empty","qualname":"<MenuDesc<T>>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new, empty menu.\n","sig":null,"attributes":[{"value":"/ Create a new, empty menu.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":199760,"byte_end":199789,"line_start":234,"line_end":234,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":199929,"byte_end":199932,"line_start":240,"line_end":240,"column_start":12,"column_end":15},"name":"new","qualname":"<MenuDesc<T>>::new","value":"pub fn new(LocalizedString<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new menu with the given title.\n","sig":null,"attributes":[{"value":"/ Create a new menu with the given title.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":199874,"byte_end":199917,"line_start":239,"line_end":239,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":200279,"byte_end":200295,"line_start":251,"line_end":251,"column_start":12,"column_end":28},"name":"platform_default","qualname":"<MenuDesc<T>>::platform_default","value":"pub fn platform_default() -> Option<MenuDesc<T>>","parent":null,"children":[],"decl_id":null,"docs":" If this platform always expects windows to have a menu by default,\n returns a menu. Otherwise returns `None`.\n","sig":null,"attributes":[{"value":"/ If this platform always expects windows to have a menu by default,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":200116,"byte_end":200186,"line_start":248,"line_end":248,"column_start":5,"column_end":75}},{"value":"/ returns a menu. Otherwise returns `None`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":200191,"byte_end":200236,"line_start":249,"line_end":249,"column_start":5,"column_end":50}},{"value":"allow(unreachable_code)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":200241,"byte_end":200267,"line_start":250,"line_end":250,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":201464,"byte_end":201475,"line_start":284,"line_end":284,"column_start":12,"column_end":23},"name":"append_iter","qualname":"<MenuDesc<T>>::append_iter","value":"pub fn append_iter<I: Iterator<Item = MenuItem<T>>,\n                   impl FnOnce() -> I: FnOnce() ->\n                   I>(Self, impl FnOnce() -> I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Given a function that produces an iterator, appends that iterator's\n items to this menu.","sig":null,"attributes":[{"value":"/ Given a function that produces an iterator, appends that iterator's","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":200697,"byte_end":200768,"line_start":262,"line_end":262,"column_start":5,"column_end":76}},{"value":"/ items to this menu.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":200773,"byte_end":200796,"line_start":263,"line_end":263,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":200801,"byte_end":200804,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":200809,"byte_end":200823,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":200828,"byte_end":200831,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":200836,"byte_end":200843,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ use druid::{Command, LocalizedString, MenuDesc, MenuItem, Selector};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":200848,"byte_end":200920,"line_start":268,"line_end":268,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":200925,"byte_end":200928,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ let num_items: usize = 4;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":200933,"byte_end":200962,"line_start":270,"line_end":270,"column_start":5,"column_end":34}},{"value":"/ const MENU_COUNT_ACTION: Selector<usize> = Selector::new(\"menu-count-action\");","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":200967,"byte_end":201049,"line_start":271,"line_end":271,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":201054,"byte_end":201057,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let my_menu: MenuDesc<u32> = MenuDesc::empty()","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":201062,"byte_end":201112,"line_start":273,"line_end":273,"column_start":5,"column_end":55}},{"value":"/     .append_iter(|| (0..num_items).map(|i| {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":201117,"byte_end":201165,"line_start":274,"line_end":274,"column_start":5,"column_end":53}},{"value":"/         MenuItem::new(","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":201170,"byte_end":201196,"line_start":275,"line_end":275,"column_start":5,"column_end":31}},{"value":"/             LocalizedString::new(\"hello-counter\").with_arg(\"count\", move |_, _| i.into()),","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":201201,"byte_end":201295,"line_start":276,"line_end":276,"column_start":5,"column_end":99}},{"value":"/             Command::new(MENU_COUNT_ACTION, i),","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":201300,"byte_end":201351,"line_start":277,"line_end":277,"column_start":5,"column_end":56}},{"value":"/        )","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":201356,"byte_end":201368,"line_start":278,"line_end":278,"column_start":5,"column_end":17}},{"value":"/     })","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":201373,"byte_end":201383,"line_start":279,"line_end":279,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":201388,"byte_end":201394,"line_start":280,"line_end":280,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":201399,"byte_end":201402,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(my_menu.len(), 4);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":201407,"byte_end":201440,"line_start":282,"line_end":282,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":201445,"byte_end":201452,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":201698,"byte_end":201704,"line_start":292,"line_end":292,"column_start":12,"column_end":18},"name":"append","qualname":"<MenuDesc<T>>::append","value":"pub fn append<impl Into<MenuEntry<T>>: Into<MenuEntry<T>>>(Self,\n                                                           impl Into<MenuEntry<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Append an item to this menu.\n","sig":null,"attributes":[{"value":"/ Append an item to this menu.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":201654,"byte_end":201686,"line_start":291,"line_end":291,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":201890,"byte_end":201899,"line_start":298,"line_end":298,"column_start":12,"column_end":21},"name":"append_if","qualname":"<MenuDesc<T>>::append_if","value":"pub fn append_if<impl Into<MenuEntry<T>>: Into<MenuEntry<T>>,\n                 impl FnMut() -> bool: FnMut() ->\n                 bool>(Self, impl Into<MenuEntry<T>>, impl FnMut() -> bool)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Append an item to this menu if the predicate is matched.\n","sig":null,"attributes":[{"value":"/ Append an item to this menu if the predicate is matched.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":201818,"byte_end":201878,"line_start":297,"line_end":297,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":202108,"byte_end":202124,"line_start":306,"line_end":306,"column_start":12,"column_end":28},"name":"append_separator","qualname":"<MenuDesc<T>>::append_separator","value":"pub fn append_separator(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Append a separator.\n","sig":null,"attributes":[{"value":"/ Append a separator.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":202073,"byte_end":202096,"line_start":305,"line_end":305,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":202264,"byte_end":202267,"line_start":312,"line_end":312,"column_start":12,"column_end":15},"name":"len","qualname":"<MenuDesc<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of items in the menu.\n","sig":null,"attributes":[{"value":"/ The number of items in the menu.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":202216,"byte_end":202252,"line_start":311,"line_end":311,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":202383,"byte_end":202391,"line_start":317,"line_end":317,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<MenuDesc<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the menu contains no items.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the menu contains no items.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":202322,"byte_end":202371,"line_start":316,"line_end":316,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":205031,"byte_end":205034,"line_start":391,"line_end":391,"column_start":12,"column_end":15},"name":"new","qualname":"<ContextMenu<T>>::new","value":"pub fn new(MenuDesc<T>, Point) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1108},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":207016,"byte_end":207019,"line_start":455,"line_end":455,"column_start":9,"column_end":12},"name":"sys","qualname":"::menu::sys","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1122},{"krate":0,"index":1149}],"decl_id":null,"docs":" Pre-configured, platform appropriate menus and menu items.\n","sig":null,"attributes":[{"value":"/ Pre-configured, platform appropriate menus and menu items.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":206945,"byte_end":207007,"line_start":454,"line_end":454,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":1110},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":207101,"byte_end":207107,"line_start":459,"line_end":459,"column_start":13,"column_end":19},"name":"common","qualname":"::menu::sys::common","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1120}],"decl_id":null,"docs":" Menu items that exist on all platforms.\n","sig":null,"attributes":[{"value":"/ Menu items that exist on all platforms.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":207045,"byte_end":207088,"line_start":458,"line_end":458,"column_start":5,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":1112},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":207166,"byte_end":207169,"line_start":462,"line_end":462,"column_start":16,"column_end":19},"name":"cut","qualname":"::menu::sys::common::cut","value":"pub fn cut<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" 'Cut'.\n","sig":null,"attributes":[{"value":"/ 'Cut'.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":207140,"byte_end":207150,"line_start":461,"line_end":461,"column_start":9,"column_end":19}}]},{"kind":"Function","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":207383,"byte_end":207387,"line_start":468,"line_end":468,"column_start":16,"column_end":20},"name":"copy","qualname":"::menu::sys::common::copy","value":"pub fn copy<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Copy' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Copy' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":207342,"byte_end":207367,"line_start":467,"line_end":467,"column_start":9,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":1116},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":207604,"byte_end":207609,"line_start":474,"line_end":474,"column_start":16,"column_end":21},"name":"paste","qualname":"::menu::sys::common::paste","value":"pub fn paste<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Paste' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Paste' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":207562,"byte_end":207588,"line_start":473,"line_end":473,"column_start":9,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":207827,"byte_end":207831,"line_start":480,"line_end":480,"column_start":16,"column_end":20},"name":"undo","qualname":"::menu::sys::common::undo","value":"pub fn undo<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Undo' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Undo' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":207786,"byte_end":207811,"line_start":479,"line_end":479,"column_start":9,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":1120},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":208047,"byte_end":208051,"line_start":486,"line_end":486,"column_start":16,"column_end":20},"name":"redo","qualname":"::menu::sys::common::redo","value":"pub fn redo<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Redo' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Redo' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":208006,"byte_end":208031,"line_start":485,"line_end":485,"column_start":9,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":1122},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":208468,"byte_end":208471,"line_start":501,"line_end":501,"column_start":13,"column_end":16},"name":"win","qualname":"::menu::sys::win","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1124}],"decl_id":null,"docs":" Windows.\n","sig":null,"attributes":[{"value":"/ Windows.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":208443,"byte_end":208455,"line_start":500,"line_end":500,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":1124},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":208753,"byte_end":208757,"line_start":509,"line_end":509,"column_start":17,"column_end":21},"name":"file","qualname":"::menu::sys::win::file","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","parent":null,"children":[{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":1131},{"krate":0,"index":1133},{"krate":0,"index":1135},{"krate":0,"index":1137},{"krate":0,"index":1139},{"krate":0,"index":1141},{"krate":0,"index":1143},{"krate":0,"index":1145},{"krate":0,"index":1147}],"decl_id":null,"docs":" The 'File' menu.","sig":null,"attributes":[{"value":"/ The 'File' menu.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":208505,"byte_end":208525,"line_start":504,"line_end":504,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":208534,"byte_end":208537,"line_start":505,"line_end":505,"column_start":9,"column_end":12}},{"value":"/ These items are taken from [the win32 documentation][].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":208546,"byte_end":208605,"line_start":506,"line_end":506,"column_start":9,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":208614,"byte_end":208617,"line_start":507,"line_end":507,"column_start":9,"column_end":12}},{"value":"/ [the win32 documentation]: https://docs.microsoft.com/en-us/windows/win32/uxguide/cmd-menus#standard-menus","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":208626,"byte_end":208736,"line_start":508,"line_end":508,"column_start":9,"column_end":119}}]},{"kind":"Function","id":{"krate":0,"index":1127},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":209091,"byte_end":209098,"line_start":518,"line_end":518,"column_start":20,"column_end":27},"name":"default","qualname":"::menu::sys::win::file::default","value":"pub fn default<T: Data>() -> MenuDesc<T>","parent":null,"children":[],"decl_id":null,"docs":" A default file menu.","sig":null,"attributes":[{"value":"/ A default file menu.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":208841,"byte_end":208865,"line_start":513,"line_end":513,"column_start":13,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":208878,"byte_end":208881,"line_start":514,"line_end":514,"column_start":13,"column_end":16}},{"value":"/ This will not be suitable for many applications; you should","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":208894,"byte_end":208957,"line_start":515,"line_end":515,"column_start":13,"column_end":76}},{"value":"/ build the menu you need manually, using the items defined here","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":208970,"byte_end":209036,"line_start":516,"line_end":516,"column_start":13,"column_end":79}},{"value":"/ where appropriate.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":209049,"byte_end":209071,"line_start":517,"line_end":517,"column_start":13,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":209684,"byte_end":209687,"line_start":533,"line_end":533,"column_start":20,"column_end":23},"name":"new","qualname":"::menu::sys::win::file::new","value":"pub fn new<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'New' menu item.\n","sig":null,"attributes":[{"value":"/ The 'New' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":209640,"byte_end":209664,"line_start":532,"line_end":532,"column_start":13,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":209990,"byte_end":209994,"line_start":542,"line_end":542,"column_start":20,"column_end":24},"name":"open","qualname":"::menu::sys::win::file::open","value":"pub fn open<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Open...' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Open...' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":209942,"byte_end":209970,"line_start":541,"line_end":541,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1133},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":210338,"byte_end":210343,"line_start":551,"line_end":551,"column_start":20,"column_end":25},"name":"close","qualname":"::menu::sys::win::file::close","value":"pub fn close<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Close' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Close' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":210292,"byte_end":210318,"line_start":550,"line_end":550,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1135},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":210605,"byte_end":210609,"line_start":559,"line_end":559,"column_start":20,"column_end":24},"name":"save","qualname":"::menu::sys::win::file::save","value":"pub fn save<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Save' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Save' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":210560,"byte_end":210585,"line_start":558,"line_end":558,"column_start":13,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1137},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":211023,"byte_end":211036,"line_start":570,"line_end":570,"column_start":20,"column_end":33},"name":"save_ellipsis","qualname":"::menu::sys::win::file::save_ellipsis","value":"pub fn save_ellipsis<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Save...' menu item.","sig":null,"attributes":[{"value":"/ The 'Save...' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":210877,"byte_end":210905,"line_start":567,"line_end":567,"column_start":13,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":210918,"byte_end":210921,"line_start":568,"line_end":568,"column_start":13,"column_end":16}},{"value":"/ This is used if we need to show a dialog to select save location.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":210934,"byte_end":211003,"line_start":569,"line_end":569,"column_start":13,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":1139},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":211394,"byte_end":211401,"line_start":579,"line_end":579,"column_start":20,"column_end":27},"name":"save_as","qualname":"::menu::sys::win::file::save_as","value":"pub fn save_as<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Save as...' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Save as...' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":211343,"byte_end":211374,"line_start":578,"line_end":578,"column_start":13,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":1141},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":211756,"byte_end":211761,"line_start":588,"line_end":588,"column_start":20,"column_end":25},"name":"print","qualname":"::menu::sys::win::file::print","value":"pub fn print<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Print...' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Print...' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":211707,"byte_end":211736,"line_start":587,"line_end":587,"column_start":13,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":1143},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":212069,"byte_end":212082,"line_start":597,"line_end":597,"column_start":20,"column_end":33},"name":"print_preview","qualname":"::menu::sys::win::file::print_preview","value":"pub fn print_preview<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Print Preview' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Print Preview' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":212015,"byte_end":212049,"line_start":596,"line_end":596,"column_start":13,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1145},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":212362,"byte_end":212372,"line_start":605,"line_end":605,"column_start":20,"column_end":30},"name":"page_setup","qualname":"::menu::sys::win::file::page_setup","value":"pub fn page_setup<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Page Setup...' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Page Setup...' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":212308,"byte_end":212342,"line_start":604,"line_end":604,"column_start":13,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1147},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":212638,"byte_end":212642,"line_start":613,"line_end":613,"column_start":20,"column_end":24},"name":"exit","qualname":"::menu::sys::win::file::exit","value":"pub fn exit<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Exit' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Exit' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":212593,"byte_end":212618,"line_start":612,"line_end":612,"column_start":13,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":1149},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":212933,"byte_end":212936,"line_start":624,"line_end":624,"column_start":13,"column_end":16},"name":"mac","qualname":"::menu::sys::mac","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","parent":null,"children":[{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1153},{"krate":0,"index":1169}],"decl_id":null,"docs":" macOS.\n","sig":null,"attributes":[{"value":"/ macOS.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":212910,"byte_end":212920,"line_start":623,"line_end":623,"column_start":5,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":213013,"byte_end":213021,"line_start":628,"line_end":628,"column_start":16,"column_end":24},"name":"menu_bar","qualname":"::menu::sys::mac::menu_bar","value":"pub fn menu_bar<T: Data>() -> MenuDesc<T>","parent":null,"children":[],"decl_id":null,"docs":" A basic macOS menu bar.\n","sig":null,"attributes":[{"value":"/ A basic macOS menu bar.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":212970,"byte_end":212997,"line_start":627,"line_end":627,"column_start":9,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":213251,"byte_end":213262,"line_start":635,"line_end":635,"column_start":17,"column_end":28},"name":"application","qualname":"::menu::sys::mac::application","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","parent":null,"children":[{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1157},{"krate":0,"index":1159},{"krate":0,"index":1161},{"krate":0,"index":1163},{"krate":0,"index":1165},{"krate":0,"index":1167}],"decl_id":null,"docs":" The application menu\n","sig":null,"attributes":[{"value":"/ The application menu","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":213210,"byte_end":213234,"line_start":634,"line_end":634,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":213357,"byte_end":213364,"line_start":639,"line_end":639,"column_start":20,"column_end":27},"name":"default","qualname":"::menu::sys::mac::application::default","value":"pub fn default<T: Data>() -> MenuDesc<T>","parent":null,"children":[],"decl_id":null,"docs":" The default Application menu.\n","sig":null,"attributes":[{"value":"/ The default Application menu.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":213304,"byte_end":213337,"line_start":638,"line_end":638,"column_start":13,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":1157},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":214020,"byte_end":214025,"line_start":654,"line_end":654,"column_start":20,"column_end":25},"name":"about","qualname":"::menu::sys::mac::application::about","value":"pub fn about<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'About App' menu item.\n","sig":null,"attributes":[{"value":"/ The 'About App' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":213970,"byte_end":214000,"line_start":653,"line_end":653,"column_start":13,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":214288,"byte_end":214299,"line_start":662,"line_end":662,"column_start":20,"column_end":31},"name":"preferences","qualname":"::menu::sys::mac::application::preferences","value":"pub fn preferences<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The preferences menu item.\n","sig":null,"attributes":[{"value":"/ The preferences menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":214238,"byte_end":214268,"line_start":661,"line_end":661,"column_start":13,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1161},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":214617,"byte_end":214621,"line_start":671,"line_end":671,"column_start":20,"column_end":24},"name":"hide","qualname":"::menu::sys::mac::application::hide","value":"pub fn hide<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Hide' builtin menu item.\n","sig":null,"attributes":[{"value":"/ The 'Hide' builtin menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":214564,"byte_end":214597,"line_start":670,"line_end":670,"column_start":13,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":1163},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":214943,"byte_end":214954,"line_start":680,"line_end":680,"column_start":20,"column_end":31},"name":"hide_others","qualname":"::menu::sys::mac::application::hide_others","value":"pub fn hide_others<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Hide Others' builtin menu item.\n","sig":null,"attributes":[{"value":"/ The 'Hide Others' builtin menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":214883,"byte_end":214923,"line_start":679,"line_end":679,"column_start":13,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":215312,"byte_end":215320,"line_start":690,"line_end":690,"column_start":20,"column_end":28},"name":"show_all","qualname":"::menu::sys::mac::application::show_all","value":"pub fn show_all<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'show all' builtin menu item\n","sig":null,"attributes":[{"value":"/ The 'show all' builtin menu item","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":215217,"byte_end":215253,"line_start":688,"line_end":688,"column_start":13,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":215575,"byte_end":215579,"line_start":698,"line_end":698,"column_start":20,"column_end":24},"name":"quit","qualname":"::menu::sys::mac::application::quit","value":"pub fn quit<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Quit' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Quit' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":215530,"byte_end":215555,"line_start":697,"line_end":697,"column_start":13,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":215873,"byte_end":215877,"line_start":707,"line_end":707,"column_start":17,"column_end":21},"name":"file","qualname":"::menu::sys::mac::file","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1186},{"krate":0,"index":1188}],"decl_id":null,"docs":" The file menu.\n","sig":null,"attributes":[{"value":"/ The file menu.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":215838,"byte_end":215856,"line_start":706,"line_end":706,"column_start":9,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":1172},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":216211,"byte_end":216218,"line_start":716,"line_end":716,"column_start":20,"column_end":27},"name":"default","qualname":"::menu::sys::mac::file::default","value":"pub fn default<T: Data>() -> MenuDesc<T>","parent":null,"children":[],"decl_id":null,"docs":" A default file menu.","sig":null,"attributes":[{"value":"/ A default file menu.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":215961,"byte_end":215985,"line_start":711,"line_end":711,"column_start":13,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":215998,"byte_end":216001,"line_start":712,"line_end":712,"column_start":13,"column_end":16}},{"value":"/ This will not be suitable for many applications; you should","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":216014,"byte_end":216077,"line_start":713,"line_end":713,"column_start":13,"column_end":76}},{"value":"/ build the menu you need manually, using the items defined here","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":216090,"byte_end":216156,"line_start":714,"line_end":714,"column_start":13,"column_end":79}},{"value":"/ where appropriate.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":216169,"byte_end":216191,"line_start":715,"line_end":715,"column_start":13,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":1174},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":217204,"byte_end":217212,"line_start":737,"line_end":737,"column_start":20,"column_end":28},"name":"new_file","qualname":"::menu::sys::mac::file::new_file","value":"pub fn new_file<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'New Window' item.","sig":null,"attributes":[{"value":"/ The 'New Window' item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":216823,"byte_end":216849,"line_start":731,"line_end":731,"column_start":13,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":216862,"byte_end":216865,"line_start":732,"line_end":732,"column_start":13,"column_end":16}},{"value":"/ Note: depending on context, apps might show 'New', 'New Window',","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":216878,"byte_end":216946,"line_start":733,"line_end":733,"column_start":13,"column_end":81}},{"value":"/ 'New File', or 'New...' (where the last indicates that the menu","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":216959,"byte_end":217026,"line_start":734,"line_end":734,"column_start":13,"column_end":80}},{"value":"/ item will open a prompt). You may want to create a custom","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":217039,"byte_end":217100,"line_start":735,"line_end":735,"column_start":13,"column_end":74}},{"value":"/ item to capture the intent of your menu, instead of using this one.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":217113,"byte_end":217184,"line_start":736,"line_end":736,"column_start":13,"column_end":84}}]},{"kind":"Function","id":{"krate":0,"index":1176},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":217553,"byte_end":217562,"line_start":746,"line_end":746,"column_start":20,"column_end":29},"name":"open_file","qualname":"::menu::sys::mac::file::open_file","value":"pub fn open_file<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Open...' menu item. Will display the system file-chooser.\n","sig":null,"attributes":[{"value":"/ The 'Open...' menu item. Will display the system file-chooser.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":217467,"byte_end":217533,"line_start":745,"line_end":745,"column_start":13,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":217906,"byte_end":217911,"line_start":755,"line_end":755,"column_start":20,"column_end":25},"name":"close","qualname":"::menu::sys::mac::file::close","value":"pub fn close<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Close' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Close' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":217860,"byte_end":217886,"line_start":754,"line_end":754,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1180},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":218217,"byte_end":218221,"line_start":764,"line_end":764,"column_start":20,"column_end":24},"name":"save","qualname":"::menu::sys::mac::file::save","value":"pub fn save<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Save' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Save' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":218172,"byte_end":218197,"line_start":763,"line_end":763,"column_start":13,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1182},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":218635,"byte_end":218648,"line_start":775,"line_end":775,"column_start":20,"column_end":33},"name":"save_ellipsis","qualname":"::menu::sys::mac::file::save_ellipsis","value":"pub fn save_ellipsis<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Save...' menu item.","sig":null,"attributes":[{"value":"/ The 'Save...' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":218489,"byte_end":218517,"line_start":772,"line_end":772,"column_start":13,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":218530,"byte_end":218533,"line_start":773,"line_end":773,"column_start":13,"column_end":16}},{"value":"/ This is used if we need to show a dialog to select save location.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":218546,"byte_end":218615,"line_start":774,"line_end":774,"column_start":13,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":1184},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":218995,"byte_end":219002,"line_start":784,"line_end":784,"column_start":20,"column_end":27},"name":"save_as","qualname":"::menu::sys::mac::file::save_as","value":"pub fn save_as<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Save as...'\n","sig":null,"attributes":[{"value":"/ The 'Save as...'","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":218955,"byte_end":218975,"line_start":783,"line_end":783,"column_start":13,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1186},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":219362,"byte_end":219372,"line_start":793,"line_end":793,"column_start":20,"column_end":30},"name":"page_setup","qualname":"::menu::sys::mac::file::page_setup","value":"pub fn page_setup<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Page Setup...' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Page Setup...' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":219308,"byte_end":219342,"line_start":792,"line_end":792,"column_start":13,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1188},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":219691,"byte_end":219696,"line_start":802,"line_end":802,"column_start":20,"column_end":25},"name":"print","qualname":"::menu::sys::mac::file::print","value":"pub fn print<T: Data>() -> MenuItem<T>","parent":null,"children":[],"decl_id":null,"docs":" The 'Print...' menu item.\n","sig":null,"attributes":[{"value":"/ The 'Print...' menu item.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":219642,"byte_end":219671,"line_start":801,"line_end":801,"column_start":13,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3901},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":221474,"byte_end":221484,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"MouseEvent","qualname":"::mouse::MouseEvent","value":"MouseEvent { pos, window_pos, buttons, mods, count, focus, button, wheel_delta }","parent":null,"children":[{"krate":0,"index":3902},{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3909}],"decl_id":null,"docs":" The state of the mouse for a click, mouse-up, move, or wheel event.","sig":null,"attributes":[{"value":"/ The state of the mouse for a click, mouse-up, move, or wheel event.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":220665,"byte_end":220736,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":220737,"byte_end":220740,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In `druid`, unlike in `druid_shell`, we treat the widget's coordinate","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":220741,"byte_end":220814,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/ space and the window's coordinate space separately.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":220815,"byte_end":220870,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":220871,"byte_end":220874,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Every mouse event can have a new position. There is no guarantee of","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":220875,"byte_end":220946,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ receiving an [`Event::MouseMove`] before another mouse event.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":220947,"byte_end":221012,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":221013,"byte_end":221016,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ When comparing to the position that was reported by [`Event::MouseMove`],","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":221017,"byte_end":221094,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ the position in relation to the window might have changed because","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":221095,"byte_end":221164,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/ the window moved or the platform just didn't inform us of the move.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":221165,"byte_end":221236,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ The position may also have changed in relation to the receiver,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":221237,"byte_end":221304,"line_start":31,"line_end":31,"column_start":1,"column_end":68}},{"value":"/ because the receiver's location changed without the mouse moving.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":221305,"byte_end":221374,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":221375,"byte_end":221378,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`Event::MouseMove`]: enum.Event.html#variant.MouseMove","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":221379,"byte_end":221438,"line_start":34,"line_end":34,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":3902},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":221570,"byte_end":221573,"line_start":38,"line_end":38,"column_start":9,"column_end":12},"name":"pos","qualname":"::mouse::MouseEvent::pos","value":"druid_shell::kurbo::Point","parent":{"krate":0,"index":3901},"children":[],"decl_id":null,"docs":" The position of the mouse in the coordinate space of the receiver.\n","sig":null,"attributes":[{"value":"/ The position of the mouse in the coordinate space of the receiver.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":221491,"byte_end":221561,"line_start":37,"line_end":37,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":3903},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":221663,"byte_end":221673,"line_start":40,"line_end":40,"column_start":9,"column_end":19},"name":"window_pos","qualname":"::mouse::MouseEvent::window_pos","value":"druid_shell::kurbo::Point","parent":{"krate":0,"index":3901},"children":[],"decl_id":null,"docs":" The position of the mouse in the coordinate space of the window.\n","sig":null,"attributes":[{"value":"/ The position of the mouse in the coordinate space of the window.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":221586,"byte_end":221654,"line_start":39,"line_end":39,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":3904},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":221921,"byte_end":221928,"line_start":44,"line_end":44,"column_start":9,"column_end":16},"name":"buttons","qualname":"::mouse::MouseEvent::buttons","value":"druid_shell::MouseButtons","parent":{"krate":0,"index":3901},"children":[],"decl_id":null,"docs":" Mouse buttons being held down during a move or after a click event.\n Thus it will contain the `button` that triggered a mouse-down event,\n and it will not contain the `button` that triggered a mouse-up event.\n","sig":null,"attributes":[{"value":"/ Mouse buttons being held down during a move or after a click event.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":221686,"byte_end":221757,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ Thus it will contain the `button` that triggered a mouse-down event,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":221762,"byte_end":221834,"line_start":42,"line_end":42,"column_start":5,"column_end":77}},{"value":"/ and it will not contain the `button` that triggered a mouse-up event.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":221839,"byte_end":221912,"line_start":43,"line_end":43,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":3905},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":222005,"byte_end":222009,"line_start":46,"line_end":46,"column_start":9,"column_end":13},"name":"mods","qualname":"::mouse::MouseEvent::mods","value":"druid_shell::KeyModifiers","parent":{"krate":0,"index":3901},"children":[],"decl_id":null,"docs":" Keyboard modifiers at the time of the event.\n","sig":null,"attributes":[{"value":"/ Keyboard modifiers at the time of the event.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":221948,"byte_end":221996,"line_start":45,"line_end":45,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":3906},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":222166,"byte_end":222171,"line_start":49,"line_end":49,"column_start":9,"column_end":14},"name":"count","qualname":"::mouse::MouseEvent::count","value":"u8","parent":{"krate":0,"index":3901},"children":[],"decl_id":null,"docs":" The number of mouse clicks associated with this event. This will always\n be `0` for a mouse-up and mouse-move events.\n","sig":null,"attributes":[{"value":"/ The number of mouse clicks associated with this event. This will always","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":222029,"byte_end":222104,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ be `0` for a mouse-up and mouse-move events.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":222109,"byte_end":222157,"line_start":48,"line_end":48,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":3907},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":222758,"byte_end":222763,"line_start":58,"line_end":58,"column_start":9,"column_end":14},"name":"focus","qualname":"::mouse::MouseEvent::focus","value":"bool","parent":{"krate":0,"index":3901},"children":[],"decl_id":null,"docs":" Focus is `true` on macOS when the mouse-down event (or its companion mouse-up event)\n with `MouseButton::Left` was the event that caused the window to gain focus.","sig":null,"attributes":[{"value":"/ Focus is `true` on macOS when the mouse-down event (or its companion mouse-up event)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":222181,"byte_end":222269,"line_start":50,"line_end":50,"column_start":5,"column_end":93}},{"value":"/ with `MouseButton::Left` was the event that caused the window to gain focus.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":222274,"byte_end":222354,"line_start":51,"line_end":51,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":222359,"byte_end":222362,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This is primarily used in relation to text selection.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":222367,"byte_end":222424,"line_start":53,"line_end":53,"column_start":5,"column_end":62}},{"value":"/ If there is some text selected in some text widget and it receives a click","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":222429,"byte_end":222507,"line_start":54,"line_end":54,"column_start":5,"column_end":83}},{"value":"/ with `focus` set to `true` then the widget should gain focus (i.e. start blinking a cursor)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":222512,"byte_end":222607,"line_start":55,"line_end":55,"column_start":5,"column_end":100}},{"value":"/ but it should not change the text selection. Text selection should only be changed","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":222612,"byte_end":222698,"line_start":56,"line_end":56,"column_start":5,"column_end":91}},{"value":"/ when the click has `focus` set to `false`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":222703,"byte_end":222749,"line_start":57,"line_end":57,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3908},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":222987,"byte_end":222993,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"name":"button","qualname":"::mouse::MouseEvent::button","value":"druid_shell::MouseButton","parent":{"krate":0,"index":3901},"children":[],"decl_id":null,"docs":" The button that was pressed down in the case of mouse-down,\n or the button that was released in the case of mouse-up.\n This will always be `MouseButton::None` in the case of mouse-move.\n","sig":null,"attributes":[{"value":"/ The button that was pressed down in the case of mouse-down,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":222775,"byte_end":222838,"line_start":59,"line_end":59,"column_start":5,"column_end":68}},{"value":"/ or the button that was released in the case of mouse-up.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":222843,"byte_end":222903,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"/ This will always be `MouseButton::None` in the case of mouse-move.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":222908,"byte_end":222978,"line_start":61,"line_end":61,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":3909},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":223394,"byte_end":223405,"line_start":71,"line_end":71,"column_start":9,"column_end":20},"name":"wheel_delta","qualname":"::mouse::MouseEvent::wheel_delta","value":"druid_shell::kurbo::Vec2","parent":{"krate":0,"index":3901},"children":[],"decl_id":null,"docs":" The wheel movement.","sig":null,"attributes":[{"value":"/ The wheel movement.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":223012,"byte_end":223035,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":223040,"byte_end":223043,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The polarity is the amount to be added to the scroll position,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":223048,"byte_end":223114,"line_start":65,"line_end":65,"column_start":5,"column_end":71}},{"value":"/ in other words the opposite of the direction the content should","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":223119,"byte_end":223186,"line_start":66,"line_end":66,"column_start":5,"column_end":72}},{"value":"/ move on scrolling. This polarity is consistent with the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":223191,"byte_end":223250,"line_start":67,"line_end":67,"column_start":5,"column_end":64}},{"value":"/ deltaX and deltaY values in a web [WheelEvent].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":223255,"byte_end":223306,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":223311,"byte_end":223314,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ [WheelEvent]: https://w3c.github.io/uievents/#event-type-wheel","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":223319,"byte_end":223385,"line_start":70,"line_end":70,"column_start":5,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":1200},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"text","qualname":"::text","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\mod.rs","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316}],"decl_id":null,"docs":" Text editing utilities.\n","sig":null,"attributes":[{"value":"/ Text editing utilities.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\mod.rs","byte_start":224528,"byte_end":224555,"line_start":15,"line_end":15,"column_start":1,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":225736,"byte_end":225748,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"EditableText","qualname":"::text::editable_text::EditableText","value":"EditableText: Sized","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216}],"decl_id":null,"docs":" An EditableText trait.\n","sig":null,"attributes":[{"value":"/ An EditableText trait.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":225699,"byte_end":225725,"line_start":22,"line_end":22,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":226011,"byte_end":226017,"line_start":30,"line_end":30,"column_start":8,"column_end":14},"name":"cursor","qualname":"::text::editable_text::EditableText::cursor","value":"pub fn cursor(&Self, usize) -> Option<StringCursor>","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" Create a cursor with a reference to the text and a offset position.","sig":null,"attributes":[{"value":"/ Create a cursor with a reference to the text and a offset position.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":225859,"byte_end":225930,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":225935,"byte_end":225938,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Returns None if the position isn't a codepoint boundary.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":225943,"byte_end":226003,"line_start":29,"line_end":29,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":226201,"byte_end":226205,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"edit","qualname":"::text::editable_text::EditableText::edit","value":"pub fn edit<impl Into<String>: Into<String>>(&mut Self, Range<usize>,\n                                             impl Into<String>)","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" Replace range with new text.\n Can panic if supplied an invalid range.\n","sig":null,"attributes":[{"value":"/ Replace range with new text.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":226072,"byte_end":226104,"line_start":32,"line_end":32,"column_start":5,"column_end":37}},{"value":"/ Can panic if supplied an invalid range.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":226109,"byte_end":226152,"line_start":33,"line_end":33,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":226307,"byte_end":226312,"line_start":38,"line_end":38,"column_start":8,"column_end":13},"name":"slice","qualname":"::text::editable_text::EditableText::slice","value":"pub fn slice(&Self, Range<usize>) -> Option<Cow<, str>>","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" Get slice of text at range.\n","sig":null,"attributes":[{"value":"/ Get slice of text at range.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":226268,"byte_end":226299,"line_start":37,"line_end":37,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":226409,"byte_end":226412,"line_start":41,"line_end":41,"column_start":8,"column_end":11},"name":"len","qualname":"::text::editable_text::EditableText::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" Get length of text (in bytes).\n","sig":null,"attributes":[{"value":"/ Get length of text (in bytes).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":226367,"byte_end":226401,"line_start":40,"line_end":40,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":226512,"byte_end":226532,"line_start":44,"line_end":44,"column_start":8,"column_end":28},"name":"prev_grapheme_offset","qualname":"::text::editable_text::EditableText::prev_grapheme_offset","value":"pub fn prev_grapheme_offset(&Self, usize) -> Option<usize>","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" Get the next grapheme offset from the given offset, if it exists.\n","sig":null,"attributes":[{"value":"/ Get the next grapheme offset from the given offset, if it exists.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":226435,"byte_end":226504,"line_start":43,"line_end":43,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":226659,"byte_end":226679,"line_start":47,"line_end":47,"column_start":8,"column_end":28},"name":"next_grapheme_offset","qualname":"::text::editable_text::EditableText::next_grapheme_offset","value":"pub fn next_grapheme_offset(&Self, usize) -> Option<usize>","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" Get the previous grapheme offset from the given offset, if it exists.\n","sig":null,"attributes":[{"value":"/ Get the previous grapheme offset from the given offset, if it exists.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":226578,"byte_end":226651,"line_start":46,"line_end":46,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":226803,"byte_end":226824,"line_start":50,"line_end":50,"column_start":8,"column_end":29},"name":"prev_codepoint_offset","qualname":"::text::editable_text::EditableText::prev_codepoint_offset","value":"pub fn prev_codepoint_offset(&Self, usize) -> Option<usize>","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" Get the next codepoint offset from the given offset, if it exists.\n","sig":null,"attributes":[{"value":"/ Get the next codepoint offset from the given offset, if it exists.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":226725,"byte_end":226795,"line_start":49,"line_end":49,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":226952,"byte_end":226973,"line_start":53,"line_end":53,"column_start":8,"column_end":29},"name":"next_codepoint_offset","qualname":"::text::editable_text::EditableText::next_codepoint_offset","value":"pub fn next_codepoint_offset(&Self, usize) -> Option<usize>","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" Get the previous codepoint offset from the given offset, if it exists.\n","sig":null,"attributes":[{"value":"/ Get the previous codepoint offset from the given offset, if it exists.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":226870,"byte_end":226944,"line_start":52,"line_end":52,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":227022,"byte_end":227030,"line_start":55,"line_end":55,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::text::editable_text::EditableText::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":227055,"byte_end":227063,"line_start":57,"line_end":57,"column_start":8,"column_end":16},"name":"from_str","qualname":"::text::editable_text::EditableText::from_str","value":"pub fn from_str(&str) -> Self","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":228717,"byte_end":228735,"line_start":124,"line_end":124,"column_start":11,"column_end":29},"name":"EditableTextCursor","qualname":"::text::editable_text::EditableTextCursor","value":"EditableTextCursor<EditableText>","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241}],"decl_id":null,"docs":" A cursor with convenience functions for moving through EditableText.\n","sig":null,"attributes":[{"value":"/ A cursor with convenience functions for moving through EditableText.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":228634,"byte_end":228706,"line_start":123,"line_end":123,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":228788,"byte_end":228791,"line_start":126,"line_end":126,"column_start":8,"column_end":11},"name":"set","qualname":"::text::editable_text::EditableTextCursor::set","value":"pub fn set(&mut Self, usize)","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Set cursor position.\n","sig":null,"attributes":[{"value":"/ Set cursor position.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":228756,"byte_end":228780,"line_start":125,"line_end":125,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":228858,"byte_end":228861,"line_start":129,"line_end":129,"column_start":8,"column_end":11},"name":"pos","qualname":"::text::editable_text::EditableTextCursor::pos","value":"pub fn pos(&Self) -> usize","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Get cursor position.\n","sig":null,"attributes":[{"value":"/ Get cursor position.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":228826,"byte_end":228850,"line_start":128,"line_end":128,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":228948,"byte_end":228959,"line_start":132,"line_end":132,"column_start":8,"column_end":19},"name":"is_boundary","qualname":"::text::editable_text::EditableTextCursor::is_boundary","value":"pub fn is_boundary(&Self) -> bool","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Check if cursor position is at a codepoint boundary.\n","sig":null,"attributes":[{"value":"/ Check if cursor position is at a codepoint boundary.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":228884,"byte_end":228940,"line_start":131,"line_end":131,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":229102,"byte_end":229106,"line_start":136,"line_end":136,"column_start":8,"column_end":12},"name":"prev","qualname":"::text::editable_text::EditableTextCursor::prev","value":"pub fn prev(&mut Self) -> Option<usize>","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Move cursor to previous codepoint boundary, if it exists.\n Returns previous codepoint as usize offset.\n","sig":null,"attributes":[{"value":"/ Move cursor to previous codepoint boundary, if it exists.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":228981,"byte_end":229042,"line_start":134,"line_end":134,"column_start":5,"column_end":66}},{"value":"/ Returns previous codepoint as usize offset.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":229047,"byte_end":229094,"line_start":135,"line_end":135,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":229257,"byte_end":229261,"line_start":140,"line_end":140,"column_start":8,"column_end":12},"name":"next","qualname":"::text::editable_text::EditableTextCursor::next","value":"pub fn next(&mut Self) -> Option<usize>","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Move cursor to next codepoint boundary, if it exists.\n Returns current codepoint as usize offset.\n","sig":null,"attributes":[{"value":"/ Move cursor to next codepoint boundary, if it exists.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":229141,"byte_end":229198,"line_start":138,"line_end":138,"column_start":5,"column_end":62}},{"value":"/ Returns current codepoint as usize offset.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":229203,"byte_end":229249,"line_start":139,"line_end":139,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":229395,"byte_end":229414,"line_start":144,"line_end":144,"column_start":8,"column_end":27},"name":"peek_next_codepoint","qualname":"::text::editable_text::EditableTextCursor::peek_next_codepoint","value":"pub fn peek_next_codepoint(&Self) -> Option<char>","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Get the next codepoint after the cursor position, without advancing\n the cursor.\n","sig":null,"attributes":[{"value":"/ Get the next codepoint after the cursor position, without advancing","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":229296,"byte_end":229367,"line_start":142,"line_end":142,"column_start":5,"column_end":76}},{"value":"/ the cursor.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":229372,"byte_end":229387,"line_start":143,"line_end":143,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":229522,"byte_end":229536,"line_start":147,"line_end":147,"column_start":8,"column_end":22},"name":"prev_codepoint","qualname":"::text::editable_text::EditableTextCursor::prev_codepoint","value":"pub fn prev_codepoint(&mut Self) -> Option<char>","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Return codepoint preceding cursor offset and move cursor backward.\n","sig":null,"attributes":[{"value":"/ Return codepoint preceding cursor offset and move cursor backward.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":229444,"byte_end":229514,"line_start":146,"line_end":146,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":229640,"byte_end":229654,"line_start":150,"line_end":150,"column_start":8,"column_end":22},"name":"next_codepoint","qualname":"::text::editable_text::EditableTextCursor::next_codepoint","value":"pub fn next_codepoint(&mut Self) -> Option<char>","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Return codepoint at cursor offset and move cursor forward.\n","sig":null,"attributes":[{"value":"/ Return codepoint at cursor offset and move cursor forward.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":229570,"byte_end":229632,"line_start":149,"line_end":149,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":229752,"byte_end":229762,"line_start":153,"line_end":153,"column_start":8,"column_end":18},"name":"at_or_next","qualname":"::text::editable_text::EditableTextCursor::at_or_next","value":"pub fn at_or_next(&mut Self) -> Option<usize>","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Return current offset if it's a boundary, else next.\n","sig":null,"attributes":[{"value":"/ Return current offset if it's a boundary, else next.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":229688,"byte_end":229744,"line_start":152,"line_end":152,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":229865,"byte_end":229875,"line_start":156,"line_end":156,"column_start":8,"column_end":18},"name":"at_or_prev","qualname":"::text::editable_text::EditableTextCursor::at_or_prev","value":"pub fn at_or_prev(&mut Self) -> Option<usize>","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Return current offset if it's a boundary, else previous.\n","sig":null,"attributes":[{"value":"/ Return current offset if it's a boundary, else previous.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":229797,"byte_end":229857,"line_start":155,"line_end":155,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3914},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":230000,"byte_end":230012,"line_start":161,"line_end":161,"column_start":12,"column_end":24},"name":"StringCursor","qualname":"::text::editable_text::StringCursor","value":"StringCursor {  }","parent":null,"children":[{"krate":0,"index":3916},{"krate":0,"index":3917}],"decl_id":null,"docs":" A cursor type that implements EditableTextCursor for String\n","sig":null,"attributes":[{"value":"/ A cursor type that implements EditableTextCursor for String","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":229908,"byte_end":229971,"line_start":159,"line_end":159,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"selection","qualname":"::text::selection","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":3921},{"krate":0,"index":3927},{"krate":0,"index":3925},{"krate":0,"index":3924},{"krate":0,"index":1265}],"decl_id":null,"docs":" A Selection type for text editing.\n","sig":null,"attributes":[{"value":"/ A Selection type for text editing.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":236536,"byte_end":236574,"line_start":15,"line_end":15,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3921},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":236736,"byte_end":236745,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"Selection","qualname":"::text::selection::Selection","value":"Selection { start, end }","parent":null,"children":[{"krate":0,"index":3922},{"krate":0,"index":3923}],"decl_id":null,"docs":" A Selection type for EditableText.\n","sig":null,"attributes":[{"value":"/ A Selection type for EditableText.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":236656,"byte_end":236694,"line_start":22,"line_end":22,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":3922},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":236880,"byte_end":236885,"line_start":27,"line_end":27,"column_start":9,"column_end":14},"name":"start","qualname":"::text::selection::Selection::start","value":"usize","parent":{"krate":0,"index":3921},"children":[],"decl_id":null,"docs":" The inactive edge of a selection, as a byte offset. When\n equal to end, the selection range acts as a caret.\n","sig":null,"attributes":[{"value":"/ The inactive edge of a selection, as a byte offset. When","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":236752,"byte_end":236812,"line_start":25,"line_end":25,"column_start":5,"column_end":65}},{"value":"/ equal to end, the selection range acts as a caret.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":236817,"byte_end":236871,"line_start":26,"line_end":26,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3923},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":236961,"byte_end":236964,"line_start":30,"line_end":30,"column_start":9,"column_end":12},"name":"end","qualname":"::text::selection::Selection::end","value":"usize","parent":{"krate":0,"index":3921},"children":[],"decl_id":null,"docs":" The active edge of a selection, as a byte offset.\n","sig":null,"attributes":[{"value":"/ The active edge of a selection, as a byte offset.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":236899,"byte_end":236952,"line_start":29,"line_end":29,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":237118,"byte_end":237121,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Selection>::new","value":"pub fn new(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a selection that begins at start and goes to end.\n Like dragging a mouse from start to end.\n","sig":null,"attributes":[{"value":"/ Create a selection that begins at start and goes to end.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":236997,"byte_end":237057,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"/ Like dragging a mouse from start to end.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":237062,"byte_end":237106,"line_start":35,"line_end":35,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":237361,"byte_end":237364,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"all","qualname":"<Selection>::all","value":"pub fn all<impl EditableText: EditableText>(&mut Self, &impl EditableText)","parent":null,"children":[],"decl_id":null,"docs":" Create a selection that starts at the beginning and ends at text length.\n TODO: can text length be at a non-codepoint or a non-grapheme?\n","sig":null,"attributes":[{"value":"/ Create a selection that starts at the beginning and ends at text length.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":237202,"byte_end":237278,"line_start":40,"line_end":40,"column_start":5,"column_end":81}},{"value":"/ TODO: can text length be at a non-codepoint or a non-grapheme?","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":237283,"byte_end":237349,"line_start":41,"line_end":41,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":237560,"byte_end":237565,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"caret","qualname":"<Selection>::caret","value":"pub fn caret(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a caret, which is just a selection with the same and start and end.\n","sig":null,"attributes":[{"value":"/ Create a caret, which is just a selection with the same and start and end.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":237470,"byte_end":237548,"line_start":47,"line_end":47,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":237720,"byte_end":237728,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"is_caret","qualname":"<Selection>::is_caret","value":"pub fn is_caret(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If start == end, it's a caret\n","sig":null,"attributes":[{"value":"/ If start == end, it's a caret","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":237675,"byte_end":237708,"line_start":55,"line_end":55,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":237863,"byte_end":237866,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"min","qualname":"<Selection>::min","value":"pub fn min(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the smallest index (left, in left-to-right languages)\n","sig":null,"attributes":[{"value":"/ Return the smallest index (left, in left-to-right languages)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":237787,"byte_end":237851,"line_start":60,"line_end":60,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":238005,"byte_end":238008,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"max","qualname":"<Selection>::max","value":"pub fn max(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the largest index (right, in left-to-right languages)\n","sig":null,"attributes":[{"value":"/ Return the largest index (right, in left-to-right languages)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":237929,"byte_end":237993,"line_start":65,"line_end":65,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":238132,"byte_end":238137,"line_start":71,"line_end":71,"column_start":12,"column_end":17},"name":"range","qualname":"<Selection>::range","value":"pub fn range(Self) -> Range<usize>","parent":null,"children":[],"decl_id":null,"docs":" Return a range from smallest to largest index\n","sig":null,"attributes":[{"value":"/ Return a range from smallest to largest index","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":238071,"byte_end":238120,"line_start":70,"line_end":70,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":238275,"byte_end":238287,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"name":"constrain_to","qualname":"<Selection>::constrain_to","value":"pub fn constrain_to<impl EditableText: EditableText>(Self, &impl EditableText)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constrain selection to be not greater than input string\n","sig":null,"attributes":[{"value":"/ Constrain selection to be not greater than input string","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":238204,"byte_end":238263,"line_start":75,"line_end":75,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":1277},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\movement.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"movement","qualname":"::text::movement","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\movement.rs","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":3929},{"krate":0,"index":3944},{"krate":0,"index":3941},{"krate":0,"index":3942},{"krate":0,"index":3939},{"krate":0,"index":3938},{"krate":0,"index":1281}],"decl_id":null,"docs":" Text editing movements.\n","sig":null,"attributes":[{"value":"/ Text editing movements.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\movement.rs","byte_start":239068,"byte_end":239095,"line_start":15,"line_end":15,"column_start":1,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3930},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\movement.rs","byte_start":239294,"byte_end":239298,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"name":"Left","qualname":"::text::movement::Movement::Left","value":"Movement::Left","parent":{"krate":0,"index":3929},"children":[],"decl_id":null,"docs":" Move to the left by one grapheme cluster.\n","sig":null,"attributes":[{"value":"/ Move to the left by one grapheme cluster.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\movement.rs","byte_start":239244,"byte_end":239289,"line_start":22,"line_end":22,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3932},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\movement.rs","byte_start":239355,"byte_end":239360,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"Right","qualname":"::text::movement::Movement::Right","value":"Movement::Right","parent":{"krate":0,"index":3929},"children":[],"decl_id":null,"docs":" Move to the right by one grapheme cluster.\n","sig":null,"attributes":[{"value":"/ Move to the right by one grapheme cluster.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\movement.rs","byte_start":239304,"byte_end":239350,"line_start":24,"line_end":24,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3934},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\movement.rs","byte_start":239408,"byte_end":239418,"line_start":27,"line_end":27,"column_start":5,"column_end":15},"name":"LeftOfLine","qualname":"::text::movement::Movement::LeftOfLine","value":"Movement::LeftOfLine","parent":{"krate":0,"index":3929},"children":[],"decl_id":null,"docs":" Move to left end of visible line.\n","sig":null,"attributes":[{"value":"/ Move to left end of visible line.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\movement.rs","byte_start":239366,"byte_end":239403,"line_start":26,"line_end":26,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3936},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\movement.rs","byte_start":239467,"byte_end":239478,"line_start":29,"line_end":29,"column_start":5,"column_end":16},"name":"RightOfLine","qualname":"::text::movement::Movement::RightOfLine","value":"Movement::RightOfLine","parent":{"krate":0,"index":3929},"children":[],"decl_id":null,"docs":" Move to right end of visible line.\n","sig":null,"attributes":[{"value":"/ Move to right end of visible line.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\movement.rs","byte_start":239424,"byte_end":239462,"line_start":28,"line_end":28,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":3929},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\movement.rs","byte_start":239229,"byte_end":239237,"line_start":21,"line_end":21,"column_start":10,"column_end":18},"name":"Movement","qualname":"::text::movement::Movement","value":"pub enum Movement {\n\n    /// Move to the left by one grapheme cluster.\n    Left,\n\n    /// Move to the right by one grapheme cluster.\n    Right,\n\n    /// Move to left end of visible line.\n    LeftOfLine,\n\n    /// Move to right end of visible line.\n    RightOfLine,\n}","parent":null,"children":[{"krate":0,"index":3930},{"krate":0,"index":3932},{"krate":0,"index":3934},{"krate":0,"index":3936}],"decl_id":null,"docs":" The specification of a movement.\n","sig":null,"attributes":[{"value":"/ The specification of a movement.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\movement.rs","byte_start":239142,"byte_end":239178,"line_start":19,"line_end":19,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\movement.rs","byte_start":239542,"byte_end":239550,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"movement","qualname":"::text::movement::movement","value":"pub fn movement<impl EditableText: EditableText>(Movement, Selection,\n                                                 &impl EditableText, bool)\n-> Selection","parent":null,"children":[],"decl_id":null,"docs":" Compute the result of movement on a selection .\n","sig":null,"attributes":[{"value":"/ Compute the result of movement on a selection .","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\movement.rs","byte_start":239483,"byte_end":239534,"line_start":32,"line_end":32,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\backspace.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"backspace","qualname":"::text::backspace","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\backspace.rs","parent":null,"children":[{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1294}],"decl_id":null,"docs":" Calc start of a backspace delete interval\n","sig":null,"attributes":[{"value":"/ Calc start of a backspace delete interval","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\backspace.rs","byte_start":241026,"byte_end":241071,"line_start":15,"line_end":15,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\backspace.rs","byte_start":247594,"byte_end":247621,"line_start":197,"line_end":197,"column_start":8,"column_end":35},"name":"offset_for_delete_backwards","qualname":"::text::backspace::offset_for_delete_backwards","value":"pub fn offset_for_delete_backwards<impl EditableText: EditableText>(&Selection,\n                                                                    &impl EditableText)\n-> usize","parent":null,"children":[],"decl_id":null,"docs":" Calculate resulting offset for a backwards delete.\n","sig":null,"attributes":[{"value":"/ Calculate resulting offset for a backwards delete.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\backspace.rs","byte_start":247487,"byte_end":247541,"line_start":195,"line_end":195,"column_start":1,"column_end":55}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\backspace.rs","byte_start":247542,"byte_end":247586,"line_start":196,"line_end":196,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3979},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":248972,"byte_end":248976,"line_start":29,"line_end":29,"column_start":5,"column_end":9},"name":"Move","qualname":"::text::text_input::EditAction::Move","value":"EditAction::Move(Movement)","parent":{"krate":0,"index":3978},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3982},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":248992,"byte_end":249007,"line_start":30,"line_end":30,"column_start":5,"column_end":20},"name":"ModifySelection","qualname":"::text::text_input::EditAction::ModifySelection","value":"EditAction::ModifySelection(Movement)","parent":{"krate":0,"index":3978},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3985},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249023,"byte_end":249032,"line_start":31,"line_end":31,"column_start":5,"column_end":14},"name":"SelectAll","qualname":"::text::text_input::EditAction::SelectAll","value":"EditAction::SelectAll","parent":{"krate":0,"index":3978},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3987},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249038,"byte_end":249043,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Click","qualname":"::text::text_input::EditAction::Click","value":"EditAction::Click(MouseAction)","parent":{"krate":0,"index":3978},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3990},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249062,"byte_end":249066,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"Drag","qualname":"::text::text_input::EditAction::Drag","value":"EditAction::Drag(MouseAction)","parent":{"krate":0,"index":3978},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3993},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249085,"byte_end":249091,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Delete","qualname":"::text::text_input::EditAction::Delete","value":"EditAction::Delete","parent":{"krate":0,"index":3978},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3995},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249097,"byte_end":249106,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"Backspace","qualname":"::text::text_input::EditAction::Backspace","value":"EditAction::Backspace","parent":{"krate":0,"index":3978},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3997},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249112,"byte_end":249118,"line_start":36,"line_end":36,"column_start":5,"column_end":11},"name":"Insert","qualname":"::text::text_input::EditAction::Insert","value":"EditAction::Insert(String)","parent":{"krate":0,"index":3978},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4000},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249132,"byte_end":249137,"line_start":37,"line_end":37,"column_start":5,"column_end":10},"name":"Paste","qualname":"::text::text_input::EditAction::Paste","value":"EditAction::Paste(String)","parent":{"krate":0,"index":3978},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3978},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":248955,"byte_end":248965,"line_start":28,"line_end":28,"column_start":10,"column_end":20},"name":"EditAction","qualname":"::text::text_input::EditAction","value":"pub enum EditAction {\n    Move(Movement),\n    ModifySelection(Movement),\n    SelectAll,\n    Click(MouseAction),\n    Drag(MouseAction),\n    Delete,\n    Backspace,\n    Insert(String),\n    Paste(String),\n}","parent":null,"children":[{"krate":0,"index":3979},{"krate":0,"index":3982},{"krate":0,"index":3985},{"krate":0,"index":3987},{"krate":0,"index":3990},{"krate":0,"index":3993},{"krate":0,"index":3995},{"krate":0,"index":3997},{"krate":0,"index":4000}],"decl_id":null,"docs":" An enum that represents actions in a text buffer.\n","sig":null,"attributes":[{"value":"/ An enum that represents actions in a text buffer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":248857,"byte_end":248910,"line_start":26,"line_end":26,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":4011},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249243,"byte_end":249254,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"MouseAction","qualname":"::text::text_input::MouseAction","value":"MouseAction { row, column, mods }","parent":null,"children":[{"krate":0,"index":4012},{"krate":0,"index":4013},{"krate":0,"index":4014}],"decl_id":null,"docs":" Extra information related to mouse actions\n","sig":null,"attributes":[{"value":"/ Extra information related to mouse actions","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249150,"byte_end":249196,"line_start":40,"line_end":40,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":4012},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249265,"byte_end":249268,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"name":"row","qualname":"::text::text_input::MouseAction::row","value":"usize","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4013},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249285,"byte_end":249291,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"name":"column","qualname":"::text::text_input::MouseAction::column","value":"usize","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4014},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249308,"byte_end":249312,"line_start":45,"line_end":45,"column_start":9,"column_end":13},"name":"mods","qualname":"::text::text_input::MouseAction::mods","value":"druid_shell::KeyModifiers","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1306},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249341,"byte_end":249350,"line_start":48,"line_end":48,"column_start":11,"column_end":20},"name":"TextInput","qualname":"::text::text_input::TextInput","value":"TextInput","parent":null,"children":[{"krate":0,"index":1307}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249454,"byte_end":249466,"line_start":51,"line_end":51,"column_start":8,"column_end":20},"name":"handle_event","qualname":"::text::text_input::TextInput::handle_event","value":"pub fn handle_event(&Self, &KeyEvent) -> Option<EditAction>","parent":{"krate":0,"index":1306},"children":[],"decl_id":null,"docs":" Handle a key event and return an edit action to be executed\n for the key event\n","sig":null,"attributes":[{"value":"/ Handle a key event and return an edit action to be executed","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249357,"byte_end":249420,"line_start":49,"line_end":49,"column_start":5,"column_end":68}},{"value":"/ for the key event","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249425,"byte_end":249446,"line_start":50,"line_end":50,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":4023},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249640,"byte_end":249654,"line_start":57,"line_end":57,"column_start":12,"column_end":26},"name":"BasicTextInput","qualname":"::text::text_input::BasicTextInput","value":"BasicTextInput {  }","parent":null,"children":[],"decl_id":null,"docs":" Handles key events and returns actions that are applicable to\n single line textboxes\n","sig":null,"attributes":[{"value":"/ Handles key events and returns actions that are applicable to","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249518,"byte_end":249583,"line_start":54,"line_end":54,"column_start":1,"column_end":66}},{"value":"/ single line textboxes","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249584,"byte_end":249609,"line_start":55,"line_end":55,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249692,"byte_end":249695,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<BasicTextInput>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1317},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"theme","qualname":"::theme","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355}],"decl_id":null,"docs":" Theme keys and initial values.\n","sig":null,"attributes":[{"value":"/ Theme keys and initial values.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":252553,"byte_end":252587,"line_start":15,"line_end":15,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":1322},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":252648,"byte_end":252671,"line_start":21,"line_end":21,"column_start":11,"column_end":34},"name":"WINDOW_BACKGROUND_COLOR","qualname":"::theme::WINDOW_BACKGROUND_COLOR","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":252734,"byte_end":252745,"line_start":23,"line_end":23,"column_start":11,"column_end":22},"name":"LABEL_COLOR","qualname":"::theme::LABEL_COLOR","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1324},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":252795,"byte_end":252812,"line_start":24,"line_end":24,"column_start":11,"column_end":28},"name":"PLACEHOLDER_COLOR","qualname":"::theme::PLACEHOLDER_COLOR","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":252869,"byte_end":252882,"line_start":26,"line_end":26,"column_start":11,"column_end":24},"name":"PRIMARY_LIGHT","qualname":"::theme::PRIMARY_LIGHT","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1326},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":252934,"byte_end":252946,"line_start":27,"line_end":27,"column_start":11,"column_end":23},"name":"PRIMARY_DARK","qualname":"::theme::PRIMARY_DARK","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1327},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":252997,"byte_end":253016,"line_start":28,"line_end":28,"column_start":11,"column_end":30},"name":"PROGRESS_BAR_RADIUS","qualname":"::theme::PROGRESS_BAR_RADIUS","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1328},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":253072,"byte_end":253088,"line_start":29,"line_end":29,"column_start":11,"column_end":27},"name":"BACKGROUND_LIGHT","qualname":"::theme::BACKGROUND_LIGHT","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1329},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":253143,"byte_end":253158,"line_start":30,"line_end":30,"column_start":11,"column_end":26},"name":"BACKGROUND_DARK","qualname":"::theme::BACKGROUND_DARK","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1330},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":253212,"byte_end":253228,"line_start":31,"line_end":31,"column_start":11,"column_end":27},"name":"FOREGROUND_LIGHT","qualname":"::theme::FOREGROUND_LIGHT","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":253283,"byte_end":253298,"line_start":32,"line_end":32,"column_start":11,"column_end":26},"name":"FOREGROUND_DARK","qualname":"::theme::FOREGROUND_DARK","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":253352,"byte_end":253363,"line_start":33,"line_end":33,"column_start":11,"column_end":22},"name":"BUTTON_DARK","qualname":"::theme::BUTTON_DARK","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1333},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":253413,"byte_end":253425,"line_start":34,"line_end":34,"column_start":11,"column_end":23},"name":"BUTTON_LIGHT","qualname":"::theme::BUTTON_LIGHT","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1334},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":253476,"byte_end":253496,"line_start":35,"line_end":35,"column_start":11,"column_end":31},"name":"BUTTON_BORDER_RADIUS","qualname":"::theme::BUTTON_BORDER_RADIUS","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1335},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":253546,"byte_end":253565,"line_start":36,"line_end":36,"column_start":11,"column_end":30},"name":"BUTTON_BORDER_WIDTH","qualname":"::theme::BUTTON_BORDER_WIDTH","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1336},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":253621,"byte_end":253632,"line_start":37,"line_end":37,"column_start":11,"column_end":22},"name":"BORDER_DARK","qualname":"::theme::BORDER_DARK","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1337},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":253677,"byte_end":253689,"line_start":38,"line_end":38,"column_start":11,"column_end":23},"name":"BORDER_LIGHT","qualname":"::theme::BORDER_LIGHT","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1338},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":253740,"byte_end":253755,"line_start":39,"line_end":39,"column_start":11,"column_end":26},"name":"SELECTION_COLOR","qualname":"::theme::SELECTION_COLOR","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1339},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":253809,"byte_end":253821,"line_start":40,"line_end":40,"column_start":11,"column_end":23},"name":"CURSOR_COLOR","qualname":"::theme::CURSOR_COLOR","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1340},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":253873,"byte_end":253882,"line_start":42,"line_end":42,"column_start":11,"column_end":20},"name":"FONT_NAME","qualname":"::theme::FONT_NAME","value":"Key<&str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1341},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":253929,"byte_end":253945,"line_start":43,"line_end":43,"column_start":11,"column_end":27},"name":"TEXT_SIZE_NORMAL","qualname":"::theme::TEXT_SIZE_NORMAL","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1342},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":253998,"byte_end":254013,"line_start":44,"line_end":44,"column_start":11,"column_end":26},"name":"TEXT_SIZE_LARGE","qualname":"::theme::TEXT_SIZE_LARGE","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":254065,"byte_end":254084,"line_start":45,"line_end":45,"column_start":11,"column_end":30},"name":"BASIC_WIDGET_HEIGHT","qualname":"::theme::BASIC_WIDGET_HEIGHT","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1344},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":254230,"byte_end":254247,"line_start":48,"line_end":48,"column_start":11,"column_end":28},"name":"WIDE_WIDGET_WIDTH","qualname":"::theme::WIDE_WIDGET_WIDTH","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":" The default minimum width for a 'wide' widget; a textbox, slider, progress bar, etc.\n","sig":null,"attributes":[{"value":"/ The default minimum width for a 'wide' widget; a textbox, slider, progress bar, etc.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":254131,"byte_end":254219,"line_start":47,"line_end":47,"column_start":1,"column_end":89}}]},{"kind":"Const","id":{"krate":0,"index":1345},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":254315,"byte_end":254337,"line_start":49,"line_end":49,"column_start":11,"column_end":33},"name":"BORDERED_WIDGET_HEIGHT","qualname":"::theme::BORDERED_WIDGET_HEIGHT","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1346},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":254397,"byte_end":254418,"line_start":51,"line_end":51,"column_start":11,"column_end":32},"name":"TEXTBOX_BORDER_RADIUS","qualname":"::theme::TEXTBOX_BORDER_RADIUS","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1347},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":254470,"byte_end":254485,"line_start":53,"line_end":53,"column_start":11,"column_end":26},"name":"SCROLLBAR_COLOR","qualname":"::theme::SCROLLBAR_COLOR","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1348},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":254539,"byte_end":254561,"line_start":54,"line_end":54,"column_start":11,"column_end":33},"name":"SCROLLBAR_BORDER_COLOR","qualname":"::theme::SCROLLBAR_BORDER_COLOR","value":"Key<Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1349},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":254622,"byte_end":254643,"line_start":55,"line_end":55,"column_start":11,"column_end":32},"name":"SCROLLBAR_MAX_OPACITY","qualname":"::theme::SCROLLBAR_MAX_OPACITY","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1350},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":254701,"byte_end":254721,"line_start":56,"line_end":56,"column_start":11,"column_end":31},"name":"SCROLLBAR_FADE_DELAY","qualname":"::theme::SCROLLBAR_FADE_DELAY","value":"Key<u64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1351},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":254777,"byte_end":254792,"line_start":57,"line_end":57,"column_start":11,"column_end":26},"name":"SCROLLBAR_WIDTH","qualname":"::theme::SCROLLBAR_WIDTH","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1352},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":254844,"byte_end":254857,"line_start":58,"line_end":58,"column_start":11,"column_end":24},"name":"SCROLLBAR_PAD","qualname":"::theme::SCROLLBAR_PAD","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1353},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":254907,"byte_end":254923,"line_start":59,"line_end":59,"column_start":11,"column_end":27},"name":"SCROLLBAR_RADIUS","qualname":"::theme::SCROLLBAR_RADIUS","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1354},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":254976,"byte_end":254996,"line_start":60,"line_end":60,"column_start":11,"column_end":31},"name":"SCROLLBAR_EDGE_WIDTH","qualname":"::theme::SCROLLBAR_EDGE_WIDTH","value":"Key<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1355},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":255073,"byte_end":255077,"line_start":63,"line_end":63,"column_start":8,"column_end":12},"name":"init","qualname":"::theme::init","value":"pub fn init() -> Env","parent":null,"children":[],"decl_id":null,"docs":" An initial theme.\n","sig":null,"attributes":[{"value":"/ An initial theme.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\theme.rs","byte_start":255044,"byte_end":255065,"line_start":62,"line_end":62,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":1366},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"widget","qualname":"::widget","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","parent":null,"children":[{"krate":0,"index":1367},{"krate":0,"index":1413},{"krate":0,"index":1452},{"krate":0,"index":1493},{"krate":0,"index":1515},{"krate":0,"index":1523},{"krate":0,"index":1572},{"krate":0,"index":1611},{"krate":0,"index":1648},{"krate":0,"index":1682},{"krate":0,"index":1787},{"krate":0,"index":1818},{"krate":0,"index":1840},{"krate":0,"index":1946},{"krate":0,"index":2014},{"krate":0,"index":2052},{"krate":0,"index":2133},{"krate":0,"index":2167},{"krate":0,"index":2195},{"krate":0,"index":2246},{"krate":0,"index":2343},{"krate":0,"index":2384},{"krate":0,"index":2419},{"krate":0,"index":2448},{"krate":0,"index":2518},{"krate":0,"index":2568},{"krate":0,"index":2607},{"krate":0,"index":2685},{"krate":0,"index":2729},{"krate":0,"index":2759},{"krate":0,"index":2839},{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2849},{"krate":0,"index":2850},{"krate":0,"index":2851},{"krate":0,"index":2852},{"krate":0,"index":2853},{"krate":0,"index":2854},{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2857},{"krate":0,"index":2858},{"krate":0,"index":2859},{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":5776},{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":5780},{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2874},{"krate":0,"index":2875},{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2883},{"krate":0,"index":2884}],"decl_id":null,"docs":" Common widgets.\n","sig":null,"attributes":[{"value":"/ Common widgets.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":259683,"byte_end":259702,"line_start":15,"line_end":15,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":263366,"byte_end":263371,"line_start":26,"line_end":26,"column_start":12,"column_end":17},"name":"Align","qualname":"::widget::align::Align","value":"Align {  }","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390}],"decl_id":null,"docs":" A widget that aligns its child.\n","sig":null,"attributes":[{"value":"/ A widget that aligns its child.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":263319,"byte_end":263354,"line_start":25,"line_end":25,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":263804,"byte_end":263807,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Align<T>>::new","value":"pub fn new<impl Widget<T> + 'static: Widget<T> +\n           'static>(UnitPoint, impl Widget<T> + 'static) -> Align<T>","parent":null,"children":[],"decl_id":null,"docs":" Create widget with alignment.","sig":null,"attributes":[{"value":"/ Create widget with alignment.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":263533,"byte_end":263566,"line_start":34,"line_end":34,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":263571,"byte_end":263574,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that the `align` parameter is specified as a `UnitPoint` in","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":263579,"byte_end":263647,"line_start":36,"line_end":36,"column_start":5,"column_end":73}},{"value":"/ terms of left and right. This is inadequate for bidi-aware layout","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":263652,"byte_end":263721,"line_start":37,"line_end":37,"column_start":5,"column_end":74}},{"value":"/ and thus the API will change when druid gains bidi capability.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":263726,"byte_end":263792,"line_start":38,"line_end":38,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":264083,"byte_end":264091,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"centered","qualname":"<Align<T>>::centered","value":"pub fn centered<impl Widget<T> + 'static: Widget<T> +\n                'static>(impl Widget<T> + 'static) -> Align<T>","parent":null,"children":[],"decl_id":null,"docs":" Create centered widget.\n","sig":null,"attributes":[{"value":"/ Create centered widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":264044,"byte_end":264071,"line_start":48,"line_end":48,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":264239,"byte_end":264244,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"right","qualname":"<Align<T>>::right","value":"pub fn right<impl Widget<T> + 'static: Widget<T> +\n             'static>(impl Widget<T> + 'static) -> Align<T>","parent":null,"children":[],"decl_id":null,"docs":" Create right-aligned widget.\n","sig":null,"attributes":[{"value":"/ Create right-aligned widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":264195,"byte_end":264227,"line_start":53,"line_end":53,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":264390,"byte_end":264394,"line_start":59,"line_end":59,"column_start":12,"column_end":16},"name":"left","qualname":"<Align<T>>::left","value":"pub fn left<impl Widget<T> + 'static: Widget<T> +\n            'static>(impl Widget<T> + 'static) -> Align<T>","parent":null,"children":[],"decl_id":null,"docs":" Create left-aligned widget.\n","sig":null,"attributes":[{"value":"/ Create left-aligned widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":264347,"byte_end":264378,"line_start":58,"line_end":58,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":264588,"byte_end":264598,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<Align<T>>::horizontal","value":"pub fn horizontal<impl Widget<T> + 'static: Widget<T> +\n                  'static>(UnitPoint, impl Widget<T> + 'static) -> Align<T>","parent":null,"children":[],"decl_id":null,"docs":" Align only in the horizontal axis, keeping the child's size in the vertical.\n","sig":null,"attributes":[{"value":"/ Align only in the horizontal axis, keeping the child's size in the vertical.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":264496,"byte_end":264576,"line_start":63,"line_end":63,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":264932,"byte_end":264940,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"vertical","qualname":"<Align<T>>::vertical","value":"pub fn vertical<impl Widget<T> + 'static: Widget<T> +\n                'static>(UnitPoint, impl Widget<T> + 'static) -> Align<T>","parent":null,"children":[],"decl_id":null,"docs":" Align only in the vertical axis, keeping the child's size in the horizontal.\n","sig":null,"attributes":[{"value":"/ Align only in the vertical axis, keeping the child's size in the horizontal.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":264840,"byte_end":264920,"line_start":73,"line_end":73,"column_start":5,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":1432},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268308,"byte_end":268314,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"Button","qualname":"::widget::button::Button","value":"Button {  }","parent":null,"children":[{"krate":0,"index":1434},{"krate":0,"index":1435}],"decl_id":null,"docs":" A button with a text label.\n","sig":null,"attributes":[{"value":"/ A button with a text label.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268265,"byte_end":268296,"line_start":27,"line_end":27,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268787,"byte_end":268790,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<Button<T>>::new","value":"pub fn new<impl Into<LabelText<T>>: Into<LabelText<T>>>(impl Into<LabelText<T>>)\n-> Button<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new button with a text label.","sig":null,"attributes":[{"value":"/ Create a new button with a text label.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268396,"byte_end":268438,"line_start":34,"line_end":34,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268443,"byte_end":268446,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Use the `.on_click` method to provide a closure to be called when the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268451,"byte_end":268524,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ button is clicked.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268529,"byte_end":268551,"line_start":37,"line_end":37,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268556,"byte_end":268559,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268564,"byte_end":268578,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268583,"byte_end":268586,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268591,"byte_end":268598,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ use druid::widget::Button;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268603,"byte_end":268633,"line_start":42,"line_end":42,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268638,"byte_end":268641,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ let button = Button::new(\"Increment\").on_click(|_ctx, data: &mut u32, _env| {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268646,"byte_end":268727,"line_start":44,"line_end":44,"column_start":5,"column_end":86}},{"value":"/     *data += 1;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268732,"byte_end":268751,"line_start":45,"line_end":45,"column_start":5,"column_end":24}},{"value":"/ });","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268756,"byte_end":268763,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268768,"byte_end":268775,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":269728,"byte_end":269735,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"dynamic","qualname":"<Button<T>>::dynamic","value":"pub fn dynamic<impl Fn(&T, &Env) -> String + 'static: Fn(&T, &Env) -> String +\n               'static>(impl Fn(&T, &Env) -> String + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new dynamic button.","sig":null,"attributes":[{"value":"/ Construct a new dynamic button.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268948,"byte_end":268983,"line_start":55,"line_end":55,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268988,"byte_end":268991,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The contents of this button are generated from the data using a closure.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268996,"byte_end":269072,"line_start":57,"line_end":57,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":269077,"byte_end":269080,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This is provided as a convenience; a closure can also be passed to [`new`],","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":269085,"byte_end":269164,"line_start":59,"line_end":59,"column_start":5,"column_end":84}},{"value":"/ but due to limitations of the implementation of that method, the types in","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":269169,"byte_end":269246,"line_start":60,"line_end":60,"column_start":5,"column_end":82}},{"value":"/ the closure need to be annotated, which is not true for this method.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":269251,"byte_end":269323,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":269328,"byte_end":269331,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":269336,"byte_end":269350,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":269355,"byte_end":269358,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The following are equivalent.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":269363,"byte_end":269396,"line_start":65,"line_end":65,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":269401,"byte_end":269404,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":269409,"byte_end":269416,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use druid::Env;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":269421,"byte_end":269440,"line_start":68,"line_end":68,"column_start":5,"column_end":24}},{"value":"/ use druid::widget::Button;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":269445,"byte_end":269475,"line_start":69,"line_end":69,"column_start":5,"column_end":35}},{"value":"/ let button1: Button<u32> = Button::new(|data: &u32, _: &Env| format!(\"total is {}\", data));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":269480,"byte_end":269575,"line_start":70,"line_end":70,"column_start":5,"column_end":100}},{"value":"/ let button2: Button<u32> = Button::dynamic(|data, _| format!(\"total is {}\", data));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":269580,"byte_end":269667,"line_start":71,"line_end":71,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":269672,"byte_end":269679,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":269684,"byte_end":269687,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new`]: #method.new","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":269692,"byte_end":269716,"line_start":74,"line_end":74,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":269949,"byte_end":269957,"line_start":81,"line_end":81,"column_start":12,"column_end":20},"name":"on_click","qualname":"<Button<T>>::on_click","value":"pub fn on_click<impl Fn(&mut EventCtx, &mut T, &Env) + 'static: Fn(&mut EventCtx,\n                                                                   &mut T,\n                                                                   &Env) ->\n                () +\n                'static>(Self, impl Fn(&mut EventCtx, &mut T, &Env) + 'static)\n-> ControllerHost<Self, Click<T>>","parent":null,"children":[],"decl_id":null,"docs":" Provide a closure to be called when this button is clicked.\n","sig":null,"attributes":[{"value":"/ Provide a closure to be called when this button is clicked.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":269874,"byte_end":269937,"line_start":80,"line_end":80,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1482},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\checkbox.rs","byte_start":274216,"byte_end":274224,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"Checkbox","qualname":"::widget::checkbox::Checkbox","value":"Checkbox {  }","parent":null,"children":[{"krate":0,"index":1483}],"decl_id":null,"docs":" A checkbox that toggles a `bool`.\n","sig":null,"attributes":[{"value":"/ A checkbox that toggles a `bool`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\checkbox.rs","byte_start":274167,"byte_end":274204,"line_start":26,"line_end":26,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\checkbox.rs","byte_start":274360,"byte_end":274363,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<Checkbox>::new","value":"pub fn new<impl Into<LabelText<bool>>: Into<LabelText<bool>>>(impl Into<LabelText<bool>>)\n-> Checkbox","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Checkbox` with a label.\n","sig":null,"attributes":[{"value":"/ Create a new `Checkbox` with a label.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\checkbox.rs","byte_start":274307,"byte_end":274348,"line_start":32,"line_end":32,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1503},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":279230,"byte_end":279235,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"Click","qualname":"::widget::click::Click","value":"Click {  }","parent":null,"children":[{"krate":0,"index":1505}],"decl_id":null,"docs":" A clickable [`Controller`] widget. Pass this and a child widget to a\n [`ControllerHost`] to make the child interactive. More conveniently, this is\n available as an `on_click` method via [`WidgetExt`]'.","sig":null,"attributes":[{"value":"/ A clickable [`Controller`] widget. Pass this and a child widget to a","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":278452,"byte_end":278524,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ [`ControllerHost`] to make the child interactive. More conveniently, this is","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":278525,"byte_end":278605,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ available as an `on_click` method via [`WidgetExt`]'.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":278606,"byte_end":278663,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":278664,"byte_end":278667,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is an alternative to the standard [`Button`] widget, for when you want","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":278668,"byte_end":278747,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ to make an arbitrary widget clickable.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":278748,"byte_end":278790,"line_start":27,"line_end":27,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":278791,"byte_end":278794,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The child widget will also be updated on [`LifeCycle::HotChanged`] and","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":278795,"byte_end":278869,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ mouse down, which can be useful for painting based on `ctx.is_active()`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":278870,"byte_end":278945,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ and `ctx.is_hot()`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":278946,"byte_end":278969,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":278970,"byte_end":278973,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Controller`]: struct.Controller.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":278974,"byte_end":279016,"line_start":33,"line_end":33,"column_start":1,"column_end":43}},{"value":"/ [`ControllerHost`]: struct.ControllerHost.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":279017,"byte_end":279067,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"/ [`WidgetExt`]: ../trait.WidgetExt.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":279068,"byte_end":279110,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/ [`Button`]: struct.Button.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":279111,"byte_end":279145,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/ [`LifeCycle::HotChanged`]: ../enum.LifeCycle.html#variant.HotChanged","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":279146,"byte_end":279218,"line_start":37,"line_end":37,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":279461,"byte_end":279464,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Click<T>>::new","value":"pub fn new<impl Fn(&mut EventCtx, &mut T, &Env) + 'static: Fn(&mut EventCtx,\n                                                              &mut T, &Env) ->\n           () + 'static>(impl Fn(&mut EventCtx, &mut T, &Env) + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new clickable [`Controller`] widget.\n","sig":null,"attributes":[{"value":"/ Create a new clickable [`Controller`] widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":279400,"byte_end":279449,"line_start":44,"line_end":44,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4027},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":281500,"byte_end":281507,"line_start":21,"line_end":21,"column_start":5,"column_end":12},"name":"Contain","qualname":"::widget::common::FillStrat::Contain","value":"FillStrat::Contain","parent":{"krate":0,"index":4026},"children":[],"decl_id":null,"docs":" As large as posible without changing aspect ratio of image and all of image shown\n","sig":null,"attributes":[{"value":"/ As large as posible without changing aspect ratio of image and all of image shown","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":281410,"byte_end":281495,"line_start":20,"line_end":20,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4029},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":281601,"byte_end":281606,"line_start":23,"line_end":23,"column_start":5,"column_end":10},"name":"Cover","qualname":"::widget::common::FillStrat::Cover","value":"FillStrat::Cover","parent":{"krate":0,"index":4026},"children":[],"decl_id":null,"docs":" As large as posible with no dead space so that some of the image may be clipped\n","sig":null,"attributes":[{"value":"/ As large as posible with no dead space so that some of the image may be clipped","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":281513,"byte_end":281596,"line_start":22,"line_end":22,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4031},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":281687,"byte_end":281691,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Fill","qualname":"::widget::common::FillStrat::Fill","value":"FillStrat::Fill","parent":{"krate":0,"index":4026},"children":[],"decl_id":null,"docs":" Fill the widget with no dead space, aspect ratio of widget is used\n","sig":null,"attributes":[{"value":"/ Fill the widget with no dead space, aspect ratio of widget is used","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":281612,"byte_end":281682,"line_start":24,"line_end":24,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4033},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":281783,"byte_end":281792,"line_start":27,"line_end":27,"column_start":5,"column_end":14},"name":"FitHeight","qualname":"::widget::common::FillStrat::FitHeight","value":"FillStrat::FitHeight","parent":{"krate":0,"index":4026},"children":[],"decl_id":null,"docs":" Fill the hight with the images aspect ratio, some of the image may be clipped\n","sig":null,"attributes":[{"value":"/ Fill the hight with the images aspect ratio, some of the image may be clipped","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":281697,"byte_end":281778,"line_start":26,"line_end":26,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4035},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":281884,"byte_end":281892,"line_start":29,"line_end":29,"column_start":5,"column_end":13},"name":"FitWidth","qualname":"::widget::common::FillStrat::FitWidth","value":"FillStrat::FitWidth","parent":{"krate":0,"index":4026},"children":[],"decl_id":null,"docs":" Fill the width with the images aspect ratio, some of the image may be clipped\n","sig":null,"attributes":[{"value":"/ Fill the width with the images aspect ratio, some of the image may be clipped","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":281798,"byte_end":281879,"line_start":28,"line_end":28,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4037},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":281919,"byte_end":281923,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"name":"None","qualname":"::widget::common::FillStrat::None","value":"FillStrat::None","parent":{"krate":0,"index":4026},"children":[],"decl_id":null,"docs":" Do not scale\n","sig":null,"attributes":[{"value":"/ Do not scale","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":281898,"byte_end":281914,"line_start":30,"line_end":30,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4039},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":281975,"byte_end":281984,"line_start":33,"line_end":33,"column_start":5,"column_end":14},"name":"ScaleDown","qualname":"::widget::common::FillStrat::ScaleDown","value":"FillStrat::ScaleDown","parent":{"krate":0,"index":4026},"children":[],"decl_id":null,"docs":" Scale down to fit but do not scale up\n","sig":null,"attributes":[{"value":"/ Scale down to fit but do not scale up","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":281929,"byte_end":281970,"line_start":32,"line_end":32,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":4026},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":281394,"byte_end":281403,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"name":"FillStrat","qualname":"::widget::common::FillStrat","value":"pub enum FillStrat {\n\n    /// As large as posible without changing aspect ratio of image and all of image shown\n    Contain,\n\n    /// As large as posible with no dead space so that some of the image may be clipped\n    Cover,\n\n    /// Fill the widget with no dead space, aspect ratio of widget is used\n    Fill,\n\n    /// Fill the hight with the images aspect ratio, some of the image may be clipped\n    FitHeight,\n\n    /// Fill the width with the images aspect ratio, some of the image may be clipped\n    FitWidth,\n\n    /// Do not scale\n    None,\n\n    /// Scale down to fit but do not scale up\n    ScaleDown,\n}","parent":null,"children":[{"krate":0,"index":4027},{"krate":0,"index":4029},{"krate":0,"index":4031},{"krate":0,"index":4033},{"krate":0,"index":4035},{"krate":0,"index":4037},{"krate":0,"index":4039}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":282350,"byte_end":282364,"line_start":47,"line_end":47,"column_start":12,"column_end":26},"name":"affine_to_fill","qualname":"<FillStrat>::affine_to_fill","value":"pub fn affine_to_fill(Self, Size, Size) -> Affine","parent":null,"children":[],"decl_id":null,"docs":" Calculate an origin and scale for an image with a given `FillStrat`.","sig":null,"attributes":[{"value":"/ Calculate an origin and scale for an image with a given `FillStrat`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":282102,"byte_end":282174,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":282179,"byte_end":282182,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This takes some properties of a widget and a fill strategy and returns an affine matrix","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":282187,"byte_end":282278,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ used to position and scale the image in the widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":282283,"byte_end":282338,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1548},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":284531,"byte_end":284540,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"Container","qualname":"::widget::container::Container","value":"Container {  }","parent":null,"children":[{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553}],"decl_id":null,"docs":" A widget that provides simple visual styling options to a child.\n","sig":null,"attributes":[{"value":"/ A widget that provides simple visual styling options to a child.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":284451,"byte_end":284519,"line_start":29,"line_end":29,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":284774,"byte_end":284777,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<Container<T>>::new","value":"pub fn new<impl Widget<T> + 'static: Widget<T> +\n           'static>(impl Widget<T> + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create Container with a child\n","sig":null,"attributes":[{"value":"/ Create Container with a child","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":284729,"byte_end":284762,"line_start":39,"line_end":39,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":285514,"byte_end":285524,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"background","qualname":"<Container<T>>::background","value":"pub fn background<impl Into<BackgroundBrush<T>>: Into<BackgroundBrush<T>>>(Self,\n                                                                           impl Into<BackgroundBrush<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the background for this widget.","sig":null,"attributes":[{"value":"/ Set the background for this widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":284995,"byte_end":285034,"line_start":49,"line_end":49,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":285039,"byte_end":285042,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This can be passed anything which can be represented by a [`BackgroundBrush`];","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":285047,"byte_end":285129,"line_start":51,"line_end":51,"column_start":5,"column_end":87}},{"value":"/ noteably, it can be any [`Color`], a [`Key<Color>`] resolvable in the [`Env`],","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":285134,"byte_end":285216,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ any gradient, or a fully custom [`Painter`] widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":285221,"byte_end":285276,"line_start":53,"line_end":53,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":285281,"byte_end":285284,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ [`BackgroundBrush`]: ../enum.BackgroundBrush.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":285289,"byte_end":285342,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/ [`Color`]: ../struct.Color.thml","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":285347,"byte_end":285382,"line_start":56,"line_end":56,"column_start":5,"column_end":40}},{"value":"/ [`Key<Color>`]: ../struct.Key.thml","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":285387,"byte_end":285425,"line_start":57,"line_end":57,"column_start":5,"column_end":43}},{"value":"/ [`Env`]: ../struct.Env.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":285430,"byte_end":285461,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/ [`Painter`]: struct.Painter.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":285466,"byte_end":285502,"line_start":59,"line_end":59,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":285868,"byte_end":285874,"line_start":71,"line_end":71,"column_start":12,"column_end":18},"name":"border","qualname":"<Container<T>>::border","value":"pub fn border<impl Into<KeyOrValue<Color>>: Into<KeyOrValue<Color>>,\n              impl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(Self,\n                                                                 impl Into<KeyOrValue<Color>>,\n                                                                 impl Into<KeyOrValue<f64>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Paint a border around the widget with a color and width.","sig":null,"attributes":[{"value":"/ Paint a border around the widget with a color and width.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":285653,"byte_end":285713,"line_start":65,"line_end":65,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":285718,"byte_end":285721,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Arguments can be either concrete values, or a [`Key`] of the respective","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":285726,"byte_end":285801,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ type.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":285806,"byte_end":285815,"line_start":68,"line_end":68,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":285820,"byte_end":285823,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ [`Key`]: struct.Key.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":285828,"byte_end":285856,"line_start":70,"line_end":70,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1563},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":286219,"byte_end":286226,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"rounded","qualname":"<Container<T>>::rounded","value":"pub fn rounded(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Round off corners of this container by setting a corner radius\n","sig":null,"attributes":[{"value":"/ Round off corners of this container by setting a corner radius","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":286141,"byte_end":286207,"line_start":83,"line_end":83,"column_start":5,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":1586},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":291363,"byte_end":291373,"line_start":65,"line_end":65,"column_start":11,"column_end":21},"name":"Controller","qualname":"::widget::controller::Controller","value":"Controller<T, W: Widget<T>>","parent":null,"children":[{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1591}],"decl_id":null,"docs":" A trait for types that modify behaviour of a child widget.","sig":null,"attributes":[{"value":"/ A trait for types that modify behaviour of a child widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":289594,"byte_end":289656,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":289657,"byte_end":289660,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ A `Controller` is a type that manages a child widget, overriding or","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":289661,"byte_end":289732,"line_start":24,"line_end":24,"column_start":1,"column_end":72}},{"value":"/ customizing its event handling or update behaviour.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":289733,"byte_end":289788,"line_start":25,"line_end":25,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":289789,"byte_end":289792,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ A controller can only handle events and update; it cannot effect layout","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":289793,"byte_end":289868,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ or paint.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":289869,"byte_end":289882,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":289883,"byte_end":289886,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ `Controller` is a convenience; anything it can do could also be done","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":289887,"byte_end":289959,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ by creating a custom [`Widget`] that owned a child. This is somewhat cumbersome,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":289960,"byte_end":290044,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ however, especially when you only want to intercept or modify one or two events.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290045,"byte_end":290129,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290130,"byte_end":290133,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The methods on `Controller` are identical to the methods on [`Widget`],","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290134,"byte_end":290209,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ except that they are also passed the controller's child. The controller","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290210,"byte_end":290285,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ is responsible for **explicitly** forwarding calls on to the child as needed.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290286,"byte_end":290367,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290368,"byte_end":290371,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ A `Controller` is used with a [`ControllerHost`], which manages the relationship","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290372,"byte_end":290456,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/ between it and its child; although in general you would use the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290457,"byte_end":290524,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/ [`WidgetExt::controller`] method instead of instantiating a host directly.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290525,"byte_end":290603,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290604,"byte_end":290607,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290608,"byte_end":290622,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290623,"byte_end":290626,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ## A [`TextBox`] that takes focus on launch:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290627,"byte_end":290675,"line_start":44,"line_end":44,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290676,"byte_end":290679,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290680,"byte_end":290687,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ # use druid::widget::{Controller, TextBox};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290688,"byte_end":290735,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/ # use druid::{Env, Event, EventCtx, Widget};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290736,"byte_end":290784,"line_start":48,"line_end":48,"column_start":1,"column_end":49}},{"value":"/ struct TakeFocus;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290785,"byte_end":290806,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290807,"byte_end":290810,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ impl<T, W: Widget<T>> Controller<T, W> for TakeFocus {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290811,"byte_end":290869,"line_start":51,"line_end":51,"column_start":1,"column_end":59}},{"value":"/     fn event(&mut self, child: &mut W, ctx: &mut EventCtx, event: &Event, data: &mut T, env: &Env) {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290870,"byte_end":290974,"line_start":52,"line_end":52,"column_start":1,"column_end":105}},{"value":"/         if let Event::WindowConnected = event {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":290975,"byte_end":291026,"line_start":53,"line_end":53,"column_start":1,"column_end":52}},{"value":"/             ctx.request_focus();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":291027,"byte_end":291063,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":291064,"byte_end":291077,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/         child.event(ctx, event, data, env)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":291078,"byte_end":291124,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/     }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":291125,"byte_end":291134,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":291135,"byte_end":291140,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":291141,"byte_end":291148,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":291149,"byte_end":291152,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Widget`]: ../trait.Widget.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":291153,"byte_end":291189,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ [`TextBox`]: struct.TextBox.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":291190,"byte_end":291226,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/ [`ControllerHost`]: struct.ControllerHost.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":291227,"byte_end":291277,"line_start":63,"line_end":63,"column_start":1,"column_end":51}},{"value":"/ [`WidgetExt::controller`]: ../trait.WidgetExt.html#tymethod.controller","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":291278,"byte_end":291352,"line_start":64,"line_end":64,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":291400,"byte_end":291405,"line_start":66,"line_end":66,"column_start":8,"column_end":13},"name":"event","qualname":"::widget::controller::Controller::event","value":"pub fn event(&mut Self, &mut W, &mut EventCtx, &Event, &mut T, &Env)","parent":{"krate":0,"index":1586},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":291551,"byte_end":291560,"line_start":70,"line_end":70,"column_start":8,"column_end":17},"name":"lifecycle","qualname":"::widget::controller::Controller::lifecycle","value":"pub fn lifecycle(&mut Self, &mut W, &mut LifeCycleCtx, &LifeCycle, &T, &Env)","parent":{"krate":0,"index":1586},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1591},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":291769,"byte_end":291775,"line_start":81,"line_end":81,"column_start":8,"column_end":14},"name":"update","qualname":"::widget::controller::Controller::update","value":"pub fn update(&mut Self, &mut W, &mut UpdateCtx, &T, &T, &Env)","parent":{"krate":0,"index":1586},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1592},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":292070,"byte_end":292084,"line_start":90,"line_end":90,"column_start":12,"column_end":26},"name":"ControllerHost","qualname":"::widget::controller::ControllerHost","value":"ControllerHost {  }","parent":null,"children":[{"krate":0,"index":1595},{"krate":0,"index":1596}],"decl_id":null,"docs":" A [`Widget`] that manages a child and a [`Controller`].","sig":null,"attributes":[{"value":"/ A [`Widget`] that manages a child and a [`Controller`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":291916,"byte_end":291975,"line_start":86,"line_end":86,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":291976,"byte_end":291979,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [`Widget`]: ../trait.Widget.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":291980,"byte_end":292016,"line_start":88,"line_end":88,"column_start":1,"column_end":37}},{"value":"/ [`Controller`]: trait.Controller.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":292017,"byte_end":292058,"line_start":89,"line_end":89,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":292214,"byte_end":292217,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"new","qualname":"<ControllerHost<W, C>>::new","value":"pub fn new(W, C) -> ControllerHost<W, C>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ControllerHost`.\n","sig":null,"attributes":[{"value":"/ Create a new `ControllerHost`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":292168,"byte_end":292202,"line_start":96,"line_end":96,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1629},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\either.rs","byte_start":294211,"byte_end":294217,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"Either","qualname":"::widget::either::Either","value":"Either {  }","parent":null,"children":[{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634}],"decl_id":null,"docs":" A widget that switches between two possible child views.\n","sig":null,"attributes":[{"value":"/ A widget that switches between two possible child views.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\either.rs","byte_start":294139,"byte_end":294199,"line_start":23,"line_end":23,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1637},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\either.rs","byte_start":294645,"byte_end":294648,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Either<T>>::new","value":"pub fn new<impl Fn(&T, &Env) -> bool + 'static: Fn(&T, &Env) -> bool +\n           'static, impl Widget<T> + 'static: Widget<T> + 'static,\n           impl Widget<T> + 'static: Widget<T> +\n           'static>(impl Fn(&T, &Env) -> bool + 'static,\n                    impl Widget<T> + 'static, impl Widget<T> + 'static)\n-> Either<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new widget that switches between two views.","sig":null,"attributes":[{"value":"/ Create a new widget that switches between two views.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\either.rs","byte_start":294416,"byte_end":294472,"line_start":32,"line_end":32,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\either.rs","byte_start":294477,"byte_end":294480,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The given closure is evaluated on data change. If its value is `true`, then","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\either.rs","byte_start":294485,"byte_end":294564,"line_start":34,"line_end":34,"column_start":5,"column_end":84}},{"value":"/ the `true_branch` widget is shown, otherwise `false_branch`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\either.rs","byte_start":294569,"byte_end":294633,"line_start":35,"line_end":35,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1663},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298114,"byte_end":298122,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"EnvScope","qualname":"::widget::env_scope::EnvScope","value":"EnvScope {  }","parent":null,"children":[{"krate":0,"index":1666},{"krate":0,"index":1667}],"decl_id":null,"docs":" A widget that accepts a closure to update the environment for its child.\n","sig":null,"attributes":[{"value":"/ A widget that accepts a closure to update the environment for its child.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298026,"byte_end":298102,"line_start":23,"line_end":23,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298952,"byte_end":298955,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<EnvScope<T, W>>::new","value":"pub fn new<impl Fn(&mut Env, &T) + 'static: Fn(&mut Env, &T) -> () +\n           'static>(impl Fn(&mut Env, &T) + 'static, W) -> EnvScope<T, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a widget that updates the environment for its descendants.","sig":null,"attributes":[{"value":"/ Create a widget that updates the environment for its descendants.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298236,"byte_end":298305,"line_start":30,"line_end":30,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298310,"byte_end":298313,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Accepts a closure that sets Env values.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298318,"byte_end":298361,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298366,"byte_end":298369,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This is available as [`WidgetExt::env_scope`] for convenience.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298374,"byte_end":298440,"line_start":34,"line_end":34,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298445,"byte_end":298448,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298453,"byte_end":298467,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298472,"byte_end":298479,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ # use druid::{theme, Widget};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298484,"byte_end":298517,"line_start":38,"line_end":38,"column_start":5,"column_end":38}},{"value":"/ # use druid::piet::{Color};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298522,"byte_end":298553,"line_start":39,"line_end":39,"column_start":5,"column_end":36}},{"value":"/ # use druid::widget::{Label, EnvScope};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298558,"byte_end":298601,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/ # fn build_widget() -> impl Widget<String> {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298606,"byte_end":298654,"line_start":41,"line_end":41,"column_start":5,"column_end":53}},{"value":"/ EnvScope::new(","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298659,"byte_end":298677,"line_start":42,"line_end":42,"column_start":5,"column_end":23}},{"value":"/     |env, data| {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298682,"byte_end":298703,"line_start":43,"line_end":43,"column_start":5,"column_end":26}},{"value":"/         env.set(theme::LABEL_COLOR, Color::WHITE);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298708,"byte_end":298762,"line_start":44,"line_end":44,"column_start":5,"column_end":59}},{"value":"/     },","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298767,"byte_end":298777,"line_start":45,"line_end":45,"column_start":5,"column_end":15}},{"value":"/     Label::new(\"White text!\")","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298782,"byte_end":298815,"line_start":46,"line_end":46,"column_start":5,"column_end":38}},{"value":"/ )","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298820,"byte_end":298825,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298830,"byte_end":298833,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298838,"byte_end":298845,"line_start":49,"line_end":49,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298850,"byte_end":298857,"line_start":50,"line_end":50,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298862,"byte_end":298865,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ [`WidgetExt::env_scope`]: ../trait.WidgetExt.html#method.env_scope","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298870,"byte_end":298940,"line_start":52,"line_end":52,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1703},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":306266,"byte_end":306270,"line_start":142,"line_end":142,"column_start":12,"column_end":16},"name":"Flex","qualname":"::widget::flex::Flex","value":"Flex {  }","parent":null,"children":[{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709}],"decl_id":null,"docs":" A container with either horizontal or vertical layout.","sig":null,"attributes":[{"value":"/ A container with either horizontal or vertical layout.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":301386,"byte_end":301444,"line_start":26,"line_end":26,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":301445,"byte_end":301448,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This widget is the foundation of most layouts, and is highly configurable.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":301449,"byte_end":301527,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":301528,"byte_end":301531,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Flex layout algorithm","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":301532,"byte_end":301559,"line_start":30,"line_end":30,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":301560,"byte_end":301563,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Children of a `Flex` container can have an optional `flex` parameter.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":301564,"byte_end":301637,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ Layout occurs in several passes. First we measure (calling their [`layout`]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":301638,"byte_end":301717,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ method) our non-flex children, providing them with unbounded space on the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":301718,"byte_end":301795,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ main axis. Next, the remaining space is divided between the flex children","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":301796,"byte_end":301873,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ according to their flex factor, and they are measured. Unlike a non-flex","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":301874,"byte_end":301950,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ child, a child with a non-zero flex factor has a maximum allowed size","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":301951,"byte_end":302024,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ on the main axis; non-flex children are allowed to choose their size first,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302025,"byte_end":302104,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ and freely.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302105,"byte_end":302120,"line_start":39,"line_end":39,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302121,"byte_end":302124,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If you would like a child to be forced to use up all of the flex space","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302125,"byte_end":302199,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ passed to it, you can place it in a [`SizedBox`] set to `expand` in the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302200,"byte_end":302275,"line_start":42,"line_end":42,"column_start":1,"column_end":76}},{"value":"/ appropriate axis. There are convenience methods for this available on","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302276,"byte_end":302349,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ [`WidgetExt`]: [`expand_width`] and [`expand_height`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302350,"byte_end":302408,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302409,"byte_end":302412,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Flex or non-flex?","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302413,"byte_end":302436,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302437,"byte_end":302440,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When should your children be flexible? With other things being equal,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302441,"byte_end":302514,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"/ a flexible child has lower layout priority than a non-flexible child.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302515,"byte_end":302588,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/ Imagine, for instance, we have a row that is 30dp wide, and we have","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302589,"byte_end":302660,"line_start":50,"line_end":50,"column_start":1,"column_end":72}},{"value":"/ two children, both of which want to be 20dp wide. If child #1 is non-flex","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302661,"byte_end":302738,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ and child #2 is flex, the first widget will take up its 20dp, and the second","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302739,"byte_end":302819,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ widget will be constrained to 10dp.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302820,"byte_end":302859,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302860,"byte_end":302863,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ If, instead, both widgets are flex, they will each be given equal space,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302864,"byte_end":302940,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ and both will end up taking up 15dp.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302941,"byte_end":302981,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302982,"byte_end":302985,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ If both are non-flex they will both take up 20dp, and will overflow the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":302986,"byte_end":303061,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ container.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303062,"byte_end":303076,"line_start":59,"line_end":59,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303077,"byte_end":303080,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```no_compile","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303081,"byte_end":303098,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/  -------non-flex----- -flex-----","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303099,"byte_end":303135,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/ |       child #1     | child #2 |","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303136,"byte_end":303173,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303174,"byte_end":303177,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303178,"byte_end":303181,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/  ----flex------- ----flex-------","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303182,"byte_end":303218,"line_start":66,"line_end":66,"column_start":1,"column_end":37}},{"value":"/ |    child #1   |    child #2   |","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303219,"byte_end":303256,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303257,"byte_end":303260,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303261,"byte_end":303268,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303269,"byte_end":303272,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ In general, if you are using widgets that are opinionated about their size","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303273,"byte_end":303351,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ (such as most control widgets, which are designed to lay out nicely together,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303352,"byte_end":303433,"line_start":72,"line_end":72,"column_start":1,"column_end":82}},{"value":"/ or text widgets that are sized to fit their text) you should make them","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303434,"byte_end":303508,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ non-flexible.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303509,"byte_end":303526,"line_start":74,"line_end":74,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303527,"byte_end":303530,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ If you are trying to divide space evenly, or if you want a particular item","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303531,"byte_end":303609,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/ to have access to all left over space, then you should make it flexible.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303610,"byte_end":303686,"line_start":77,"line_end":77,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303687,"byte_end":303690,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ **note**: by default, a widget will not necessarily use all the space that","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303691,"byte_end":303769,"line_start":79,"line_end":79,"column_start":1,"column_end":79}},{"value":"/ is available to it. For instance, the [`TextBox`] widget has a default","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303770,"byte_end":303844,"line_start":80,"line_end":80,"column_start":1,"column_end":75}},{"value":"/ width, and will choose this width if possible, even if more space is","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303845,"byte_end":303917,"line_start":81,"line_end":81,"column_start":1,"column_end":73}},{"value":"/ available to it. If you want to force a widget to use all available space,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303918,"byte_end":303996,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ you should expand it, with [`expand_width`] or [`expand_height`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":303997,"byte_end":304066,"line_start":83,"line_end":83,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304067,"byte_end":304070,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304071,"byte_end":304074,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ # Options","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304075,"byte_end":304088,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304089,"byte_end":304092,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ To experiment with these options, see the `flex` example in `druid/examples`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304093,"byte_end":304174,"line_start":88,"line_end":88,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304175,"byte_end":304178,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ - [`CrossAxisAlignment`] determines how children are positioned on the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304179,"byte_end":304253,"line_start":90,"line_end":90,"column_start":1,"column_end":75}},{"value":"/ cross or 'minor' axis. The default is `CrossAxisAlignment::Center`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304254,"byte_end":304325,"line_start":91,"line_end":91,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304326,"byte_end":304329,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ - [`MainAxisAlignment`] determines how children are positioned on the main","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304330,"byte_end":304408,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ axis; this is only meaningful if the container has more space on the main","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304409,"byte_end":304486,"line_start":94,"line_end":94,"column_start":1,"column_end":78}},{"value":"/ axis than is taken up by its children.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304487,"byte_end":304529,"line_start":95,"line_end":95,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304530,"byte_end":304533,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ - [`must_fill_main_axis`] determines whether the container is obliged to","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304534,"byte_end":304610,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/ be maximally large on the major axis, as determined by its own constraints.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304611,"byte_end":304690,"line_start":98,"line_end":98,"column_start":1,"column_end":80}},{"value":"/ If this is `true`, then the container must fill the available space on that","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304691,"byte_end":304770,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"/ axis; otherwise it may be smaller if its children are smaller.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304771,"byte_end":304837,"line_start":100,"line_end":100,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304838,"byte_end":304841,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Additional options can be set (or overridden) in the [`FlexParams`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304842,"byte_end":304914,"line_start":102,"line_end":102,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304915,"byte_end":304918,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304919,"byte_end":304933,"line_start":104,"line_end":104,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304934,"byte_end":304937,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Construction with builder methods","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304938,"byte_end":304975,"line_start":106,"line_end":106,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304976,"byte_end":304979,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304980,"byte_end":304987,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/ use druid::widget::{Flex, FlexParams, Label, Slider, CrossAxisAlignment};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":304988,"byte_end":305065,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305066,"byte_end":305069,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ let my_row = Flex::row()","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305070,"byte_end":305098,"line_start":111,"line_end":111,"column_start":1,"column_end":29}},{"value":"/     .cross_axis_alignment(CrossAxisAlignment::Center)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305099,"byte_end":305156,"line_start":112,"line_end":112,"column_start":1,"column_end":58}},{"value":"/     .must_fill_main_axis(true)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305157,"byte_end":305191,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/     .with_child(Label::new(\"hello\"))","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305192,"byte_end":305232,"line_start":114,"line_end":114,"column_start":1,"column_end":41}},{"value":"/     .with_spacer(8.0)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305233,"byte_end":305258,"line_start":115,"line_end":115,"column_start":1,"column_end":26}},{"value":"/     .with_flex_child(Slider::new(), 1.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305259,"byte_end":305304,"line_start":116,"line_end":116,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305305,"byte_end":305312,"line_start":117,"line_end":117,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305313,"byte_end":305316,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ Construction with mutating methods","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305317,"byte_end":305355,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305356,"byte_end":305359,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305360,"byte_end":305367,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ use druid::widget::{Flex, FlexParams, Label, Slider, CrossAxisAlignment};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305368,"byte_end":305445,"line_start":122,"line_end":122,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305446,"byte_end":305449,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ let mut my_row = Flex::row();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305450,"byte_end":305483,"line_start":124,"line_end":124,"column_start":1,"column_end":34}},{"value":"/ my_row.set_must_fill_main_axis(true);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305484,"byte_end":305525,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ my_row.set_cross_axis_alignment(CrossAxisAlignment::Center);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305526,"byte_end":305590,"line_start":126,"line_end":126,"column_start":1,"column_end":65}},{"value":"/ my_row.add_child(Label::new(\"hello\"));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305591,"byte_end":305633,"line_start":127,"line_end":127,"column_start":1,"column_end":43}},{"value":"/ my_row.add_spacer(8.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305634,"byte_end":305661,"line_start":128,"line_end":128,"column_start":1,"column_end":28}},{"value":"/ my_row.add_flex_child(Slider::new(), 1.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305662,"byte_end":305708,"line_start":129,"line_end":129,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305709,"byte_end":305716,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305717,"byte_end":305720,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ [`layout`]: ../trait.Widget.html#tymethod.layout","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305721,"byte_end":305773,"line_start":132,"line_end":132,"column_start":1,"column_end":53}},{"value":"/ [`MainAxisAlignment`]: enum.MainAxisAlignment.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305774,"byte_end":305828,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ [`CrossAxisAlignment`]: enum.CrossAxisAlignment.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305829,"byte_end":305885,"line_start":134,"line_end":134,"column_start":1,"column_end":57}},{"value":"/ [`must_fill_main_axis`]: struct.Flex.html#method.must_fill_main_axis","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305886,"byte_end":305958,"line_start":135,"line_end":135,"column_start":1,"column_end":73}},{"value":"/ [`FlexParams`]: struct.FlexParams.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":305959,"byte_end":306001,"line_start":136,"line_end":136,"column_start":1,"column_end":43}},{"value":"/ [`WidgetExt`]: ../trait.WidgetExt.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":306002,"byte_end":306044,"line_start":137,"line_end":137,"column_start":1,"column_end":43}},{"value":"/ [`expand_height`]: ../trait.WidgetExt.html#method.expand_height","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":306045,"byte_end":306112,"line_start":138,"line_end":138,"column_start":1,"column_end":68}},{"value":"/ [`expand_width`]: ../trait.WidgetExt.html#method.expand_width","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":306113,"byte_end":306178,"line_start":139,"line_end":139,"column_start":1,"column_end":66}},{"value":"/ [`TextBox`]: struct.TextBox.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":306179,"byte_end":306215,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/ [`SizedBox`]: struct.SizedBox.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":306216,"byte_end":306254,"line_start":141,"line_end":141,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":4047},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307996,"byte_end":308006,"line_start":193,"line_end":193,"column_start":12,"column_end":22},"name":"FlexParams","qualname":"::widget::flex::FlexParams","value":"FlexParams {  }","parent":null,"children":[{"krate":0,"index":4048},{"krate":0,"index":4049}],"decl_id":null,"docs":" Optional parameters for an item in a [`Flex`] container (row or column).","sig":null,"attributes":[{"value":"/ Optional parameters for an item in a [`Flex`] container (row or column).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":306641,"byte_end":306717,"line_start":161,"line_end":161,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":306718,"byte_end":306721,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Generally, when you would like to add a flexible child to a container,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":306722,"byte_end":306796,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ you can simply call [`with_flex_child`] or [`add_flex_child`], passing the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":306797,"byte_end":306875,"line_start":164,"line_end":164,"column_start":1,"column_end":79}},{"value":"/ child and the desired flex factor as a `f64`, which has an impl of","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":306876,"byte_end":306946,"line_start":165,"line_end":165,"column_start":1,"column_end":71}},{"value":"/ `Into<FlexParams>`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":306947,"byte_end":306970,"line_start":166,"line_end":166,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":306971,"byte_end":306974,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ If you need to set additional paramaters, such as a custom [`CrossAxisAlignment`],","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":306975,"byte_end":307061,"line_start":168,"line_end":168,"column_start":1,"column_end":87}},{"value":"/ you can construct `FlexParams` directly. By default, the child has the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307062,"byte_end":307136,"line_start":169,"line_end":169,"column_start":1,"column_end":75}},{"value":"/ same `CrossAxisAlignment` as the container.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307137,"byte_end":307184,"line_start":170,"line_end":170,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307185,"byte_end":307188,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ For an overview of the flex layout algorithm, see the [`Flex`] docs.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307189,"byte_end":307261,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307262,"byte_end":307265,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307266,"byte_end":307280,"line_start":174,"line_end":174,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307281,"byte_end":307288,"line_start":175,"line_end":175,"column_start":1,"column_end":8}},{"value":"/ use druid::widget::{FlexParams, Label, CrossAxisAlignment};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307289,"byte_end":307352,"line_start":176,"line_end":176,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307353,"byte_end":307356,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ let mut row = druid::widget::Flex::<()>::row();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307357,"byte_end":307408,"line_start":178,"line_end":178,"column_start":1,"column_end":52}},{"value":"/ let child_1 = Label::new(\"I'm hungry\");","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307409,"byte_end":307452,"line_start":179,"line_end":179,"column_start":1,"column_end":44}},{"value":"/ let child_2 = Label::new(\"I'm scared\");","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307453,"byte_end":307496,"line_start":180,"line_end":180,"column_start":1,"column_end":44}},{"value":"/ // normally you just use a float:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307497,"byte_end":307534,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"/ row.add_flex_child(child_1, 1.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307535,"byte_end":307572,"line_start":182,"line_end":182,"column_start":1,"column_end":38}},{"value":"/ // you can construct FlexParams if needed:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307573,"byte_end":307619,"line_start":183,"line_end":183,"column_start":1,"column_end":47}},{"value":"/ let params = FlexParams::new(2.0, CrossAxisAlignment::End);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307620,"byte_end":307683,"line_start":184,"line_end":184,"column_start":1,"column_end":64}},{"value":"/ row.add_flex_child(child_2, params);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307684,"byte_end":307724,"line_start":185,"line_end":185,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307725,"byte_end":307732,"line_start":186,"line_end":186,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307733,"byte_end":307736,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ [`CrossAxisAlignment`]: enum.CrossAxisAlignment.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307737,"byte_end":307793,"line_start":188,"line_end":188,"column_start":1,"column_end":57}},{"value":"/ [`Flex`]: struct.Flex.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307794,"byte_end":307824,"line_start":189,"line_end":189,"column_start":1,"column_end":31}},{"value":"/ [`with_flex_child`]: struct.Flex.html#method.with_flex_child","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307825,"byte_end":307889,"line_start":190,"line_end":190,"column_start":1,"column_end":65}},{"value":"/ [`add_flex_child`]: struct.Flex.html#method.add_flex_child","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":307890,"byte_end":307952,"line_start":191,"line_end":191,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4064},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308577,"byte_end":308582,"line_start":214,"line_end":214,"column_start":5,"column_end":10},"name":"Start","qualname":"::widget::flex::CrossAxisAlignment::Start","value":"CrossAxisAlignment::Start","parent":{"krate":0,"index":4063},"children":[],"decl_id":null,"docs":" Top or leading.","sig":null,"attributes":[{"value":"/ Top or leading.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308418,"byte_end":308437,"line_start":210,"line_end":210,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308442,"byte_end":308445,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ In a vertical container, widgets are top aligned. In a horiziontal","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308450,"byte_end":308520,"line_start":212,"line_end":212,"column_start":5,"column_end":75}},{"value":"/ container, their leading edges are aligned.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308525,"byte_end":308572,"line_start":213,"line_end":213,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4066},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308635,"byte_end":308641,"line_start":216,"line_end":216,"column_start":5,"column_end":11},"name":"Center","qualname":"::widget::flex::CrossAxisAlignment::Center","value":"CrossAxisAlignment::Center","parent":{"krate":0,"index":4063},"children":[],"decl_id":null,"docs":" Widgets are centered in the container.\n","sig":null,"attributes":[{"value":"/ Widgets are centered in the container.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308588,"byte_end":308630,"line_start":215,"line_end":215,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4068},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308814,"byte_end":308817,"line_start":221,"line_end":221,"column_start":5,"column_end":8},"name":"End","qualname":"::widget::flex::CrossAxisAlignment::End","value":"CrossAxisAlignment::End","parent":{"krate":0,"index":4063},"children":[],"decl_id":null,"docs":" Bottom or trailing.","sig":null,"attributes":[{"value":"/ Bottom or trailing.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308647,"byte_end":308670,"line_start":217,"line_end":217,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308675,"byte_end":308678,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ In a vertical container, widgets are bottom aligned. In a horiziontal","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308683,"byte_end":308756,"line_start":219,"line_end":219,"column_start":5,"column_end":78}},{"value":"/ container, their trailing edges are aligned.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308761,"byte_end":308809,"line_start":220,"line_end":220,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":4063},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308393,"byte_end":308411,"line_start":209,"line_end":209,"column_start":10,"column_end":28},"name":"CrossAxisAlignment","qualname":"::widget::flex::CrossAxisAlignment","value":"pub enum CrossAxisAlignment {\n\n    /// Top or leading.\n    ///\n    /// In a vertical container, widgets are top aligned. In a horiziontal\n    /// container, their leading edges are aligned.\n    Start,\n\n    /// Widgets are centered in the container.\n    Center,\n\n    /// Bottom or trailing.\n    ///\n    /// In a vertical container, widgets are bottom aligned. In a horiziontal\n    /// container, their trailing edges are aligned.\n    End,\n}","parent":null,"children":[{"krate":0,"index":4064},{"krate":0,"index":4066},{"krate":0,"index":4068}],"decl_id":null,"docs":" The alignment of the widgets on the container's cross (or minor) axis.","sig":null,"attributes":[{"value":"/ The alignment of the widgets on the container's cross (or minor) axis.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308149,"byte_end":308223,"line_start":204,"line_end":204,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308224,"byte_end":308227,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ If a widget is smaller than the container on the minor axis, this determines","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308228,"byte_end":308308,"line_start":206,"line_end":206,"column_start":1,"column_end":81}},{"value":"/ where it is positioned.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308309,"byte_end":308336,"line_start":207,"line_end":207,"column_start":1,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4081},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309200,"byte_end":309205,"line_start":233,"line_end":233,"column_start":5,"column_end":10},"name":"Start","qualname":"::widget::flex::MainAxisAlignment::Start","value":"MainAxisAlignment::Start","parent":{"krate":0,"index":4080},"children":[],"decl_id":null,"docs":" Top or leading.","sig":null,"attributes":[{"value":"/ Top or leading.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309092,"byte_end":309111,"line_start":230,"line_end":230,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309116,"byte_end":309119,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Children are aligned with the top or leading edge, without padding.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309124,"byte_end":309195,"line_start":232,"line_end":232,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4083},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309259,"byte_end":309265,"line_start":235,"line_end":235,"column_start":5,"column_end":11},"name":"Center","qualname":"::widget::flex::MainAxisAlignment::Center","value":"MainAxisAlignment::Center","parent":{"krate":0,"index":4080},"children":[],"decl_id":null,"docs":" Children are centered, without padding.\n","sig":null,"attributes":[{"value":"/ Children are centered, without padding.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309211,"byte_end":309254,"line_start":234,"line_end":234,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4085},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309387,"byte_end":309390,"line_start":239,"line_end":239,"column_start":5,"column_end":8},"name":"End","qualname":"::widget::flex::MainAxisAlignment::End","value":"MainAxisAlignment::End","parent":{"krate":0,"index":4080},"children":[],"decl_id":null,"docs":" Bottom or trailing.","sig":null,"attributes":[{"value":"/ Bottom or trailing.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309271,"byte_end":309294,"line_start":236,"line_end":236,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309299,"byte_end":309302,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Children are aligned with the bottom or trailing edge, without padding.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309307,"byte_end":309382,"line_start":238,"line_end":238,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4087},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309454,"byte_end":309466,"line_start":241,"line_end":241,"column_start":5,"column_end":17},"name":"SpaceBetween","qualname":"::widget::flex::MainAxisAlignment::SpaceBetween","value":"MainAxisAlignment::SpaceBetween","parent":{"krate":0,"index":4080},"children":[],"decl_id":null,"docs":" Extra space is divided evenly between each child.\n","sig":null,"attributes":[{"value":"/ Extra space is divided evenly between each child.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309396,"byte_end":309449,"line_start":240,"line_end":240,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4089},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309554,"byte_end":309565,"line_start":243,"line_end":243,"column_start":5,"column_end":16},"name":"SpaceEvenly","qualname":"::widget::flex::MainAxisAlignment::SpaceEvenly","value":"MainAxisAlignment::SpaceEvenly","parent":{"krate":0,"index":4080},"children":[],"decl_id":null,"docs":" Extra space is divided evenly between each child, as well as at the ends.\n","sig":null,"attributes":[{"value":"/ Extra space is divided evenly between each child, as well as at the ends.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309472,"byte_end":309549,"line_start":242,"line_end":242,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4091},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309779,"byte_end":309790,"line_start":248,"line_end":248,"column_start":5,"column_end":16},"name":"SpaceAround","qualname":"::widget::flex::MainAxisAlignment::SpaceAround","value":"MainAxisAlignment::SpaceAround","parent":{"krate":0,"index":4080},"children":[],"decl_id":null,"docs":" Space between each child, with less at the start and end.","sig":null,"attributes":[{"value":"/ Space between each child, with less at the start and end.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309571,"byte_end":309632,"line_start":244,"line_end":244,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309637,"byte_end":309640,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ This divides space such that each child is separated by `n` units,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309645,"byte_end":309715,"line_start":246,"line_end":246,"column_start":5,"column_end":75}},{"value":"/ and the start and end have `n/2` units of padding.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309720,"byte_end":309774,"line_start":247,"line_end":247,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":4080},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309068,"byte_end":309085,"line_start":229,"line_end":229,"column_start":10,"column_end":27},"name":"MainAxisAlignment","qualname":"::widget::flex::MainAxisAlignment","value":"pub enum MainAxisAlignment {\n\n    /// Top or leading.\n    ///\n    /// Children are aligned with the top or leading edge, without padding.\n    Start,\n\n    /// Children are centered, without padding.\n    Center,\n\n    /// Bottom or trailing.\n    ///\n    /// Children are aligned with the bottom or trailing edge, without padding.\n    End,\n\n    /// Extra space is divided evenly between each child.\n    SpaceBetween,\n\n    /// Extra space is divided evenly between each child, as well as at the ends.\n    SpaceEvenly,\n\n    /// Space between each child, with less at the start and end.\n    ///\n    /// This divides space such that each child is separated by `n` units,\n    /// and the start and end have `n/2` units of padding.\n    SpaceAround,\n}","parent":null,"children":[{"krate":0,"index":4081},{"krate":0,"index":4083},{"krate":0,"index":4085},{"krate":0,"index":4087},{"krate":0,"index":4089},{"krate":0,"index":4091}],"decl_id":null,"docs":" Arrangement of children on the main axis.","sig":null,"attributes":[{"value":"/ Arrangement of children on the main axis.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308822,"byte_end":308867,"line_start":224,"line_end":224,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308868,"byte_end":308871,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ If there is surplus space on the main axis after laying out children, this","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308872,"byte_end":308950,"line_start":226,"line_end":226,"column_start":1,"column_end":79}},{"value":"/ enum represents how children are laid out in this space.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":308951,"byte_end":309011,"line_start":227,"line_end":227,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":310379,"byte_end":310382,"line_start":264,"line_end":264,"column_start":12,"column_end":15},"name":"new","qualname":"<FlexParams>::new","value":"pub fn new<impl Into<Option<CrossAxisAlignment>>: Into<Option<CrossAxisAlignment>>>(f64,\n                                                                                    impl Into<Option<CrossAxisAlignment>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create custom `FlexParams` with a specific `flex_factor` and an optional\n [`CrossAxisAlignment`].","sig":null,"attributes":[{"value":"/ Create custom `FlexParams` with a specific `flex_factor` and an optional","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309817,"byte_end":309893,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ [`CrossAxisAlignment`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309898,"byte_end":309925,"line_start":253,"line_end":253,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309930,"byte_end":309933,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ You likely only need to create these manually if you need to specify","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309938,"byte_end":310010,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/ a custom alignment; if you only need to use a custom `flex_factor` you","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":310015,"byte_end":310089,"line_start":256,"line_end":256,"column_start":5,"column_end":79}},{"value":"/ can pass an `f64` to any of the functions that take `FlexParams`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":310094,"byte_end":310163,"line_start":257,"line_end":257,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":310168,"byte_end":310171,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ By default, the widget uses the alignment of its parent [`Flex`] container.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":310176,"byte_end":310255,"line_start":259,"line_end":259,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":310260,"byte_end":310263,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":310268,"byte_end":310271,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ [`Flex`]: struct.Flex.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":310276,"byte_end":310306,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"/ [`CrossAxisAlignment`]: enum.CrossAxisAlignment.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":310311,"byte_end":310367,"line_start":263,"line_end":263,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":312040,"byte_end":312043,"line_start":322,"line_end":322,"column_start":12,"column_end":15},"name":"row","qualname":"<Flex<T>>::row","value":"pub fn row() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new horizontal stack.","sig":null,"attributes":[{"value":"/ Create a new horizontal stack.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":311913,"byte_end":311947,"line_start":319,"line_end":319,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":311952,"byte_end":311955,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ The child widgets are laid out horizontally, from left to right.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":311960,"byte_end":312028,"line_start":321,"line_end":321,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":312437,"byte_end":312443,"line_start":335,"line_end":335,"column_start":12,"column_end":18},"name":"column","qualname":"<Flex<T>>::column","value":"pub fn column() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new vertical stack.","sig":null,"attributes":[{"value":"/ Create a new vertical stack.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":312314,"byte_end":312346,"line_start":332,"line_end":332,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":312351,"byte_end":312354,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ The child widgets are laid out vertically, from top to bottom.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":312359,"byte_end":312425,"line_start":334,"line_end":334,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":312871,"byte_end":312891,"line_start":348,"line_end":348,"column_start":12,"column_end":32},"name":"cross_axis_alignment","qualname":"<Flex<T>>::cross_axis_alignment","value":"pub fn cross_axis_alignment(Self, CrossAxisAlignment) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for specifying the childrens' [`CrossAxisAlignment`].","sig":null,"attributes":[{"value":"/ Builder-style method for specifying the childrens' [`CrossAxisAlignment`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":312712,"byte_end":312790,"line_start":345,"line_end":345,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":312795,"byte_end":312798,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ [`CrossAxisAlignment`]: enum.CrossAxisAlignment.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":312803,"byte_end":312859,"line_start":347,"line_end":347,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":313165,"byte_end":313184,"line_start":356,"line_end":356,"column_start":12,"column_end":31},"name":"main_axis_alignment","qualname":"<Flex<T>>::main_axis_alignment","value":"pub fn main_axis_alignment(Self, MainAxisAlignment) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for specifying the childrens' [`MainAxisAlignment`].","sig":null,"attributes":[{"value":"/ Builder-style method for specifying the childrens' [`MainAxisAlignment`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":313009,"byte_end":313086,"line_start":353,"line_end":353,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":313091,"byte_end":313094,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ [`MainAxisAlignment`]: enum.MainAxisAlignment.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":313099,"byte_end":313153,"line_start":355,"line_end":355,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":313965,"byte_end":313984,"line_start":375,"line_end":375,"column_start":12,"column_end":31},"name":"must_fill_main_axis","qualname":"<Flex<T>>::must_fill_main_axis","value":"pub fn must_fill_main_axis(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for setting whether the container must expand\n to fill the available space on its main axis.","sig":null,"attributes":[{"value":"/ Builder-style method for setting whether the container must expand","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":313300,"byte_end":313370,"line_start":361,"line_end":361,"column_start":5,"column_end":75}},{"value":"/ to fill the available space on its main axis.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":313375,"byte_end":313424,"line_start":362,"line_end":362,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":313429,"byte_end":313432,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ If any children have flex then this container will expand to fill all","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":313437,"byte_end":313510,"line_start":364,"line_end":364,"column_start":5,"column_end":78}},{"value":"/ available space on its main axis; But if no children are flex,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":313515,"byte_end":313581,"line_start":365,"line_end":365,"column_start":5,"column_end":71}},{"value":"/ this flag determines whether or not the container should shrink to fit,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":313586,"byte_end":313661,"line_start":366,"line_end":366,"column_start":5,"column_end":80}},{"value":"/ or must expand to fill.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":313666,"byte_end":313693,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":313698,"byte_end":313701,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ If it expands, and there is extra space left over, that space is","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":313706,"byte_end":313774,"line_start":369,"line_end":369,"column_start":5,"column_end":73}},{"value":"/ distributed in accordance with the [`MainAxisAlignment`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":313779,"byte_end":313840,"line_start":370,"line_end":370,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":313845,"byte_end":313848,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The default value is `false`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":313853,"byte_end":313886,"line_start":372,"line_end":372,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":313891,"byte_end":313894,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ [`MainAxisAlignment`]: enum.MainAxisAlignment.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":313899,"byte_end":313953,"line_start":374,"line_end":374,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":314216,"byte_end":314226,"line_start":383,"line_end":383,"column_start":12,"column_end":22},"name":"with_child","qualname":"<Flex<T>>::with_child","value":"pub fn with_child<impl Widget<T> + 'static: Widget<T> +\n                  'static>(Self, impl Widget<T> + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style variant of `add_child`.","sig":null,"attributes":[{"value":"/ Builder-style variant of `add_child`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":314078,"byte_end":314119,"line_start":380,"line_end":380,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":314124,"byte_end":314127,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ Convenient for assembling a group of widgets in a single expression.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":314132,"byte_end":314204,"line_start":382,"line_end":382,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":315455,"byte_end":315470,"line_start":414,"line_end":414,"column_start":12,"column_end":27},"name":"with_flex_child","qualname":"<Flex<T>>::with_flex_child","value":"pub fn with_flex_child<impl Widget<T> + 'static: Widget<T> + 'static,\n                       impl Into<FlexParams>: Into<FlexParams>>(Self,\n                                                                impl Widget<T> + 'static,\n                                                                impl Into<FlexParams>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to add a flexible child to the container.","sig":null,"attributes":[{"value":"/ Builder-style method to add a flexible child to the container.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":314345,"byte_end":314411,"line_start":388,"line_end":388,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":314416,"byte_end":314419,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ This method is used when you need more control over the behaviour","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":314424,"byte_end":314493,"line_start":390,"line_end":390,"column_start":5,"column_end":74}},{"value":"/ of the widget you are adding. In the general case, this likely","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":314498,"byte_end":314564,"line_start":391,"line_end":391,"column_start":5,"column_end":71}},{"value":"/ means giving that child a 'flex factor', but it could also mean","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":314569,"byte_end":314636,"line_start":392,"line_end":392,"column_start":5,"column_end":72}},{"value":"/ giving the child a custom [`CrossAxisAlignment`], or a combination","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":314641,"byte_end":314711,"line_start":393,"line_end":393,"column_start":5,"column_end":75}},{"value":"/ of the two.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":314716,"byte_end":314731,"line_start":394,"line_end":394,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":314736,"byte_end":314739,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ This function takes a child widget and [`FlexParams`]; importantly","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":314744,"byte_end":314814,"line_start":396,"line_end":396,"column_start":5,"column_end":75}},{"value":"/ you can pass in a float as your [`FlexParams`] in most cases.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":314819,"byte_end":314884,"line_start":397,"line_end":397,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":314889,"byte_end":314892,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ For the non-builder varient, see [`add_flex_child`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":314897,"byte_end":314953,"line_start":399,"line_end":399,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":314958,"byte_end":314961,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":314966,"byte_end":314980,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":314985,"byte_end":314988,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":314993,"byte_end":315000,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ use druid::widget::{Flex, FlexParams, Label, Slider, CrossAxisAlignment};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":315005,"byte_end":315082,"line_start":404,"line_end":404,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":315087,"byte_end":315090,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let my_row = Flex::row()","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":315095,"byte_end":315123,"line_start":406,"line_end":406,"column_start":5,"column_end":33}},{"value":"/     .with_flex_child(Slider::new(), 1.0)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":315128,"byte_end":315172,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/     .with_flex_child(Slider::new(), FlexParams::new(1.0, CrossAxisAlignment::End));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":315177,"byte_end":315264,"line_start":408,"line_end":408,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":315269,"byte_end":315276,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":315281,"byte_end":315284,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ [`FlexParams`]: struct.FlexParams.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":315289,"byte_end":315331,"line_start":411,"line_end":411,"column_start":5,"column_end":47}},{"value":"/ [`add_flex_child`]: #method.add_flex_child","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":315336,"byte_end":315382,"line_start":412,"line_end":412,"column_start":5,"column_end":51}},{"value":"/ [`CrossAxisAlignment`]: enum.CrossAxisAlignment.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":315387,"byte_end":315443,"line_start":413,"line_end":413,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":315739,"byte_end":315750,"line_start":424,"line_end":424,"column_start":12,"column_end":23},"name":"with_spacer","qualname":"<Flex<T>>::with_spacer","value":"pub fn with_spacer<impl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(Self,\n                                                                      impl Into<KeyOrValue<f64>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for adding a fixed-size spacer to the container.\n","sig":null,"attributes":[{"value":"/ Builder-style method for adding a fixed-size spacer to the container.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":315654,"byte_end":315727,"line_start":423,"line_end":423,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":315939,"byte_end":315955,"line_start":430,"line_end":430,"column_start":12,"column_end":28},"name":"with_flex_spacer","qualname":"<Flex<T>>::with_flex_spacer","value":"pub fn with_flex_spacer(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for adding a `flex` spacer to the container.\n","sig":null,"attributes":[{"value":"/ Builder-style method for adding a `flex` spacer to the container.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":315858,"byte_end":315927,"line_start":429,"line_end":429,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":316174,"byte_end":316198,"line_start":438,"line_end":438,"column_start":12,"column_end":36},"name":"set_cross_axis_alignment","qualname":"<Flex<T>>::set_cross_axis_alignment","value":"pub fn set_cross_axis_alignment(&mut Self, CrossAxisAlignment)","parent":null,"children":[],"decl_id":null,"docs":" Set the childrens' [`CrossAxisAlignment`].","sig":null,"attributes":[{"value":"/ Set the childrens' [`CrossAxisAlignment`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":316047,"byte_end":316093,"line_start":435,"line_end":435,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":316098,"byte_end":316101,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [`CrossAxisAlignment`]: enum.CrossAxisAlignment.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":316106,"byte_end":316162,"line_start":437,"line_end":437,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":316420,"byte_end":316443,"line_start":445,"line_end":445,"column_start":12,"column_end":35},"name":"set_main_axis_alignment","qualname":"<Flex<T>>::set_main_axis_alignment","value":"pub fn set_main_axis_alignment(&mut Self, MainAxisAlignment)","parent":null,"children":[],"decl_id":null,"docs":" Set the childrens' [`MainAxisAlignment`].","sig":null,"attributes":[{"value":"/ Set the childrens' [`MainAxisAlignment`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":316296,"byte_end":316341,"line_start":442,"line_end":442,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":316346,"byte_end":316349,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ [`MainAxisAlignment`]: enum.MainAxisAlignment.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":316354,"byte_end":316408,"line_start":444,"line_end":444,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":316646,"byte_end":316669,"line_start":451,"line_end":451,"column_start":12,"column_end":35},"name":"set_must_fill_main_axis","qualname":"<Flex<T>>::set_must_fill_main_axis","value":"pub fn set_must_fill_main_axis(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set whether the container must expand to fill the available space on\n its main axis.\n","sig":null,"attributes":[{"value":"/ Set whether the container must expand to fill the available space on","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":316539,"byte_end":316611,"line_start":449,"line_end":449,"column_start":5,"column_end":77}},{"value":"/ its main axis.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":316616,"byte_end":316634,"line_start":450,"line_end":450,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":316879,"byte_end":316888,"line_start":460,"line_end":460,"column_start":12,"column_end":21},"name":"add_child","qualname":"<Flex<T>>::add_child","value":"pub fn add_child<impl Widget<T> + 'static: Widget<T> +\n                 'static>(&mut Self, impl Widget<T> + 'static)","parent":null,"children":[],"decl_id":null,"docs":" Add a non-flex child widget.","sig":null,"attributes":[{"value":"/ Add a non-flex child widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":316743,"byte_end":316775,"line_start":455,"line_end":455,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":316780,"byte_end":316783,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ See also [`with_child`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":316788,"byte_end":316816,"line_start":457,"line_end":457,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":316821,"byte_end":316824,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ [`with_child`]: #method.with_child","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":316829,"byte_end":316867,"line_start":459,"line_end":459,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":318015,"byte_end":318029,"line_start":489,"line_end":489,"column_start":12,"column_end":26},"name":"add_flex_child","qualname":"<Flex<T>>::add_flex_child","value":"pub fn add_flex_child<impl Widget<T> + 'static: Widget<T> + 'static,\n                      impl Into<FlexParams>: Into<FlexParams>>(&mut Self,\n                                                               impl Widget<T> + 'static,\n                                                               impl Into<FlexParams>)","parent":null,"children":[],"decl_id":null,"docs":" Add a flexible child widget.","sig":null,"attributes":[{"value":"/ Add a flexible child widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":316987,"byte_end":317019,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317024,"byte_end":317027,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ This method is used when you need more control over the behaviour","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317032,"byte_end":317101,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ of the widget you are adding. In the general case, this likely","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317106,"byte_end":317172,"line_start":467,"line_end":467,"column_start":5,"column_end":71}},{"value":"/ means giving that child a 'flex factor', but it could also mean","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317177,"byte_end":317244,"line_start":468,"line_end":468,"column_start":5,"column_end":72}},{"value":"/ giving the child a custom [`CrossAxisAlignment`], or a combination","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317249,"byte_end":317319,"line_start":469,"line_end":469,"column_start":5,"column_end":75}},{"value":"/ of the two.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317324,"byte_end":317339,"line_start":470,"line_end":470,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317344,"byte_end":317347,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This function takes a child widget and [`FlexParams`]; importantly","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317352,"byte_end":317422,"line_start":472,"line_end":472,"column_start":5,"column_end":75}},{"value":"/ you can pass in a float as your [`FlexParams`] in most cases.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317427,"byte_end":317492,"line_start":473,"line_end":473,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317497,"byte_end":317500,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ For the builder-style varient, see [`with_flex_child`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317505,"byte_end":317564,"line_start":475,"line_end":475,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317569,"byte_end":317572,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317577,"byte_end":317591,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317596,"byte_end":317599,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317604,"byte_end":317611,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use druid::widget::{Flex, FlexParams, Label, Slider, CrossAxisAlignment};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317616,"byte_end":317693,"line_start":480,"line_end":480,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317698,"byte_end":317701,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let mut my_row = Flex::row();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317706,"byte_end":317739,"line_start":482,"line_end":482,"column_start":5,"column_end":38}},{"value":"/ my_row.add_flex_child(Slider::new(), 1.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317744,"byte_end":317790,"line_start":483,"line_end":483,"column_start":5,"column_end":51}},{"value":"/ my_row.add_flex_child(Slider::new(), FlexParams::new(1.0, CrossAxisAlignment::End));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317795,"byte_end":317883,"line_start":484,"line_end":484,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317888,"byte_end":317895,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317900,"byte_end":317903,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ [`FlexParams`]: struct.FlexParams.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317908,"byte_end":317950,"line_start":487,"line_end":487,"column_start":5,"column_end":47}},{"value":"/ [`with_flex_child`]: #method.with_flex_child","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":317955,"byte_end":318003,"line_start":488,"line_end":488,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":318309,"byte_end":318319,"line_start":499,"line_end":499,"column_start":12,"column_end":22},"name":"add_spacer","qualname":"<Flex<T>>::add_spacer","value":"pub fn add_spacer<impl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(&mut Self,\n                                                                     impl Into<KeyOrValue<f64>>)","parent":null,"children":[],"decl_id":null,"docs":" Add an empty spacer widget with the given length.\n","sig":null,"attributes":[{"value":"/ Add an empty spacer widget with the given length.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":318244,"byte_end":318297,"line_start":498,"line_end":498,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":318596,"byte_end":318611,"line_start":508,"line_end":508,"column_start":12,"column_end":27},"name":"add_flex_spacer","qualname":"<Flex<T>>::add_flex_spacer","value":"pub fn add_flex_spacer(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":" Add an empty spacer widget with a specific `flex` factor.\n","sig":null,"attributes":[{"value":"/ Add an empty spacer widget with a specific `flex` factor.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":318523,"byte_end":318584,"line_start":507,"line_end":507,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1802},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\identity_wrapper.rs","byte_start":333250,"byte_end":333265,"line_start":24,"line_end":24,"column_start":12,"column_end":27},"name":"IdentityWrapper","qualname":"::widget::identity_wrapper::IdentityWrapper","value":"IdentityWrapper {  }","parent":null,"children":[{"krate":0,"index":1804},{"krate":0,"index":1805}],"decl_id":null,"docs":" A wrapper that adds an identity to an otherwise anonymous widget.\n","sig":null,"attributes":[{"value":"/ A wrapper that adds an identity to an otherwise anonymous widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\identity_wrapper.rs","byte_start":333169,"byte_end":333238,"line_start":23,"line_end":23,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\identity_wrapper.rs","byte_start":333386,"byte_end":333390,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"wrap","qualname":"<IdentityWrapper<W>>::wrap","value":"pub fn wrap(W, WidgetId) -> IdentityWrapper<W>","parent":null,"children":[],"decl_id":null,"docs":" Assign an identity to a widget.\n","sig":null,"attributes":[{"value":"/ Assign an identity to a widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\identity_wrapper.rs","byte_start":333339,"byte_end":333374,"line_start":30,"line_end":30,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1821},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\invalidation.rs","byte_start":335095,"byte_end":335112,"line_start":20,"line_end":20,"column_start":12,"column_end":29},"name":"DebugInvalidation","qualname":"::widget::invalidation::DebugInvalidation","value":"DebugInvalidation {  }","parent":null,"children":[{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1826}],"decl_id":null,"docs":" A widget that draws semi-transparent rectangles of changing colors to help debug invalidation\n regions.\n","sig":null,"attributes":[{"value":"/ A widget that draws semi-transparent rectangles of changing colors to help debug invalidation","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\invalidation.rs","byte_start":334973,"byte_end":335070,"line_start":18,"line_end":18,"column_start":1,"column_end":98}},{"value":"/ regions.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\invalidation.rs","byte_start":335071,"byte_end":335083,"line_start":19,"line_end":19,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1830},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\invalidation.rs","byte_start":335315,"byte_end":335318,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugInvalidation<T, W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps a widget in a `DebugInvalidation`.\n","sig":null,"attributes":[{"value":"/ Wraps a widget in a `DebugInvalidation`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\invalidation.rs","byte_start":335259,"byte_end":335303,"line_start":27,"line_end":27,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1873},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338199,"byte_end":338208,"line_start":42,"line_end":42,"column_start":5,"column_end":14},"name":"Localized","qualname":"::widget::label::LabelText::Localized","value":"LabelText::Localized(LocalizedString<T>)","parent":{"krate":0,"index":1871},"children":[],"decl_id":null,"docs":" Localized string that will be resolved through `Env`.\n","sig":null,"attributes":[{"value":"/ Localized string that will be resolved through `Env`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338137,"byte_end":338194,"line_start":41,"line_end":41,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1876},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338256,"byte_end":338264,"line_start":44,"line_end":44,"column_start":5,"column_end":13},"name":"Specific","qualname":"::widget::label::LabelText::Specific","value":"LabelText::Specific(String)","parent":{"krate":0,"index":1871},"children":[],"decl_id":null,"docs":" Specific text\n","sig":null,"attributes":[{"value":"/ Specific text","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338234,"byte_end":338251,"line_start":43,"line_end":43,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1879},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338392,"byte_end":338399,"line_start":47,"line_end":47,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::widget::label::LabelText::Dynamic","value":"LabelText::Dynamic(Dynamic<T>)","parent":{"krate":0,"index":1871},"children":[],"decl_id":null,"docs":" The provided closure is called on update, and its return\n value is used as the text for the label.\n","sig":null,"attributes":[{"value":"/ The provided closure is called on update, and its return","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338278,"byte_end":338338,"line_start":45,"line_end":45,"column_start":5,"column_end":65}},{"value":"/ value is used as the text for the label.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338343,"byte_end":338387,"line_start":46,"line_end":46,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":1871},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338118,"byte_end":338127,"line_start":40,"line_end":40,"column_start":10,"column_end":19},"name":"LabelText","qualname":"::widget::label::LabelText","value":"pub enum LabelText<T> {\n\n    /// Localized string that will be resolved through `Env`.\n    Localized(LocalizedString<T>),\n\n    /// Specific text\n    Specific(String),\n\n    /// The provided closure is called on update, and its return\n    /// value is used as the text for the label.\n    Dynamic(Dynamic<T>),\n}","parent":null,"children":[{"krate":0,"index":1873},{"krate":0,"index":1876},{"krate":0,"index":1879}],"decl_id":null,"docs":" The text for the label.","sig":null,"attributes":[{"value":"/ The text for the label.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":337820,"byte_end":337847,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":337848,"byte_end":337851,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This can be one of three things; either a `String`, a [`LocalizedString`],","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":337852,"byte_end":337930,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ or a closure with the signature, `Fn(&T, &Env) -> String`, where `T` is","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":337931,"byte_end":338006,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ the `Data` at this point in the tree.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338007,"byte_end":338048,"line_start":37,"line_end":37,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338049,"byte_end":338052,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`LocalizedString`]: ../struct.LocalizedString.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338053,"byte_end":338108,"line_start":39,"line_end":39,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1882},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338481,"byte_end":338488,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"Dynamic","qualname":"::widget::label::Dynamic","value":"Dynamic {  }","parent":null,"children":[{"krate":0,"index":1884},{"krate":0,"index":1885}],"decl_id":null,"docs":" Text that is computed dynamically.\n","sig":null,"attributes":[{"value":"/ Text that is computed dynamically.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338416,"byte_end":338454,"line_start":50,"line_end":50,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1886},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338607,"byte_end":338612,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"Label","qualname":"::widget::label::Label","value":"Label {  }","parent":null,"children":[{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1891}],"decl_id":null,"docs":" A label that displays some text.\n","sig":null,"attributes":[{"value":"/ A label that displays some text.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338559,"byte_end":338595,"line_start":57,"line_end":57,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":339442,"byte_end":339445,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<Label<T>>::new","value":"pub fn new<impl Into<LabelText<T>>: Into<LabelText<T>>>(impl Into<LabelText<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Label` widget.","sig":null,"attributes":[{"value":"/ Construct a new `Label` widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338767,"byte_end":338802,"line_start":66,"line_end":66,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338807,"byte_end":338810,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338815,"byte_end":338822,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use druid::LocalizedString;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338827,"byte_end":338858,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/ use druid::widget::Label;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338863,"byte_end":338892,"line_start":70,"line_end":70,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338897,"byte_end":338900,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ // Construct a new Label using static string.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338905,"byte_end":338954,"line_start":72,"line_end":72,"column_start":5,"column_end":54}},{"value":"/ let _: Label<u32> = Label::new(\"Hello world\");","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338959,"byte_end":339009,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":339014,"byte_end":339017,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ // Construct a new Label using localized string.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":339022,"byte_end":339074,"line_start":75,"line_end":75,"column_start":5,"column_end":57}},{"value":"/ let text = LocalizedString::new(\"hello-counter\").with_arg(\"count\", |data: &u32, _env| (*data).into());","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":339079,"byte_end":339185,"line_start":76,"line_end":76,"column_start":5,"column_end":111}},{"value":"/ let _: Label<u32> = Label::new(text);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":339190,"byte_end":339231,"line_start":77,"line_end":77,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":339236,"byte_end":339239,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ // Construct a new dynamic Label. Text will be updated when data changes.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":339244,"byte_end":339321,"line_start":79,"line_end":79,"column_start":5,"column_end":82}},{"value":"/ let _: Label<u32> = Label::new(|data: &u32, _env: &_| format!(\"Hello world: {}\", data));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":339326,"byte_end":339418,"line_start":80,"line_end":80,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":339423,"byte_end":339430,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1896},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340483,"byte_end":340490,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"dynamic","qualname":"<Label<T>>::dynamic","value":"pub fn dynamic<impl Fn(&T, &Env) -> String + 'static: Fn(&T, &Env) -> String +\n               'static>(impl Fn(&T, &Env) -> String + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new dynamic label.","sig":null,"attributes":[{"value":"/ Construct a new dynamic label.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":339712,"byte_end":339746,"line_start":92,"line_end":92,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":339751,"byte_end":339754,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ The contents of this label are generated from the data using a closure.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":339759,"byte_end":339834,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":339839,"byte_end":339842,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This is provided as a convenience; a closure can also be passed to [`new`],","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":339847,"byte_end":339926,"line_start":96,"line_end":96,"column_start":5,"column_end":84}},{"value":"/ but due to limitations of the implementation of that method, the types in","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":339931,"byte_end":340008,"line_start":97,"line_end":97,"column_start":5,"column_end":82}},{"value":"/ the closure need to be annotated, which is not true for this method.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340013,"byte_end":340085,"line_start":98,"line_end":98,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340090,"byte_end":340093,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340098,"byte_end":340112,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340117,"byte_end":340120,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The following are equivalent.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340125,"byte_end":340158,"line_start":102,"line_end":102,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340163,"byte_end":340166,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340171,"byte_end":340178,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ use druid::Env;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340183,"byte_end":340202,"line_start":105,"line_end":105,"column_start":5,"column_end":24}},{"value":"/ use druid::widget::Label;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340207,"byte_end":340236,"line_start":106,"line_end":106,"column_start":5,"column_end":34}},{"value":"/ let label1: Label<u32> = Label::new(|data: &u32, _: &Env| format!(\"total is {}\", data));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340241,"byte_end":340333,"line_start":107,"line_end":107,"column_start":5,"column_end":97}},{"value":"/ let label2: Label<u32> = Label::dynamic(|data, _| format!(\"total is {}\", data));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340338,"byte_end":340422,"line_start":108,"line_end":108,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340427,"byte_end":340434,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340439,"byte_end":340442,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ [`new`]: #method.new","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340447,"byte_end":340471,"line_start":111,"line_end":111,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1898},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340736,"byte_end":340746,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"text_align","qualname":"<Label<T>>::text_align","value":"pub fn text_align(Self, UnitPoint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set text alignment.\n","sig":null,"attributes":[{"value":"/ Set text alignment.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340628,"byte_end":340651,"line_start":117,"line_end":117,"column_start":5,"column_end":28}},{"value":"deprecated(since = \"0.5.0\", note = \"Use an Align widget instead\")","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340656,"byte_end":340724,"line_start":118,"line_end":118,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340995,"byte_end":341010,"line_start":128,"line_end":128,"column_start":12,"column_end":27},"name":"with_text_color","qualname":"<Label<T>>::with_text_color","value":"pub fn with_text_color<impl Into<KeyOrValue<Color>>: Into<KeyOrValue<Color>>>(Self,\n                                                                              impl Into<KeyOrValue<Color>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for setting the text color.","sig":null,"attributes":[{"value":"/ Builder-style method for setting the text color.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340806,"byte_end":340858,"line_start":123,"line_end":123,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340863,"byte_end":340866,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ The argument can be either a `Color` or a [`Key<Color>`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340871,"byte_end":340932,"line_start":125,"line_end":125,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340937,"byte_end":340940,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ [`Key<Color>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":340945,"byte_end":340983,"line_start":127,"line_end":127,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1901},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341310,"byte_end":341324,"line_start":138,"line_end":138,"column_start":12,"column_end":26},"name":"with_text_size","qualname":"<Label<T>>::with_text_size","value":"pub fn with_text_size<impl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(Self,\n                                                                         impl Into<KeyOrValue<f64>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for setting the text size.","sig":null,"attributes":[{"value":"/ Builder-style method for setting the text size.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341127,"byte_end":341178,"line_start":133,"line_end":133,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341183,"byte_end":341186,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ The argument can be either an `f64` or a [`Key<f64>`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341191,"byte_end":341249,"line_start":135,"line_end":135,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341254,"byte_end":341257,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ [`Key<f64>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341262,"byte_end":341298,"line_start":137,"line_end":137,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1903},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341618,"byte_end":341627,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"with_font","qualname":"<Label<T>>::with_font","value":"pub fn with_font<impl Into<KeyOrValue<&'static str>>: Into<KeyOrValue<&'static str>>>(Self,\n                                                                                      impl Into<KeyOrValue<&'static str>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for setting the font.","sig":null,"attributes":[{"value":"/ Builder-style method for setting the font.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341436,"byte_end":341482,"line_start":143,"line_end":143,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341487,"byte_end":341490,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The argument can be a `&str`, `String`, or [`Key<&str>`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341495,"byte_end":341556,"line_start":145,"line_end":145,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341561,"byte_end":341564,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ [`Key<&str>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341569,"byte_end":341606,"line_start":147,"line_end":147,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1905},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342035,"byte_end":342043,"line_start":162,"line_end":162,"column_start":12,"column_end":20},"name":"set_text","qualname":"<Label<T>>::set_text","value":"pub fn set_text<impl Into<String>: Into<String>>(&mut Self, impl Into<String>)","parent":null,"children":[],"decl_id":null,"docs":" Set a new text.","sig":null,"attributes":[{"value":"/ Set a new text.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341748,"byte_end":341767,"line_start":153,"line_end":153,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341772,"byte_end":341775,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Takes an already resolved string as input.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341780,"byte_end":341826,"line_start":155,"line_end":155,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341831,"byte_end":341834,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ If you're looking for full [`LabelText`] support,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341839,"byte_end":341892,"line_start":157,"line_end":157,"column_start":5,"column_end":58}},{"value":"/ then you need to create a new [`Label`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341897,"byte_end":341941,"line_start":158,"line_end":158,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341946,"byte_end":341949,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ [`Label`]: #method.new","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341954,"byte_end":341980,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/ [`LabelText`]: enum.LabelText.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":341985,"byte_end":342023,"line_start":161,"line_end":161,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342197,"byte_end":342201,"line_start":167,"line_end":167,"column_start":12,"column_end":16},"name":"text","qualname":"<Label<T>>::text","value":"pub fn text(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns this label's current text.\n","sig":null,"attributes":[{"value":"/ Returns this label's current text.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342147,"byte_end":342185,"line_start":166,"line_end":166,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342423,"byte_end":342437,"line_start":176,"line_end":176,"column_start":12,"column_end":26},"name":"set_text_color","qualname":"<Label<T>>::set_text_color","value":"pub fn set_text_color<impl Into<KeyOrValue<Color>>: Into<KeyOrValue<Color>>>(&mut Self,\n                                                                             impl Into<KeyOrValue<Color>>)","parent":null,"children":[],"decl_id":null,"docs":" Set the text color.","sig":null,"attributes":[{"value":"/ Set the text color.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342263,"byte_end":342286,"line_start":171,"line_end":171,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342291,"byte_end":342294,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The argument can be either a `Color` or a [`Key<Color>`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342299,"byte_end":342360,"line_start":173,"line_end":173,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342365,"byte_end":342368,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Key<Color>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342373,"byte_end":342411,"line_start":175,"line_end":175,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342688,"byte_end":342701,"line_start":185,"line_end":185,"column_start":12,"column_end":25},"name":"set_text_size","qualname":"<Label<T>>::set_text_size","value":"pub fn set_text_size<impl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(&mut Self,\n                                                                        impl Into<KeyOrValue<f64>>)","parent":null,"children":[],"decl_id":null,"docs":" Set the text size.","sig":null,"attributes":[{"value":"/ Set the text size.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342534,"byte_end":342556,"line_start":180,"line_end":180,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342561,"byte_end":342564,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ The argument can be either an `f64` or a [`Key<f64>`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342569,"byte_end":342627,"line_start":182,"line_end":182,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342632,"byte_end":342635,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ [`Key<f64>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342640,"byte_end":342676,"line_start":184,"line_end":184,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342946,"byte_end":342954,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"set_font","qualname":"<Label<T>>::set_font","value":"pub fn set_font<impl Into<KeyOrValue<&'static str>>: Into<KeyOrValue<&'static str>>>(&mut Self,\n                                                                                     impl Into<KeyOrValue<&'static str>>)","parent":null,"children":[],"decl_id":null,"docs":" Set the font.","sig":null,"attributes":[{"value":"/ Set the font.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342793,"byte_end":342810,"line_start":189,"line_end":189,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342815,"byte_end":342818,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The argument can be a `&str`, `String`, or [`Key<&str>`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342823,"byte_end":342884,"line_start":191,"line_end":191,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342889,"byte_end":342892,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ [`Key<&str>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":342897,"byte_end":342934,"line_start":193,"line_end":193,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1921},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":343860,"byte_end":343877,"line_start":223,"line_end":223,"column_start":12,"column_end":29},"name":"with_display_text","qualname":"<LabelText<T>>::with_display_text","value":"pub fn with_display_text<V, impl FnMut(&str) -> V: FnMut(&str) ->\n                         V>(&Self, impl FnMut(&str) -> V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Call callback with the text that should be displayed.\n","sig":null,"attributes":[{"value":"/ Call callback with the text that should be displayed.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":343791,"byte_end":343848,"line_start":222,"line_end":222,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":344195,"byte_end":344207,"line_start":232,"line_end":232,"column_start":12,"column_end":24},"name":"display_text","qualname":"<LabelText<T>>::display_text","value":"pub fn display_text(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Return the current resolved text.\n","sig":null,"attributes":[{"value":"/ Return the current resolved text.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":344146,"byte_end":344183,"line_start":231,"line_end":231,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1925},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":344605,"byte_end":344612,"line_start":244,"line_end":244,"column_start":12,"column_end":19},"name":"resolve","qualname":"<LabelText<T>>::resolve","value":"pub fn resolve(&mut Self, &T, &Env) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Update the localization, if necessary.\n This ensures that localized strings are up to date.","sig":null,"attributes":[{"value":"/ Update the localization, if necessary.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":344433,"byte_end":344475,"line_start":240,"line_end":240,"column_start":5,"column_end":47}},{"value":"/ This ensures that localized strings are up to date.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":344480,"byte_end":344535,"line_start":241,"line_end":241,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":344540,"byte_end":344543,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if the string has changed.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":344548,"byte_end":344593,"line_start":243,"line_end":243,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1966},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\list.rs","byte_start":347903,"byte_end":347907,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"List","qualname":"::widget::list::List","value":"List {  }","parent":null,"children":[{"krate":0,"index":1968},{"krate":0,"index":1969}],"decl_id":null,"docs":" A list widget for a variable-size collection of items.\n","sig":null,"attributes":[{"value":"/ A list widget for a variable-size collection of items.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\list.rs","byte_start":347833,"byte_end":347891,"line_start":30,"line_end":30,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1972},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\list.rs","byte_start":348172,"byte_end":348175,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<List<T>>::new","value":"pub fn new<W: Widget<T> + 'static, impl Fn() -> W + 'static: Fn() -> W +\n           'static>(impl Fn() -> W + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new list widget. Closure will be called every time when a new child\n needs to be constructed.\n","sig":null,"attributes":[{"value":"/ Create a new list widget. Closure will be called every time when a new child","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\list.rs","byte_start":348047,"byte_end":348127,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ needs to be constructed.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\list.rs","byte_start":348132,"byte_end":348160,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":1979},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\list.rs","byte_start":349155,"byte_end":349163,"line_start":66,"line_end":66,"column_start":11,"column_end":19},"name":"ListIter","qualname":"::widget::list::ListIter","value":"ListIter<T>: Data","parent":null,"children":[{"krate":0,"index":1981},{"krate":0,"index":1983},{"krate":0,"index":1985}],"decl_id":null,"docs":" This iterator enables writing List widget for any `Data`.\n","sig":null,"attributes":[{"value":"/ This iterator enables writing List widget for any `Data`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\list.rs","byte_start":349083,"byte_end":349144,"line_start":65,"line_end":65,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1981},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\list.rs","byte_start":349220,"byte_end":349228,"line_start":68,"line_end":68,"column_start":8,"column_end":16},"name":"for_each","qualname":"::widget::list::ListIter::for_each","value":"pub fn for_each<impl FnMut(&T, usize): FnMut(&T, usize) ->\n                ()>(&Self, impl FnMut(&T, usize))","parent":{"krate":0,"index":1979},"children":[],"decl_id":null,"docs":" Iterate over each data child.\n","sig":null,"attributes":[{"value":"/ Iterate over each data child.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\list.rs","byte_start":349179,"byte_end":349212,"line_start":67,"line_end":67,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1983},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\list.rs","byte_start":349354,"byte_end":349366,"line_start":71,"line_end":71,"column_start":8,"column_end":20},"name":"for_each_mut","qualname":"::widget::list::ListIter::for_each_mut","value":"pub fn for_each_mut<impl FnMut(&mut T, usize): FnMut(&mut T, usize) ->\n                    ()>(&mut Self, impl FnMut(&mut T, usize))","parent":{"krate":0,"index":1979},"children":[],"decl_id":null,"docs":" Iterate over each data child. Keep track of changed data and update self.\n","sig":null,"attributes":[{"value":"/ Iterate over each data child. Keep track of changed data and update self.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\list.rs","byte_start":349269,"byte_end":349346,"line_start":70,"line_end":70,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1985},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\list.rs","byte_start":349446,"byte_end":349454,"line_start":74,"line_end":74,"column_start":8,"column_end":16},"name":"data_len","qualname":"::widget::list::ListIter::data_len","value":"pub fn data_len(&Self) -> usize","parent":{"krate":0,"index":1979},"children":[],"decl_id":null,"docs":" Return data length.\n","sig":null,"attributes":[{"value":"/ Return data length.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\list.rs","byte_start":349415,"byte_end":349438,"line_start":73,"line_end":73,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2033},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":356540,"byte_end":356547,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"Padding","qualname":"::widget::padding::Padding","value":"Padding {  }","parent":null,"children":[{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039}],"decl_id":null,"docs":" A widget that just adds padding around its child.\n","sig":null,"attributes":[{"value":"/ A widget that just adds padding around its child.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":356475,"byte_end":356528,"line_start":23,"line_end":23,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357805,"byte_end":357808,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<Padding<T>>::new","value":"pub fn new<impl Into<Insets>: Into<Insets>,\n           impl Widget<T> + 'static: Widget<T> +\n           'static>(impl Into<Insets>, impl Widget<T> + 'static) -> Padding<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new widget with the specified padding. This can either be an instance\n of [`kurbo::Insets`], a f64 for uniform padding, a 2-tuple for axis-uniform padding\n or 4-tuple with (left, top, right, bottom) values.","sig":null,"attributes":[{"value":"/ Create a new widget with the specified padding. This can either be an instance","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":356689,"byte_end":356771,"line_start":34,"line_end":34,"column_start":5,"column_end":87}},{"value":"/ of [`kurbo::Insets`], a f64 for uniform padding, a 2-tuple for axis-uniform padding","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":356776,"byte_end":356863,"line_start":35,"line_end":35,"column_start":5,"column_end":92}},{"value":"/ or 4-tuple with (left, top, right, bottom) values.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":356868,"byte_end":356922,"line_start":36,"line_end":36,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":356927,"byte_end":356930,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":356935,"byte_end":356949,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":356954,"byte_end":356957,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Uniform padding:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":356962,"byte_end":356982,"line_start":40,"line_end":40,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":356987,"byte_end":356990,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":356995,"byte_end":357002,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/ use druid::widget::{Label, Padding};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357007,"byte_end":357047,"line_start":43,"line_end":43,"column_start":5,"column_end":45}},{"value":"/ use druid::kurbo::Insets;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357052,"byte_end":357081,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357086,"byte_end":357089,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let _: Padding<()> = Padding::new(10.0, Label::new(\"uniform!\"));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357094,"byte_end":357162,"line_start":46,"line_end":46,"column_start":5,"column_end":73}},{"value":"/ let _: Padding<()> = Padding::new(Insets::uniform(10.0), Label::new(\"uniform!\"));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357167,"byte_end":357252,"line_start":47,"line_end":47,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357257,"byte_end":357264,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357269,"byte_end":357272,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Uniform padding across each axis:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357277,"byte_end":357314,"line_start":50,"line_end":50,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357319,"byte_end":357322,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357327,"byte_end":357334,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use druid::widget::{Label, Padding};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357339,"byte_end":357379,"line_start":53,"line_end":53,"column_start":5,"column_end":45}},{"value":"/ use druid::kurbo::Insets;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357384,"byte_end":357413,"line_start":54,"line_end":54,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357418,"byte_end":357421,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let child: Label<()> = Label::new(\"I need my space!\");","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357426,"byte_end":357484,"line_start":56,"line_end":56,"column_start":5,"column_end":63}},{"value":"/ let _: Padding<()> = Padding::new((10.0, 20.0), Label::new(\"more y than x!\"));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357489,"byte_end":357571,"line_start":57,"line_end":57,"column_start":5,"column_end":87}},{"value":"/ // equivalent:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357576,"byte_end":357594,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/ let _: Padding<()> = Padding::new(Insets::uniform_xy(10.0, 20.0), Label::new(\"ditto :)\"));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357599,"byte_end":357693,"line_start":59,"line_end":59,"column_start":5,"column_end":99}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357698,"byte_end":357705,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357710,"byte_end":357713,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ [`kurbo::Insets`]: https://docs.rs/kurbo/0.5.3/kurbo/struct.Insets.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":357718,"byte_end":357793,"line_start":62,"line_end":62,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362397,"byte_end":362404,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"Painter","qualname":"::widget::painter::Painter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A widget that only handles painting.","sig":null,"attributes":[{"value":"/ A widget that only handles painting.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":360259,"byte_end":360299,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":360300,"byte_end":360303,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This is useful in a situation where layout is controlled elsewhere and you","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":360304,"byte_end":360382,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ do not need to handle events, but you would like to customize appearance.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":360383,"byte_end":360460,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":360461,"byte_end":360464,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ **When is paint called?**","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":360465,"byte_end":360494,"line_start":26,"line_end":26,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":360495,"byte_end":360498,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The `Painter` widget will call its [`paint`]  method anytime its [`Data`]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":360499,"byte_end":360576,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ is changed. If you would like it to repaint at other times (such as when","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":360577,"byte_end":360653,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ hot or active state changes) you will need to call [`request_paint`] further","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":360654,"byte_end":360734,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ up the tree, perhaps in a [`Controller`] widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":360735,"byte_end":360787,"line_start":31,"line_end":31,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":360788,"byte_end":360791,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":360792,"byte_end":360806,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":360807,"byte_end":360810,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Changing background color based on some part of data:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":360811,"byte_end":360868,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":360869,"byte_end":360872,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":360873,"byte_end":360880,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ use druid::{Env, PaintCtx,Rect, RenderContext};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":360881,"byte_end":360932,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/ use druid::widget::Painter;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":360933,"byte_end":360964,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ # const ENABLED_BG_COLOR: druid::Key<druid::Color> = druid::Key::new(\"fake key\");","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":360965,"byte_end":361050,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/ # const DISABLED_BG_COLOR: druid::Key<druid::Color> = druid::Key::new(\"fake key 2\");","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361051,"byte_end":361139,"line_start":41,"line_end":41,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361140,"byte_end":361143,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ struct MyData { is_enabled: bool }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361144,"byte_end":361182,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361183,"byte_end":361186,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let my_painter = Painter::new(|ctx, data: &MyData, env| {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361187,"byte_end":361248,"line_start":45,"line_end":45,"column_start":1,"column_end":62}},{"value":"/     let bounds = ctx.size().to_rect();","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361249,"byte_end":361291,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/     if data.is_enabled {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361292,"byte_end":361320,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/         ctx.fill(bounds, &env.get(ENABLED_BG_COLOR));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361321,"byte_end":361378,"line_start":48,"line_end":48,"column_start":1,"column_end":58}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361379,"byte_end":361395,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361396,"byte_end":361399,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/         ctx.fill(bounds, &env.get(DISABLED_BG_COLOR));","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361400,"byte_end":361458,"line_start":51,"line_end":51,"column_start":1,"column_end":59}},{"value":"/     }","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361459,"byte_end":361468,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361469,"byte_end":361476,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361477,"byte_end":361484,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361485,"byte_end":361488,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Using painter to make a simple widget that will draw a selected color","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361489,"byte_end":361562,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361563,"byte_end":361566,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361567,"byte_end":361570,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361571,"byte_end":361578,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ use druid::{Color, Env, PaintCtx,Rect, RenderContext};","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361579,"byte_end":361637,"line_start":60,"line_end":60,"column_start":1,"column_end":59}},{"value":"/ use druid::widget::Painter;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361638,"byte_end":361669,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361670,"byte_end":361673,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ const CORNER_RADIUS: f64 = 4.0;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361674,"byte_end":361709,"line_start":63,"line_end":63,"column_start":1,"column_end":36}},{"value":"/ const STROKE_WIDTH: f64 = 2.0;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361710,"byte_end":361744,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361745,"byte_end":361748,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let colorwell: Painter<Color> = Painter::new(|ctx, data: &Color, env| {","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361749,"byte_end":361824,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/     // Shrink the bounds a little, to ensure that our stroke remains within","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361825,"byte_end":361904,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/     // the paint bounds.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361905,"byte_end":361933,"line_start":68,"line_end":68,"column_start":1,"column_end":29}},{"value":"/     let bounds = ctx.size().to_rect().inset(-STROKE_WIDTH / 2.0);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":361934,"byte_end":362003,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/     let rounded = bounds.to_rounded_rect(CORNER_RADIUS);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362004,"byte_end":362064,"line_start":70,"line_end":70,"column_start":1,"column_end":61}},{"value":"/     ctx.fill(rounded, data);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362065,"byte_end":362097,"line_start":71,"line_end":71,"column_start":1,"column_end":33}},{"value":"/     ctx.stroke(rounded, &env.get(druid::theme::PRIMARY_DARK), STROKE_WIDTH);","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362098,"byte_end":362178,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/ });","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362179,"byte_end":362186,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362187,"byte_end":362194,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362195,"byte_end":362198,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [`paint`]: ../trait.Widget.html#tymethod.paint","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362199,"byte_end":362249,"line_start":76,"line_end":76,"column_start":1,"column_end":51}},{"value":"/ [`Data`]: ../trait.Data.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362250,"byte_end":362282,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ [`request_paint`]: ../EventCtx.html#method.request_paint","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362283,"byte_end":362343,"line_start":78,"line_end":78,"column_start":1,"column_end":61}},{"value":"/ [`Controller`]: trait.Controller.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362344,"byte_end":362385,"line_start":79,"line_end":79,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2080},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362839,"byte_end":362844,"line_start":92,"line_end":92,"column_start":5,"column_end":10},"name":"Color","qualname":"::widget::painter::BackgroundBrush::Color","value":"BackgroundBrush::Color(Color)","parent":{"krate":0,"index":2078},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2083},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362857,"byte_end":362865,"line_start":93,"line_end":93,"column_start":5,"column_end":13},"name":"ColorKey","qualname":"::widget::painter::BackgroundBrush::ColorKey","value":"BackgroundBrush::ColorKey(Key<Color>)","parent":{"krate":0,"index":2078},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2086},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362883,"byte_end":362889,"line_start":94,"line_end":94,"column_start":5,"column_end":11},"name":"Linear","qualname":"::widget::painter::BackgroundBrush::Linear","value":"BackgroundBrush::Linear(LinearGradient)","parent":{"krate":0,"index":2078},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2089},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362911,"byte_end":362917,"line_start":95,"line_end":95,"column_start":5,"column_end":11},"name":"Radial","qualname":"::widget::painter::BackgroundBrush::Radial","value":"BackgroundBrush::Radial(RadialGradient)","parent":{"krate":0,"index":2078},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2092},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362939,"byte_end":362944,"line_start":96,"line_end":96,"column_start":5,"column_end":10},"name":"Fixed","qualname":"::widget::painter::BackgroundBrush::Fixed","value":"BackgroundBrush::Fixed(FixedGradient)","parent":{"krate":0,"index":2078},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2095},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362965,"byte_end":362972,"line_start":97,"line_end":97,"column_start":5,"column_end":12},"name":"Painter","qualname":"::widget::painter::BackgroundBrush::Painter","value":"BackgroundBrush::Painter(Painter<T>)","parent":{"krate":0,"index":2078},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2078},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362814,"byte_end":362829,"line_start":91,"line_end":91,"column_start":10,"column_end":25},"name":"BackgroundBrush","qualname":"::widget::painter::BackgroundBrush","value":"pub enum BackgroundBrush<T> {\n    Color(Color),\n    ColorKey(Key<Color>),\n    Linear(LinearGradient),\n    Radial(RadialGradient),\n    Fixed(FixedGradient),\n    Painter(Painter<T>),\n}","parent":null,"children":[{"krate":0,"index":2080},{"krate":0,"index":2083},{"krate":0,"index":2086},{"krate":0,"index":2089},{"krate":0,"index":2092},{"krate":0,"index":2095}],"decl_id":null,"docs":" Something that can be used as the background for a widget.","sig":null,"attributes":[{"value":"/ Something that can be used as the background for a widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362451,"byte_end":362513,"line_start":82,"line_end":82,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362514,"byte_end":362517,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ This represents anything that can be painted inside a widgets [`paint`]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362518,"byte_end":362593,"line_start":84,"line_end":84,"column_start":1,"column_end":76}},{"value":"/ method; that is, it may have access to the [`Data`] and the [`Env`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362594,"byte_end":362666,"line_start":85,"line_end":85,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362667,"byte_end":362670,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [`paint`]: ../trait.Widget.html#tymethod.paint","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362671,"byte_end":362721,"line_start":87,"line_end":87,"column_start":1,"column_end":51}},{"value":"/ [`Data`]: ../trait.Data.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362722,"byte_end":362754,"line_start":88,"line_end":88,"column_start":1,"column_end":33}},{"value":"/ [`Env`]: ../struct.Env.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362755,"byte_end":362786,"line_start":89,"line_end":89,"column_start":1,"column_end":32}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362787,"byte_end":362804,"line_start":90,"line_end":90,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":363147,"byte_end":363150,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"new","qualname":"<Painter<T>>::new","value":"pub fn new<impl FnMut(&mut PaintCtx, &T, &Env) + 'static: FnMut(&mut PaintCtx,\n                                                                &T, &Env) ->\n           () + 'static>(impl FnMut(&mut PaintCtx, &T, &Env) + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Painter` with the provided [`paint`] fn.","sig":null,"attributes":[{"value":"/ Create a new `Painter` with the provided [`paint`] fn.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":363014,"byte_end":363072,"line_start":101,"line_end":101,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":363077,"byte_end":363080,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`paint`]: ../trait.Widget.html#tymethod.paint","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":363085,"byte_end":363135,"line_start":103,"line_end":103,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":363415,"byte_end":363420,"line_start":113,"line_end":113,"column_start":12,"column_end":17},"name":"paint","qualname":"<BackgroundBrush<T>>::paint","value":"pub fn paint(&mut Self, &mut PaintCtx, &T, &Env)","parent":null,"children":[],"decl_id":null,"docs":" Draw this `BackgroundBrush` into a provided [`PaintCtx`].","sig":null,"attributes":[{"value":"/ Draw this `BackgroundBrush` into a provided [`PaintCtx`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":363288,"byte_end":363349,"line_start":110,"line_end":110,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":363354,"byte_end":363357,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ [`PaintCtx`]: ../struct.PaintCtx.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":363362,"byte_end":363403,"line_start":112,"line_end":112,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2151},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\parse.rs","byte_start":366164,"byte_end":366169,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"Parse","qualname":"::widget::parse::Parse","value":"Parse {  }","parent":null,"children":[{"krate":0,"index":2153},{"krate":0,"index":2154}],"decl_id":null,"docs":" Converts a `Widget<String>` to a `Widget<Option<T>>`, mapping parse errors to None\n","sig":null,"attributes":[{"value":"/ Converts a `Widget<String>` to a `Widget<Option<T>>`, mapping parse errors to None","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\parse.rs","byte_start":366066,"byte_end":366152,"line_start":11,"line_end":11,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2157},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\parse.rs","byte_start":366242,"byte_end":366245,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<Parse<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4103},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\progress_bar.rs","byte_start":368814,"byte_end":368825,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"ProgressBar","qualname":"::widget::progress_bar::ProgressBar","value":"","parent":null,"children":[],"decl_id":null,"docs":" A progress bar, displaying a numeric progress value.","sig":null,"attributes":[{"value":"/ A progress bar, displaying a numeric progress value.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\progress_bar.rs","byte_start":368631,"byte_end":368687,"line_start":24,"line_end":24,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\progress_bar.rs","byte_start":368688,"byte_end":368691,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This type impls `Widget<f64>`, expecting a float in the range `0.0..1.0`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\progress_bar.rs","byte_start":368692,"byte_end":368769,"line_start":26,"line_end":26,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\progress_bar.rs","byte_start":368894,"byte_end":368897,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<ProgressBar>::new","value":"pub fn new() -> ProgressBar","parent":null,"children":[],"decl_id":null,"docs":" Return a new `ProgressBar`.\n","sig":null,"attributes":[{"value":"/ Return a new `ProgressBar`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\progress_bar.rs","byte_start":368851,"byte_end":368882,"line_start":31,"line_end":31,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4111},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\radio.rs","byte_start":372313,"byte_end":372323,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"RadioGroup","qualname":"::widget::radio::RadioGroup","value":"","parent":null,"children":[],"decl_id":null,"docs":" A group of radio buttons\n","sig":null,"attributes":[{"value":"/ A group of radio buttons","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\radio.rs","byte_start":372249,"byte_end":372277,"line_start":25,"line_end":25,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2226},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\radio.rs","byte_start":372450,"byte_end":372453,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<RadioGroup>::new","value":"pub fn new<T: Data + PartialEq,\n           impl Into<LabelText<T>> + 'static: Into<LabelText<T>> + 'static,\n           impl IntoIterator<Item = (impl Into<LabelText<T>> + 'static, T)>: IntoIterator<Item\n           =\n           (impl Into<LabelText<T>> + 'static,\n            T)>>(impl IntoIterator<Item = (impl Into<LabelText<T>> + 'static, T)>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Given a vector of `(label_text, enum_variant)` tuples, create a group of Radio buttons\n","sig":null,"attributes":[{"value":"/ Given a vector of `(label_text, enum_variant)` tuples, create a group of Radio buttons","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\radio.rs","byte_start":372348,"byte_end":372438,"line_start":30,"line_end":30,"column_start":5,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":2231},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\radio.rs","byte_start":372900,"byte_end":372905,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"Radio","qualname":"::widget::radio::Radio","value":"Radio {  }","parent":null,"children":[{"krate":0,"index":2233},{"krate":0,"index":2234}],"decl_id":null,"docs":" A single radio button\n","sig":null,"attributes":[{"value":"/ A single radio button","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\radio.rs","byte_start":372863,"byte_end":372888,"line_start":43,"line_end":43,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2237},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\radio.rs","byte_start":373088,"byte_end":373091,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<Radio<T>>::new","value":"pub fn new<impl Into<LabelText<T>>: Into<LabelText<T>>>(impl Into<LabelText<T>>,\n                                                        T) -> Radio<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a lone Radio button from label text and an enum variant\n","sig":null,"attributes":[{"value":"/ Create a lone Radio button from label text and an enum variant","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\radio.rs","byte_start":373010,"byte_end":373076,"line_start":50,"line_end":50,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":2302},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":379070,"byte_end":379076,"line_start":109,"line_end":109,"column_start":12,"column_end":18},"name":"Scroll","qualname":"::widget::scroll::Scroll","value":"Scroll {  }","parent":null,"children":[{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":2309}],"decl_id":null,"docs":" A container that scrolls its contents.","sig":null,"attributes":[{"value":"/ A container that scrolls its contents.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":378806,"byte_end":378848,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":378849,"byte_end":378852,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ This container holds a single child, and uses the wheel to scroll it","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":378853,"byte_end":378925,"line_start":105,"line_end":105,"column_start":1,"column_end":73}},{"value":"/ when the child's bounds are larger than the viewport.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":378926,"byte_end":378983,"line_start":106,"line_end":106,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":378984,"byte_end":378987,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ The child is laid out with completely unconstrained layout bounds.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":378988,"byte_end":379058,"line_start":108,"line_end":108,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2313},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":379550,"byte_end":379553,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"new","qualname":"<Scroll<T, W>>::new","value":"pub fn new(W) -> Scroll<T, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new scroll container.","sig":null,"attributes":[{"value":"/ Create a new scroll container.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":379269,"byte_end":379303,"line_start":118,"line_end":118,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":379308,"byte_end":379311,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This method will allow scrolling in all directions if child's bounds","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":379316,"byte_end":379388,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ are larger than the viewport. Use [vertical](#method.vertical)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":379393,"byte_end":379459,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ and [horizontal](#method.horizontal) methods to limit scroll behavior.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":379464,"byte_end":379538,"line_start":122,"line_end":122,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2314},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":380005,"byte_end":380013,"line_start":135,"line_end":135,"column_start":12,"column_end":20},"name":"vertical","qualname":"<Scroll<T, W>>::vertical","value":"pub fn vertical(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Limit scroll behavior to allow only vertical scrolling (Y-axis).\n The child is laid out with constrained width and infinite height.\n","sig":null,"attributes":[{"value":"/ Limit scroll behavior to allow only vertical scrolling (Y-axis).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":379851,"byte_end":379919,"line_start":133,"line_end":133,"column_start":5,"column_end":73}},{"value":"/ The child is laid out with constrained width and infinite height.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":379924,"byte_end":379993,"line_start":134,"line_end":134,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2315},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":380266,"byte_end":380276,"line_start":142,"line_end":142,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<Scroll<T, W>>::horizontal","value":"pub fn horizontal(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Limit scroll behavior to allow only horizontal scrolling (X-axis).\n The child is laid out with constrained height and infinite width.\n","sig":null,"attributes":[{"value":"/ Limit scroll behavior to allow only horizontal scrolling (X-axis).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":380110,"byte_end":380180,"line_start":140,"line_end":140,"column_start":5,"column_end":75}},{"value":"/ The child is laid out with constrained height and infinite width.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":380185,"byte_end":380254,"line_start":141,"line_end":141,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2316},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":380431,"byte_end":380436,"line_start":148,"line_end":148,"column_start":12,"column_end":17},"name":"child","qualname":"<Scroll<T, W>>::child","value":"pub fn child(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the child widget.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the child widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":380375,"byte_end":380419,"line_start":147,"line_end":147,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2317},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":380555,"byte_end":380564,"line_start":153,"line_end":153,"column_start":12,"column_end":21},"name":"child_mut","qualname":"<Scroll<T, W>>::child_mut","value":"pub fn child_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the child widget.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the child widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":380491,"byte_end":380543,"line_start":152,"line_end":152,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2318},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":380684,"byte_end":380694,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"child_size","qualname":"<Scroll<T, W>>::child_size","value":"pub fn child_size(&Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the child widget.\n","sig":null,"attributes":[{"value":"/ Returns the size of the child widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":380631,"byte_end":380672,"line_start":157,"line_end":157,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2319},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":380844,"byte_end":380850,"line_start":165,"line_end":165,"column_start":12,"column_end":18},"name":"scroll","qualname":"<Scroll<T, W>>::scroll","value":"pub fn scroll(&mut Self, Vec2, Size) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Update the scroll.","sig":null,"attributes":[{"value":"/ Update the scroll.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":380747,"byte_end":380769,"line_start":162,"line_end":162,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":380774,"byte_end":380777,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if the scroll has been updated.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":380782,"byte_end":380832,"line_start":164,"line_end":164,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2320},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":381406,"byte_end":381426,"line_start":179,"line_end":179,"column_start":12,"column_end":32},"name":"reset_scrollbar_fade","qualname":"<Scroll<T, W>>::reset_scrollbar_fade","value":"pub fn reset_scrollbar_fade<F>(&mut Self, F, &Env) where F: FnOnce(Duration)\n-> TimerToken","parent":null,"children":[],"decl_id":null,"docs":" Makes the scrollbars visible, and resets the fade timer.\n","sig":null,"attributes":[{"value":"/ Makes the scrollbars visible, and resets the fade timer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":381334,"byte_end":381394,"line_start":178,"line_end":178,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2322},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":381908,"byte_end":381914,"line_start":191,"line_end":191,"column_start":12,"column_end":18},"name":"offset","qualname":"<Scroll<T, W>>::offset","value":"pub fn offset(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns the current scroll offset.\n","sig":null,"attributes":[{"value":"/ Returns the current scroll offset.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":381858,"byte_end":381896,"line_start":190,"line_end":190,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2359},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":395569,"byte_end":395577,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"SizedBox","qualname":"::widget::sized_box::SizedBox","value":"SizedBox {  }","parent":null,"children":[{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363}],"decl_id":null,"docs":" A widget with predefined size.","sig":null,"attributes":[{"value":"/ A widget with predefined size.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":395031,"byte_end":395065,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":395066,"byte_end":395069,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ If given a child, this widget forces its child to have a specific width and/or height","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":395070,"byte_end":395159,"line_start":27,"line_end":27,"column_start":1,"column_end":90}},{"value":"/ (assuming values are permitted by this widget's parent). If either the width or height is not set,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":395160,"byte_end":395262,"line_start":28,"line_end":28,"column_start":1,"column_end":103}},{"value":"/ this widget will size itself to match the child's size in that dimension.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":395263,"byte_end":395340,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":395341,"byte_end":395344,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If not given a child, SizedBox will try to size itself as close to the specified height","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":395345,"byte_end":395436,"line_start":31,"line_end":31,"column_start":1,"column_end":92}},{"value":"/ and width as possible given the parent's constraints. If height or width is not set,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":395437,"byte_end":395525,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ it will be treated as zero.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":395526,"byte_end":395557,"line_start":33,"line_end":33,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2366},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":395782,"byte_end":395785,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<SizedBox<T>>::new","value":"pub fn new<impl Widget<T> + 'static: Widget<T> +\n           'static>(impl Widget<T> + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct container with child, and both width and height not set.\n","sig":null,"attributes":[{"value":"/ Construct container with child, and both width and height not set.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":395700,"byte_end":395770,"line_start":41,"line_end":41,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":396043,"byte_end":396048,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"empty","qualname":"<SizedBox<T>>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct container without child, and both width and height not set.\n","sig":null,"attributes":[{"value":"/ Construct container without child, and both width and height not set.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":395958,"byte_end":396031,"line_start":50,"line_end":50,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2369},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":396211,"byte_end":396216,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"width","qualname":"<SizedBox<T>>::width","value":"pub fn width(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set container's width.\n","sig":null,"attributes":[{"value":"/ Set container's width.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":396173,"byte_end":396199,"line_start":59,"line_end":59,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2370},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":396346,"byte_end":396352,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"height","qualname":"<SizedBox<T>>::height","value":"pub fn height(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set container's height.\n","sig":null,"attributes":[{"value":"/ Set container's height.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":396307,"byte_end":396334,"line_start":65,"line_end":65,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2371},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":396821,"byte_end":396827,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"expand","qualname":"<SizedBox<T>>::expand","value":"pub fn expand(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Expand container to fit the parent.","sig":null,"attributes":[{"value":"/ Expand container to fit the parent.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":396446,"byte_end":396485,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":396490,"byte_end":396493,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Only call this method if you want your widget to occupy all available","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":396498,"byte_end":396571,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/ space. If you only care about expanding in one of width or height, use","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":396576,"byte_end":396650,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ [`expand_width`] or [`expand_height`] instead.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":396655,"byte_end":396705,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":396710,"byte_end":396713,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`expand_height`]: #method.expand_height","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":396718,"byte_end":396762,"line_start":77,"line_end":77,"column_start":5,"column_end":49}},{"value":"/ [`expand_width`]: #method.expand_width","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":396767,"byte_end":396809,"line_start":78,"line_end":78,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2372},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":397063,"byte_end":397075,"line_start":88,"line_end":88,"column_start":12,"column_end":24},"name":"expand_width","qualname":"<SizedBox<T>>::expand_width","value":"pub fn expand_width(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Expand the container on the x-axis.","sig":null,"attributes":[{"value":"/ Expand the container on the x-axis.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":396947,"byte_end":396986,"line_start":85,"line_end":85,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":396991,"byte_end":396994,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This will force the child to have maximum width.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":396999,"byte_end":397051,"line_start":87,"line_end":87,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2373},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":397274,"byte_end":397287,"line_start":96,"line_end":96,"column_start":12,"column_end":25},"name":"expand_height","qualname":"<SizedBox<T>>::expand_height","value":"pub fn expand_height(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Expand the container on the y-axis.","sig":null,"attributes":[{"value":"/ Expand the container on the y-axis.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":397157,"byte_end":397196,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":397201,"byte_end":397204,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This will force the child to have maximum height.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":397209,"byte_end":397262,"line_start":95,"line_end":95,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":4128},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\slider.rs","byte_start":401775,"byte_end":401781,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Slider","qualname":"::widget::slider::Slider","value":"Slider {  }","parent":null,"children":[{"krate":0,"index":4129},{"krate":0,"index":4130},{"krate":0,"index":4131},{"krate":0,"index":4132},{"krate":0,"index":4133}],"decl_id":null,"docs":" A slider, allowing interactive update of a numeric value.","sig":null,"attributes":[{"value":"/ A slider, allowing interactive update of a numeric value.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\slider.rs","byte_start":401566,"byte_end":401627,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\slider.rs","byte_start":401628,"byte_end":401631,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This slider implements `Widget<f64>`, and works on values clamped","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\slider.rs","byte_start":401632,"byte_end":401701,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/ in the range `min..max`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\slider.rs","byte_start":401702,"byte_end":401730,"line_start":27,"line_end":27,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2407},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\slider.rs","byte_start":401935,"byte_end":401938,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Slider>::new","value":"pub fn new() -> Slider","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Slider`.\n","sig":null,"attributes":[{"value":"/ Create a new `Slider`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\slider.rs","byte_start":401897,"byte_end":401923,"line_start":38,"line_end":38,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2408},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\slider.rs","byte_start":402289,"byte_end":402299,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"with_range","qualname":"<Slider>::with_range","value":"pub fn with_range(Self, f64, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set the range covered by this slider.","sig":null,"attributes":[{"value":"/ Builder-style method to set the range covered by this slider.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\slider.rs","byte_start":402163,"byte_end":402228,"line_start":49,"line_end":49,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\slider.rs","byte_start":402233,"byte_end":402236,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The default range is `0.0..1.0`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\slider.rs","byte_start":402241,"byte_end":402277,"line_start":51,"line_end":51,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2430},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":408703,"byte_end":408710,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"Spinner","qualname":"::widget::spinner::Spinner","value":"Spinner {  }","parent":null,"children":[{"krate":0,"index":2431},{"krate":0,"index":2432}],"decl_id":null,"docs":" An animated spinner widget for showing a loading state.","sig":null,"attributes":[{"value":"/ An animated spinner widget for showing a loading state.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":408470,"byte_end":408529,"line_start":23,"line_end":23,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":408530,"byte_end":408533,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ To customize the spinner's size, you can place it inside a [`SizedBox`]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":408534,"byte_end":408609,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ that has a fixed width and height.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":408610,"byte_end":408648,"line_start":26,"line_end":26,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":408649,"byte_end":408652,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`SizedBox`]: struct.SizedBox.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":408653,"byte_end":408691,"line_start":28,"line_end":28,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2434},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":408816,"byte_end":408819,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Spinner>::new","value":"pub fn new() -> Spinner","parent":null,"children":[],"decl_id":null,"docs":" Create a spinner widget\n","sig":null,"attributes":[{"value":"/ Create a spinner widget","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":408777,"byte_end":408804,"line_start":35,"line_end":35,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2435},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":409067,"byte_end":409077,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"with_color","qualname":"<Spinner>::with_color","value":"pub fn with_color<impl Into<KeyOrValue<Color>>: Into<KeyOrValue<Color>>>(Self,\n                                                                         impl Into<KeyOrValue<Color>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method for setting the spinner's color.","sig":null,"attributes":[{"value":"/ Builder-style method for setting the spinner's color.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":408873,"byte_end":408930,"line_start":40,"line_end":40,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":408935,"byte_end":408938,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ The argument can be either a `Color` or a [`Key<Color>`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":408943,"byte_end":409004,"line_start":42,"line_end":42,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":409009,"byte_end":409012,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ [`Key<Color>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":409017,"byte_end":409055,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2437},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":409359,"byte_end":409368,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"set_color","qualname":"<Spinner>::set_color","value":"pub fn set_color<impl Into<KeyOrValue<Color>>: Into<KeyOrValue<Color>>>(&mut Self,\n                                                                        impl Into<KeyOrValue<Color>>)","parent":null,"children":[],"decl_id":null,"docs":" Set the spinner's color.","sig":null,"attributes":[{"value":"/ Set the spinner's color.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":409194,"byte_end":409222,"line_start":50,"line_end":50,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":409227,"byte_end":409230,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ The argument can be either a `Color` or a [`Key<Color>`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":409235,"byte_end":409296,"line_start":52,"line_end":52,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":409301,"byte_end":409304,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ [`Key<Color>`]: ../struct.Key.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":409309,"byte_end":409347,"line_start":54,"line_end":54,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2472},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":412800,"byte_end":412805,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Split","qualname":"::widget::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":2474},{"krate":0,"index":2475},{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2483}],"decl_id":null,"docs":" A container containing two other widgets, splitting the area either horizontally or vertically.\n","sig":null,"attributes":[{"value":"/ A container containing two other widgets, splitting the area either horizontally or vertically.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":412689,"byte_end":412788,"line_start":24,"line_end":24,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":2489},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":414064,"byte_end":414071,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"columns","qualname":"<Split<T>>::columns","value":"pub fn columns<impl Widget<T> + 'static: Widget<T> + 'static,\n               impl Widget<T> + 'static: Widget<T> +\n               'static>(impl Widget<T> + 'static, impl Widget<T> + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new split panel, with the horizontal axis split in two by a vertical bar.\n The children are laid out left and right.\n","sig":null,"attributes":[{"value":"/ Create a new split panel, with the horizontal axis split in two by a vertical bar.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":413916,"byte_end":414002,"line_start":62,"line_end":62,"column_start":5,"column_end":91}},{"value":"/ The children are laid out left and right.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":414007,"byte_end":414052,"line_start":63,"line_end":63,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2492},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":414358,"byte_end":414362,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"rows","qualname":"<Split<T>>::rows","value":"pub fn rows<impl Widget<T> + 'static: Widget<T> + 'static,\n            impl Widget<T> + 'static: Widget<T> +\n            'static>(impl Widget<T> + 'static, impl Widget<T> + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new split panel, with the vertical axis split in two by a horizontal bar.\n The children are laid out up and down.\n","sig":null,"attributes":[{"value":"/ Create a new split panel, with the vertical axis split in two by a horizontal bar.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":414213,"byte_end":414299,"line_start":68,"line_end":68,"column_start":5,"column_end":91}},{"value":"/ The children are laid out up and down.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":414304,"byte_end":414346,"line_start":69,"line_end":69,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":414706,"byte_end":414717,"line_start":78,"line_end":78,"column_start":12,"column_end":23},"name":"split_point","qualname":"<Split<T>>::split_point","value":"pub fn split_point(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set the split point as a fraction of the split axis.","sig":null,"attributes":[{"value":"/ Builder-style method to set the split point as a fraction of the split axis.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":414502,"byte_end":414582,"line_start":74,"line_end":74,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":414587,"byte_end":414590,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The value must be between `0.0` and `1.0`, inclusive.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":414595,"byte_end":414652,"line_start":76,"line_end":76,"column_start":5,"column_end":62}},{"value":"/ The default split point is `0.5`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":414657,"byte_end":414694,"line_start":77,"line_end":77,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2496},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":415188,"byte_end":415196,"line_start":91,"line_end":91,"column_start":12,"column_end":20},"name":"min_size","qualname":"<Split<T>>::min_size","value":"pub fn min_size(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set the minimum size for both sides of the split axis.","sig":null,"attributes":[{"value":"/ Builder-style method to set the minimum size for both sides of the split axis.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":414967,"byte_end":415049,"line_start":87,"line_end":87,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":415054,"byte_end":415057,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ The value must be greater than or equal to `0.0`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":415062,"byte_end":415115,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/ The value will be rounded up to the nearest integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":415120,"byte_end":415176,"line_start":90,"line_end":90,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2497},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":415565,"byte_end":415573,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"bar_size","qualname":"<Split<T>>::bar_size","value":"pub fn bar_size(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set the size of the splitter bar.","sig":null,"attributes":[{"value":"/ Builder-style method to set the size of the splitter bar.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":415331,"byte_end":415392,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":415397,"byte_end":415400,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The value must be positive or zero.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":415405,"byte_end":415444,"line_start":99,"line_end":99,"column_start":5,"column_end":44}},{"value":"/ The value will be rounded up to the nearest integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":415449,"byte_end":415505,"line_start":100,"line_end":100,"column_start":5,"column_end":61}},{"value":"/ The default splitter bar size is `6.0`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":415510,"byte_end":415553,"line_start":101,"line_end":101,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2498},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":416406,"byte_end":416418,"line_start":120,"line_end":120,"column_start":12,"column_end":24},"name":"min_bar_area","qualname":"<Split<T>>::min_bar_area","value":"pub fn min_bar_area(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set the minimum size of the splitter bar area.","sig":null,"attributes":[{"value":"/ Builder-style method to set the minimum size of the splitter bar area.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":415744,"byte_end":415818,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":415823,"byte_end":415826,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ The minimum splitter bar area defines the minimum size of the area","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":415831,"byte_end":415901,"line_start":110,"line_end":110,"column_start":5,"column_end":75}},{"value":"/ where mouse hit detection is done for the splitter bar.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":415906,"byte_end":415965,"line_start":111,"line_end":111,"column_start":5,"column_end":64}},{"value":"/ The final area is either this or the splitter bar size, whichever is greater.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":415970,"byte_end":416051,"line_start":112,"line_end":112,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":416056,"byte_end":416059,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This can be useful when you want to use a very narrow visual splitter bar,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":416064,"byte_end":416142,"line_start":114,"line_end":114,"column_start":5,"column_end":83}},{"value":"/ but don't want to sacrifice user experience by making it hard to click on.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":416147,"byte_end":416225,"line_start":115,"line_end":115,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":416230,"byte_end":416233,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The value must be positive or zero.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":416238,"byte_end":416277,"line_start":117,"line_end":117,"column_start":5,"column_end":44}},{"value":"/ The value will be rounded up to the nearest integer.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":416282,"byte_end":416338,"line_start":118,"line_end":118,"column_start":5,"column_end":61}},{"value":"/ The default minimum splitter bar area is `6.0`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":416343,"byte_end":416394,"line_start":119,"line_end":119,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2499},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":416704,"byte_end":416713,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"draggable","qualname":"<Split<T>>::draggable","value":"pub fn draggable(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set whether the split point can be changed by dragging.\n","sig":null,"attributes":[{"value":"/ Builder-style method to set whether the split point can be changed by dragging.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":416609,"byte_end":416692,"line_start":126,"line_end":126,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":417005,"byte_end":417014,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"solid_bar","qualname":"<Split<T>>::solid_bar","value":"pub fn solid_bar(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set whether the splitter bar is drawn as a solid rectangle.","sig":null,"attributes":[{"value":"/ Builder-style method to set whether the splitter bar is drawn as a solid rectangle.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":416811,"byte_end":416898,"line_start":132,"line_end":132,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":416903,"byte_end":416906,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this is `false` (the default), the bar will be drawn as two parallel lines.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":416911,"byte_end":416993,"line_start":134,"line_end":134,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":2545},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":430713,"byte_end":430720,"line_start":36,"line_end":36,"column_start":12,"column_end":19},"name":"Stepper","qualname":"::widget::stepper::Stepper","value":"Stepper {  }","parent":null,"children":[{"krate":0,"index":2546},{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2552}],"decl_id":null,"docs":" A stepper widget for step-wise increasing and decreasing a value.\n","sig":null,"attributes":[{"value":"/ A stepper widget for step-wise increasing and decreasing a value.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":430632,"byte_end":430701,"line_start":35,"line_end":35,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2554},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":430951,"byte_end":430954,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<Stepper>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2555},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":431355,"byte_end":431365,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"with_range","qualname":"<Stepper>::with_range","value":"pub fn with_range(Self, f64, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the range covered by this slider.","sig":null,"attributes":[{"value":"/ Set the range covered by this slider.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":431233,"byte_end":431274,"line_start":60,"line_end":60,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":431279,"byte_end":431282,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The default range is `std::f64::MIN..std::f64::MAX`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":431287,"byte_end":431343,"line_start":62,"line_end":62,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2556},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":431603,"byte_end":431612,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"with_step","qualname":"<Stepper>::with_step","value":"pub fn with_step(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the steppers amount by which the value increases or decreases.","sig":null,"attributes":[{"value":"/ Set the steppers amount by which the value increases or decreases.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":431478,"byte_end":431548,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":431553,"byte_end":431556,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ The default step is `1.0`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":431561,"byte_end":431591,"line_start":71,"line_end":71,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2557},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":432061,"byte_end":432076,"line_start":85,"line_end":85,"column_start":12,"column_end":27},"name":"with_wraparound","qualname":"<Stepper>::with_wraparound","value":"pub fn with_wraparound(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether the stepper should wrap around the minimum/maximum values.","sig":null,"attributes":[{"value":"/ Set whether the stepper should wrap around the minimum/maximum values.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":431694,"byte_end":431768,"line_start":77,"line_end":77,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":431773,"byte_end":431776,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ When wraparound is enabled incrementing above max behaves like this:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":431781,"byte_end":431853,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/ - if the previous value is < max it becomes max","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":431858,"byte_end":431909,"line_start":80,"line_end":80,"column_start":5,"column_end":56}},{"value":"/ - if the previous value is = max it becomes min","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":431914,"byte_end":431965,"line_start":81,"line_end":81,"column_start":5,"column_end":56}},{"value":"/ Same logic applies for decrementing","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":431970,"byte_end":432009,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":432014,"byte_end":432017,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The default is `false`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":432022,"byte_end":432049,"line_start":84,"line_end":84,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4140},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\switch.rs","byte_start":438416,"byte_end":438422,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Switch","qualname":"::widget::switch::Switch","value":"Switch {  }","parent":null,"children":[{"krate":0,"index":4141},{"krate":0,"index":4142},{"krate":0,"index":4143},{"krate":0,"index":4144}],"decl_id":null,"docs":" A switch that toggles a `bool`.\n","sig":null,"attributes":[{"value":"/ A switch that toggles a `bool`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\switch.rs","byte_start":438336,"byte_end":438371,"line_start":30,"line_end":30,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2598},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\switch.rs","byte_start":438586,"byte_end":438589,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<Switch>::new","value":"pub fn new() -> Switch","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Switch`.\n","sig":null,"attributes":[{"value":"/ Create a new `Switch`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\switch.rs","byte_start":438548,"byte_end":438574,"line_start":40,"line_end":40,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":4151},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\textbox.rs","byte_start":448921,"byte_end":448928,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"TextBox","qualname":"::widget::textbox::TextBox","value":"TextBox {  }","parent":null,"children":[{"krate":0,"index":4152},{"krate":0,"index":4153},{"krate":0,"index":4154},{"krate":0,"index":4155},{"krate":0,"index":4156},{"krate":0,"index":4157}],"decl_id":null,"docs":" A widget that allows user text input.\n","sig":null,"attributes":[{"value":"/ A widget that allows user text input.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\textbox.rs","byte_start":448844,"byte_end":448885,"line_start":43,"line_end":43,"column_start":1,"column_end":42}}]},{"kind":"Const","id":{"krate":0,"index":2659},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\textbox.rs","byte_start":449178,"byte_end":449190,"line_start":56,"line_end":56,"column_start":15,"column_end":27},"name":"PERFORM_EDIT","qualname":"::widget::textbox::TextBox::PERFORM_EDIT","value":"Selector<EditAction>","parent":{"krate":0,"index":2658},"children":[],"decl_id":null,"docs":" Perform an `EditAction`. The payload *must* be an `EditAction`.\n","sig":null,"attributes":[{"value":"/ Perform an `EditAction`. The payload *must* be an `EditAction`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\textbox.rs","byte_start":449096,"byte_end":449163,"line_start":55,"line_end":55,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2660},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\textbox.rs","byte_start":449324,"byte_end":449327,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<TextBox>::new","value":"pub fn new() -> TextBox","parent":null,"children":[],"decl_id":null,"docs":" Create a new TextBox widget\n","sig":null,"attributes":[{"value":"/ Create a new TextBox widget","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\textbox.rs","byte_start":449281,"byte_end":449312,"line_start":59,"line_end":59,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2661},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\textbox.rs","byte_start":449673,"byte_end":449689,"line_start":72,"line_end":72,"column_start":12,"column_end":28},"name":"with_placeholder","qualname":"<TextBox>::with_placeholder","value":"pub fn with_placeholder<impl Into<String>: Into<String>>(Self,\n                                                         impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder-style method to set the `TextBox`'s placeholder text.\n","sig":null,"attributes":[{"value":"/ Builder-style method to set the `TextBox`'s placeholder text.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\textbox.rs","byte_start":449596,"byte_end":449661,"line_start":71,"line_end":71,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\textbox.rs","byte_start":449909,"byte_end":449912,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"raw","qualname":"<TextBox>::raw","value":"pub fn raw() -> TextBox","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.5.0\", note = \"Use TextBox::new instead\")","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\textbox.rs","byte_start":449813,"byte_end":449878,"line_start":77,"line_end":77,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":2708},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\view_switcher.rs","byte_start":467978,"byte_end":467990,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"ViewSwitcher","qualname":"::widget::view_switcher::ViewSwitcher","value":"ViewSwitcher {  }","parent":null,"children":[{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\view_switcher.rs","byte_start":468711,"byte_end":468714,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<ViewSwitcher<T, U>>::new","value":"pub fn new<impl Fn(&T, &Env) -> U + 'static: Fn(&T, &Env) -> U + 'static,\n           impl Fn(&U, &T, &Env) -> Box<dyn Widget<T>> + 'static: Fn(&U, &T,\n                                                                     &Env) ->\n           Box<Widget<T>> +\n           'static>(impl Fn(&T, &Env) -> U + 'static,\n                    impl Fn(&U, &T, &Env) -> Box<dyn Widget<T>> + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new view switcher.","sig":null,"attributes":[{"value":"/ Create a new view switcher.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\view_switcher.rs","byte_start":468233,"byte_end":468264,"line_start":36,"line_end":36,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\view_switcher.rs","byte_start":468269,"byte_end":468272,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The `child_picker` closure is called every time the application data changes.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\view_switcher.rs","byte_start":468277,"byte_end":468358,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/ If the value it returns is the same as the one it returned during the previous","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\view_switcher.rs","byte_start":468363,"byte_end":468445,"line_start":39,"line_end":39,"column_start":5,"column_end":87}},{"value":"/ data change, nothing happens. If it returns a different value, then the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\view_switcher.rs","byte_start":468450,"byte_end":468525,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ `child_builder` closure is called with the new value.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\view_switcher.rs","byte_start":468530,"byte_end":468587,"line_start":41,"line_end":41,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\view_switcher.rs","byte_start":468592,"byte_end":468595,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ The `child_builder` closure creates a new child widget based on","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\view_switcher.rs","byte_start":468600,"byte_end":468667,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ the value passed to it.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\view_switcher.rs","byte_start":468672,"byte_end":468699,"line_start":44,"line_end":44,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4162},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473132,"byte_end":473140,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"WidgetId","qualname":"::widget::widget::WidgetId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unique identifier for a single [`Widget`].","sig":null,"attributes":[{"value":"/ A unique identifier for a single [`Widget`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":471626,"byte_end":471674,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":471675,"byte_end":471678,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `WidgetId`s are generated automatically for all widgets that participate","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":471679,"byte_end":471755,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ in layout. More specifically, each [`WidgetPod`] has a unique `WidgetId`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":471756,"byte_end":471833,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":471834,"byte_end":471837,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ These ids are used internally to route events, and can be used to communicate","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":471838,"byte_end":471919,"line_start":25,"line_end":25,"column_start":1,"column_end":82}},{"value":"/ between widgets, by submitting a command (as with [`EventCtx::submit_command`])","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":471920,"byte_end":472003,"line_start":26,"line_end":26,"column_start":1,"column_end":84}},{"value":"/ and passing a `WidgetId` as the [`Target`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472004,"byte_end":472051,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472052,"byte_end":472055,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A widget can retrieve its id via methods on the various contexts, such as","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472056,"byte_end":472133,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ [`LifeCycleCtx::widget_id`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472134,"byte_end":472166,"line_start":30,"line_end":30,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472167,"byte_end":472170,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Explicit `WidgetId`s.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472171,"byte_end":472199,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472200,"byte_end":472203,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Sometimes, you may want to know a widget's id when constructing the widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472204,"byte_end":472283,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ You can give a widget an _explicit_ id by wrapping it in an [`IdentityWrapper`]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472284,"byte_end":472367,"line_start":35,"line_end":35,"column_start":1,"column_end":84}},{"value":"/ widget, or by using the [`WidgetExt::with_id`] convenience method.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472368,"byte_end":472438,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472439,"byte_end":472442,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If you set a `WidgetId` directly, you are resposible for ensuring that it","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472443,"byte_end":472520,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ is unique in time. That is: only one widget can exist with a given id at a","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472521,"byte_end":472599,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ given time.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472600,"byte_end":472615,"line_start":40,"line_end":40,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472616,"byte_end":472619,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`Widget`]: trait.Widget.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472620,"byte_end":472653,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/ [`EventCtx::submit_command`]: struct.EventCtx.html#method.submit_command","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472654,"byte_end":472730,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ [`Target`]: enum.Target.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472731,"byte_end":472763,"line_start":44,"line_end":44,"column_start":1,"column_end":33}},{"value":"/ [`WidgetPod`]: struct.WidgetPod.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472764,"byte_end":472804,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/ [`LifeCycleCtx::widget_id`]: struct.LifeCycleCtx.html#method.widget_id","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472805,"byte_end":472879,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ [`WidgetExt::with_id`]: trait.WidgetExt.html#method.with_id","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472880,"byte_end":472943,"line_start":47,"line_end":47,"column_start":1,"column_end":64}},{"value":"/ [`IdentityWrapper`]: widget/struct.IdentityWrapper.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":472944,"byte_end":473003,"line_start":48,"line_end":48,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":2735},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474904,"byte_end":474910,"line_start":92,"line_end":92,"column_start":11,"column_end":17},"name":"Widget","qualname":"::widget::widget::Widget","value":"Widget<T>","parent":null,"children":[{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743}],"decl_id":null,"docs":" The trait implemented by all widgets.","sig":null,"attributes":[{"value":"/ The trait implemented by all widgets.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473155,"byte_end":473196,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473197,"byte_end":473200,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ All appearance and behavior for a widget is encapsulated in an","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473201,"byte_end":473267,"line_start":55,"line_end":55,"column_start":1,"column_end":67}},{"value":"/ object that implements this trait.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473268,"byte_end":473306,"line_start":56,"line_end":56,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473307,"byte_end":473310,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The trait is parametrized by a type (`T`) for associated data.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473311,"byte_end":473377,"line_start":58,"line_end":58,"column_start":1,"column_end":67}},{"value":"/ All trait methods are provided with access to this data, and","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473378,"byte_end":473442,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/ in the case of [`event`] the reference is mutable, so that events","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473443,"byte_end":473512,"line_start":60,"line_end":60,"column_start":1,"column_end":70}},{"value":"/ can directly update the data.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473513,"byte_end":473546,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473547,"byte_end":473550,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Whenever the application data changes, the framework traverses","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473551,"byte_end":473617,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/ the widget hierarchy with an [`update`] method. The framework","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473618,"byte_end":473683,"line_start":64,"line_end":64,"column_start":1,"column_end":66}},{"value":"/ needs to know whether the data has actually changed or not, which","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473684,"byte_end":473753,"line_start":65,"line_end":65,"column_start":1,"column_end":70}},{"value":"/ is why `T` has a [`Data`] bound.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473754,"byte_end":473790,"line_start":66,"line_end":66,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473791,"byte_end":473794,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ All the trait methods are provided with a corresponding context.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473795,"byte_end":473863,"line_start":68,"line_end":68,"column_start":1,"column_end":69}},{"value":"/ The widget can request things and cause actions by calling methods","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473864,"byte_end":473934,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ on that context.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473935,"byte_end":473955,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473956,"byte_end":473959,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ In addition, all trait methods are provided with an environment","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":473960,"byte_end":474027,"line_start":72,"line_end":72,"column_start":1,"column_end":68}},{"value":"/ ([`Env`]).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474028,"byte_end":474042,"line_start":73,"line_end":73,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474043,"byte_end":474046,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Container widgets will generally not call `Widget` methods directly","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474047,"byte_end":474118,"line_start":75,"line_end":75,"column_start":1,"column_end":72}},{"value":"/ on their child widgets, but rather will own their widget wrapped in","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474119,"byte_end":474190,"line_start":76,"line_end":76,"column_start":1,"column_end":72}},{"value":"/ a [`WidgetPod`], and call the corresponding method on that. The","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474191,"byte_end":474258,"line_start":77,"line_end":77,"column_start":1,"column_end":68}},{"value":"/ `WidgetPod` contains state and logic for these traversals. On the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474259,"byte_end":474328,"line_start":78,"line_end":78,"column_start":1,"column_end":70}},{"value":"/ other hand, particularly light-weight containers might contain their","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474329,"byte_end":474401,"line_start":79,"line_end":79,"column_start":1,"column_end":73}},{"value":"/ child `Widget` directly (when no layout or event flow logic is","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474402,"byte_end":474468,"line_start":80,"line_end":80,"column_start":1,"column_end":67}},{"value":"/ needed), and in those cases will call these methods.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474469,"byte_end":474525,"line_start":81,"line_end":81,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474526,"byte_end":474529,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ As a general pattern, container widgets will call the corresponding","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474530,"byte_end":474601,"line_start":83,"line_end":83,"column_start":1,"column_end":72}},{"value":"/ `WidgetPod` method on all their children. The `WidgetPod` applies","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474602,"byte_end":474671,"line_start":84,"line_end":84,"column_start":1,"column_end":70}},{"value":"/ logic to determine whether to recurse, as needed.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474672,"byte_end":474725,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474726,"byte_end":474729,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [`event`]: #tymethod.event","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474730,"byte_end":474760,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/ [`update`]: #tymethod.update","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474761,"byte_end":474793,"line_start":88,"line_end":88,"column_start":1,"column_end":33}},{"value":"/ [`Data`]: trait.Data.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474794,"byte_end":474823,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/ [`Env`]: struct.Env.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474824,"byte_end":474852,"line_start":90,"line_end":90,"column_start":1,"column_end":29}},{"value":"/ [`WidgetPod`]: struct.WidgetPod.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474853,"byte_end":474893,"line_start":91,"line_end":91,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":475344,"byte_end":475349,"line_start":103,"line_end":103,"column_start":8,"column_end":13},"name":"event","qualname":"::widget::widget::Widget::event","value":"pub fn event(&mut Self, &mut EventCtx, &Event, &mut T, &Env)","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":" Handle an event.","sig":null,"attributes":[{"value":"/ Handle an event.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474920,"byte_end":474940,"line_start":93,"line_end":93,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474945,"byte_end":474948,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ A number of different events (in the [`Event`] enum) are handled in this","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":474953,"byte_end":475029,"line_start":95,"line_end":95,"column_start":5,"column_end":81}},{"value":"/ method call. A widget can handle these events in a number of ways:","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":475034,"byte_end":475104,"line_start":96,"line_end":96,"column_start":5,"column_end":75}},{"value":"/ requesting things from the [`EventCtx`], mutating the data, or submitting","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":475109,"byte_end":475186,"line_start":97,"line_end":97,"column_start":5,"column_end":82}},{"value":"/ a [`Command`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":475191,"byte_end":475209,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":475214,"byte_end":475217,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ [`Event`]: enum.Event.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":475222,"byte_end":475252,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ [`EventCtx`]: struct.EventCtx.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":475257,"byte_end":475295,"line_start":101,"line_end":101,"column_start":5,"column_end":43}},{"value":"/ [`Command`]: struct.Command.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":475300,"byte_end":475336,"line_start":102,"line_end":102,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2738},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476145,"byte_end":476154,"line_start":119,"line_end":119,"column_start":8,"column_end":17},"name":"lifecycle","qualname":"::widget::widget::Widget::lifecycle","value":"pub fn lifecycle(&mut Self, &mut LifeCycleCtx, &LifeCycle, &T, &Env)","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":" Handle a life cycle notification.","sig":null,"attributes":[{"value":"/ Handle a life cycle notification.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":475427,"byte_end":475464,"line_start":105,"line_end":105,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":475469,"byte_end":475472,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This method is called to notify your widget of certain special events,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":475477,"byte_end":475551,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ (available in the [`LifeCycle`] enum) that are generally related to","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":475556,"byte_end":475627,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ changes in the widget graph or in the state of your specific widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":475632,"byte_end":475704,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":475709,"byte_end":475712,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ A widget is not expected to mutate the application state in response","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":475717,"byte_end":475789,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/ to these events, but only to update its own internal state as required;","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":475794,"byte_end":475869,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/ if a widget needs to mutate data, it can submit a [`Command`] that will","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":475874,"byte_end":475949,"line_start":113,"line_end":113,"column_start":5,"column_end":80}},{"value":"/ be executed at the next opportunity.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":475954,"byte_end":475994,"line_start":114,"line_end":114,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":475999,"byte_end":476002,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ [`LifeCycle`]: enum.LifeCycle.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476007,"byte_end":476045,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/ [`LifeCycleCtx`]: struct.LifeCycleCtx.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476050,"byte_end":476096,"line_start":117,"line_end":117,"column_start":5,"column_end":51}},{"value":"/ [`Command`]: struct.Command.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476101,"byte_end":476137,"line_start":118,"line_end":118,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2739},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476666,"byte_end":476672,"line_start":131,"line_end":131,"column_start":8,"column_end":14},"name":"update","qualname":"::widget::widget::Widget::update","value":"pub fn update(&mut Self, &mut UpdateCtx, &T, &T, &Env)","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":" Handle a change of data.","sig":null,"attributes":[{"value":"/ Handle a change of data.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476236,"byte_end":476264,"line_start":121,"line_end":121,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476269,"byte_end":476272,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This method is called whenever the data changes. When the appearance of","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476277,"byte_end":476352,"line_start":123,"line_end":123,"column_start":5,"column_end":80}},{"value":"/ the widget depends on data, call [`request_paint`] so that it's scheduled","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476357,"byte_end":476434,"line_start":124,"line_end":124,"column_start":5,"column_end":82}},{"value":"/ for repaint.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476439,"byte_end":476455,"line_start":125,"line_end":125,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476460,"byte_end":476463,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The previous value of the data is provided in case the widget wants to","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476468,"byte_end":476542,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ compute a fine-grained delta.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476547,"byte_end":476580,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476585,"byte_end":476588,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ [`request_paint`]: struct.UpdateCtx.html#method.request_paint","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476593,"byte_end":476658,"line_start":130,"line_end":130,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":477764,"byte_end":477770,"line_start":153,"line_end":153,"column_start":8,"column_end":14},"name":"layout","qualname":"::widget::widget::Widget::layout","value":"pub fn layout(&mut Self, &mut LayoutCtx, &BoxConstraints, &T, &Env) -> Size","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":" Compute layout.","sig":null,"attributes":[{"value":"/ Compute layout.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476746,"byte_end":476765,"line_start":133,"line_end":133,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476770,"byte_end":476773,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ A leaf widget should determine its size (subject to the provided","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476778,"byte_end":476846,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ constraints) and return it.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476851,"byte_end":476882,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476887,"byte_end":476890,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ A container widget will recursively call [`WidgetPod::layout`] on its","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476895,"byte_end":476968,"line_start":138,"line_end":138,"column_start":5,"column_end":78}},{"value":"/ child widgets, providing each of them an appropriate box constraint,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":476973,"byte_end":477045,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"/ compute layout, then call [`set_layout_rect`] on each of its children.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":477050,"byte_end":477124,"line_start":140,"line_end":140,"column_start":5,"column_end":79}},{"value":"/ Finally, it should return the size of the container. The container","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":477129,"byte_end":477199,"line_start":141,"line_end":141,"column_start":5,"column_end":75}},{"value":"/ can recurse in any order, which can be helpful to, for example, compute","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":477204,"byte_end":477279,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ the size of non-flex widgets first, to determine the amount of space","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":477284,"byte_end":477356,"line_start":143,"line_end":143,"column_start":5,"column_end":77}},{"value":"/ available for the flex widgets.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":477361,"byte_end":477396,"line_start":144,"line_end":144,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":477401,"byte_end":477404,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ For efficiency, a container should only invoke layout of a child widget","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":477409,"byte_end":477484,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ once, though there is nothing enforcing this.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":477489,"byte_end":477538,"line_start":147,"line_end":147,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":477543,"byte_end":477546,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ The layout strategy is strongly inspired by Flutter.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":477551,"byte_end":477607,"line_start":149,"line_end":149,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":477612,"byte_end":477615,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`WidgetPod::layout`]: struct.WidgetPod.html#method.layout","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":477620,"byte_end":477682,"line_start":151,"line_end":151,"column_start":5,"column_end":67}},{"value":"/ [`set_layout_rect`]: struct.WidgetPod.html#method.set_layout_rect","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":477687,"byte_end":477756,"line_start":152,"line_end":152,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2741},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":478491,"byte_end":478496,"line_start":168,"line_end":168,"column_start":8,"column_end":13},"name":"paint","qualname":"::widget::widget::Widget::paint","value":"pub fn paint(&mut Self, &mut PaintCtx, &T, &Env)","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":" Paint the widget appearance.","sig":null,"attributes":[{"value":"/ Paint the widget appearance.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":477859,"byte_end":477891,"line_start":155,"line_end":155,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":477896,"byte_end":477899,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ The [`PaintCtx`] derefs to something that implements the [`RenderContext`]","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":477904,"byte_end":477982,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ trait, which exposes various methods that the widget can use to paint","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":477987,"byte_end":478060,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/ its appearance.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":478065,"byte_end":478084,"line_start":159,"line_end":159,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":478089,"byte_end":478092,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Container widgets can paint a background before recursing to their","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":478097,"byte_end":478167,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ children, or annotations (for example, scrollbars) by painting","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":478172,"byte_end":478238,"line_start":162,"line_end":162,"column_start":5,"column_end":71}},{"value":"/ afterwards. In addition, they can apply masks and transforms on","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":478243,"byte_end":478310,"line_start":163,"line_end":163,"column_start":5,"column_end":72}},{"value":"/ the render context, which is especially useful for scrolling.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":478315,"byte_end":478380,"line_start":164,"line_end":164,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":478385,"byte_end":478388,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ [`PaintCtx`]: struct.PaintCtx.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":478393,"byte_end":478431,"line_start":166,"line_end":166,"column_start":5,"column_end":43}},{"value":"/ [`RenderContext`]: trait.RenderContext.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":478436,"byte_end":478483,"line_start":167,"line_end":167,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2742},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":478730,"byte_end":478732,"line_start":173,"line_end":173,"column_start":8,"column_end":10},"name":"id","qualname":"::widget::widget::Widget::id","value":"pub fn id(&Self) -> Option<WidgetId>","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":" Get the identity of the widget; this is basically only implemented by\n `IdentityWrapper`. Widgets should not implement this on their own.\n","sig":null,"attributes":[{"value":"/ Get the identity of the widget; this is basically only implemented by","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":478574,"byte_end":478647,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ `IdentityWrapper`. Widgets should not implement this on their own.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":478652,"byte_end":478722,"line_start":172,"line_end":172,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2743},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":478927,"byte_end":478936,"line_start":180,"line_end":180,"column_start":8,"column_end":17},"name":"type_name","qualname":"::widget::widget::Widget::type_name","value":"pub fn type_name(&Self) -> &'static str","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":" Get the (verbose) type name of the widget for debugging purposes.\n You should not override this method.\n","sig":null,"attributes":[{"value":"/ Get the (verbose) type name of the widget for debugging purposes.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":478805,"byte_end":478874,"line_start":178,"line_end":178,"column_start":5,"column_end":74}},{"value":"/ You should not override this method.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":478879,"byte_end":478919,"line_start":179,"line_end":179,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2745},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":479410,"byte_end":479414,"line_start":194,"line_end":194,"column_start":12,"column_end":16},"name":"next","qualname":"<WidgetId>::next","value":"pub fn next() -> WidgetId","parent":null,"children":[],"decl_id":null,"docs":" Allocate a new, unique `WidgetId`.","sig":null,"attributes":[{"value":"/ Allocate a new, unique `WidgetId`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":479029,"byte_end":479067,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":479072,"byte_end":479075,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ All widgets are assigned ids automatically; you should only create","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":479080,"byte_end":479150,"line_start":188,"line_end":188,"column_start":5,"column_end":75}},{"value":"/ an explicit id if you need to know it ahead of time, for instance","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":479155,"byte_end":479224,"line_start":189,"line_end":189,"column_start":5,"column_end":74}},{"value":"/ if you want two sibling widgets to know each others' ids.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":479229,"byte_end":479290,"line_start":190,"line_end":190,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":479295,"byte_end":479298,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ You must ensure that a given `WidgetId` is only ever used for one","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":479303,"byte_end":479372,"line_start":192,"line_end":192,"column_start":5,"column_end":74}},{"value":"/ widget at a time.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":479377,"byte_end":479398,"line_start":193,"line_end":193,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2748},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":480031,"byte_end":480039,"line_start":209,"line_end":209,"column_start":18,"column_end":26},"name":"reserved","qualname":"<WidgetId>::reserved","value":"pub const fn reserved(u16) -> WidgetId","parent":null,"children":[],"decl_id":null,"docs":" Create a reserved `WidgetId`, suitable for reuse.","sig":null,"attributes":[{"value":"/ Create a reserved `WidgetId`, suitable for reuse.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":479588,"byte_end":479641,"line_start":200,"line_end":200,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":479646,"byte_end":479649,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring that this ID is in fact assigned","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":479654,"byte_end":479729,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ to a single widget at any time, or your code may become haunted.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":479734,"byte_end":479802,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":479807,"byte_end":479810,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The actual inner representation of the returned `WidgetId` will not","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":479815,"byte_end":479886,"line_start":205,"line_end":205,"column_start":5,"column_end":76}},{"value":"/ be the same as the raw value that is passed in; it will be","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":479891,"byte_end":479953,"line_start":206,"line_end":206,"column_start":5,"column_end":67}},{"value":"/ `u64::max_value() - raw`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":479958,"byte_end":479987,"line_start":207,"line_end":207,"column_start":5,"column_end":34}},{"value":"allow(unsafe_code)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":479992,"byte_end":480013,"line_start":208,"line_end":208,"column_start":5,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":2785},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":482263,"byte_end":482272,"line_start":25,"line_end":25,"column_start":11,"column_end":20},"name":"WidgetExt","qualname":"::widget::widget_ext::WidgetExt","value":"WidgetExt<T: Data>: Widget<T> + Sized + 'static","parent":null,"children":[{"krate":0,"index":2787},{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":2795},{"krate":0,"index":2796},{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2802},{"krate":0,"index":2805},{"krate":0,"index":2807},{"krate":0,"index":2809},{"krate":0,"index":2811},{"krate":0,"index":2813},{"krate":0,"index":2815},{"krate":0,"index":2816},{"krate":0,"index":2818},{"krate":0,"index":2821},{"krate":0,"index":2822},{"krate":0,"index":2823}],"decl_id":null,"docs":" A trait that provides extra methods for combining `Widget`s.\n","sig":null,"attributes":[{"value":"/ A trait that provides extra methods for combining `Widget`s.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":482188,"byte_end":482252,"line_start":24,"line_end":24,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2787},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":482497,"byte_end":482504,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"padding","qualname":"::widget::widget_ext::WidgetExt::padding","value":"pub fn padding<impl Into<Insets>: Into<Insets>>(Self, impl Into<Insets>)\n-> Padding<T>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Wrap this widget in a [`Padding`] widget with the given [`Insets`].","sig":null,"attributes":[{"value":"/ Wrap this widget in a [`Padding`] widget with the given [`Insets`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":482317,"byte_end":482388,"line_start":26,"line_end":26,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":482393,"byte_end":482396,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ [`Padding`]: widget/struct.Padding.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":482401,"byte_end":482444,"line_start":28,"line_end":28,"column_start":5,"column_end":48}},{"value":"/ [`Insets`]: kurbo/struct.Insets.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":482449,"byte_end":482489,"line_start":29,"line_end":29,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2789},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":482729,"byte_end":482735,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"center","qualname":"::widget::widget_ext::WidgetExt::center","value":"pub fn center(Self) -> Align<T>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Wrap this widget in an [`Align`] widget, configured to center it.","sig":null,"attributes":[{"value":"/ Wrap this widget in an [`Align`] widget, configured to center it.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":482600,"byte_end":482669,"line_start":34,"line_end":34,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":482674,"byte_end":482677,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`Align`]: widget/struct.Align.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":482682,"byte_end":482721,"line_start":36,"line_end":36,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":482927,"byte_end":482937,"line_start":44,"line_end":44,"column_start":8,"column_end":18},"name":"align_left","qualname":"::widget::widget_ext::WidgetExt::align_left","value":"pub fn align_left(Self) -> Align<T>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Wrap this widget in an [`Align`] widget, configured to align left.","sig":null,"attributes":[{"value":"/ Wrap this widget in an [`Align`] widget, configured to align left.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":482797,"byte_end":482867,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":482872,"byte_end":482875,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`Align`]: widget/struct.Align.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":482880,"byte_end":482919,"line_start":43,"line_end":43,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2791},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":483126,"byte_end":483137,"line_start":51,"line_end":51,"column_start":8,"column_end":19},"name":"align_right","qualname":"::widget::widget_ext::WidgetExt::align_right","value":"pub fn align_right(Self) -> Align<T>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Wrap this widget in an [`Align`] widget, configured to align right.","sig":null,"attributes":[{"value":"/ Wrap this widget in an [`Align`] widget, configured to align right.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":482995,"byte_end":483066,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":483071,"byte_end":483074,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ [`Align`]: widget/struct.Align.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":483079,"byte_end":483118,"line_start":50,"line_end":50,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2792},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":483332,"byte_end":483346,"line_start":58,"line_end":58,"column_start":8,"column_end":22},"name":"align_vertical","qualname":"::widget::widget_ext::WidgetExt::align_vertical","value":"pub fn align_vertical(Self, UnitPoint) -> Align<T>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Wrap this widget in an [`Align`] widget, configured to align vertically.","sig":null,"attributes":[{"value":"/ Wrap this widget in an [`Align`] widget, configured to align vertically.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":483196,"byte_end":483272,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":483277,"byte_end":483280,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ [`Align`]: widget/struct.Align.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":483285,"byte_end":483324,"line_start":57,"line_end":57,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":483571,"byte_end":483587,"line_start":65,"line_end":65,"column_start":8,"column_end":24},"name":"align_horizontal","qualname":"::widget::widget_ext::WidgetExt::align_horizontal","value":"pub fn align_horizontal(Self, UnitPoint) -> Align<T>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Wrap this widget in an [`Align`] widget, configured to align horizontally.","sig":null,"attributes":[{"value":"/ Wrap this widget in an [`Align`] widget, configured to align horizontally.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":483433,"byte_end":483511,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":483516,"byte_end":483519,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ [`Align`]: widget/struct.Align.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":483524,"byte_end":483563,"line_start":64,"line_end":64,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":483804,"byte_end":483813,"line_start":72,"line_end":72,"column_start":8,"column_end":17},"name":"fix_width","qualname":"::widget::widget_ext::WidgetExt::fix_width","value":"pub fn fix_width(Self, f64) -> SizedBox<T>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Wrap this widget in a [`SizedBox`] with an explicit width.","sig":null,"attributes":[{"value":"/ Wrap this widget in a [`SizedBox`] with an explicit width.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":483676,"byte_end":483738,"line_start":69,"line_end":69,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":483743,"byte_end":483746,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ [`SizedBox`]: widget/struct.SizedBox.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":483751,"byte_end":483796,"line_start":71,"line_end":71,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2795},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":484029,"byte_end":484039,"line_start":79,"line_end":79,"column_start":8,"column_end":18},"name":"fix_height","qualname":"::widget::widget_ext::WidgetExt::fix_height","value":"pub fn fix_height(Self, f64) -> SizedBox<T>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Wrap this widget in a [`SizedBox`] with an explicit width.","sig":null,"attributes":[{"value":"/ Wrap this widget in a [`SizedBox`] with an explicit width.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":483901,"byte_end":483963,"line_start":76,"line_end":76,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":483968,"byte_end":483971,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ [`SizedBox`]: widget/struct.SizedBox.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":483976,"byte_end":484021,"line_start":78,"line_end":78,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2796},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":484269,"byte_end":484277,"line_start":86,"line_end":86,"column_start":8,"column_end":16},"name":"fix_size","qualname":"::widget::widget_ext::WidgetExt::fix_size","value":"pub fn fix_size(Self, f64, f64) -> SizedBox<T>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Wrap this widget in an [`SizedBox`] with an explicit width and height","sig":null,"attributes":[{"value":"/ Wrap this widget in an [`SizedBox`] with an explicit width and height","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":484130,"byte_end":484203,"line_start":83,"line_end":83,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":484208,"byte_end":484211,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`SizedBox`]: widget/struct.SizedBox.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":484216,"byte_end":484261,"line_start":85,"line_end":85,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2797},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":484848,"byte_end":484854,"line_start":99,"line_end":99,"column_start":8,"column_end":14},"name":"expand","qualname":"::widget::widget_ext::WidgetExt::expand","value":"pub fn expand(Self) -> SizedBox<T>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Wrap this widget in a [`SizedBox`] with an infinite width and height.","sig":null,"attributes":[{"value":"/ Wrap this widget in a [`SizedBox`] with an infinite width and height.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":484393,"byte_end":484466,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":484471,"byte_end":484474,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Only call this method if you want your widget to occupy all available","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":484479,"byte_end":484552,"line_start":92,"line_end":92,"column_start":5,"column_end":78}},{"value":"/ space. If you only care about expanding in one of width or height, use","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":484557,"byte_end":484631,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ [`expand_width`] or [`expand_height`] instead.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":484636,"byte_end":484686,"line_start":94,"line_end":94,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":484691,"byte_end":484694,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ [`expand_height`]: #method.expand_height","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":484699,"byte_end":484743,"line_start":96,"line_end":96,"column_start":5,"column_end":49}},{"value":"/ [`expand_width`]: #method.expand_width","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":484748,"byte_end":484790,"line_start":97,"line_end":97,"column_start":5,"column_end":47}},{"value":"/ [`SizedBox`]: widget/struct.SizedBox.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":484795,"byte_end":484840,"line_start":98,"line_end":98,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":485138,"byte_end":485150,"line_start":108,"line_end":108,"column_start":8,"column_end":20},"name":"expand_width","qualname":"::widget::widget_ext::WidgetExt::expand_width","value":"pub fn expand_width(Self) -> SizedBox<T>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Wrap this widget in a [`SizedBox`] with an infinite width.","sig":null,"attributes":[{"value":"/ Wrap this widget in a [`SizedBox`] with an infinite width.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":484926,"byte_end":484988,"line_start":103,"line_end":103,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":484993,"byte_end":484996,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This will force the child to use all available space on the x-axis.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":485001,"byte_end":485072,"line_start":105,"line_end":105,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":485077,"byte_end":485080,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`SizedBox`]: widget/struct.SizedBox.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":485085,"byte_end":485130,"line_start":107,"line_end":107,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2799},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":485440,"byte_end":485453,"line_start":117,"line_end":117,"column_start":8,"column_end":21},"name":"expand_height","qualname":"::widget::widget_ext::WidgetExt::expand_height","value":"pub fn expand_height(Self) -> SizedBox<T>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Wrap this widget in a [`SizedBox`] with an infinite width.","sig":null,"attributes":[{"value":"/ Wrap this widget in a [`SizedBox`] with an infinite width.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":485228,"byte_end":485290,"line_start":112,"line_end":112,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":485295,"byte_end":485298,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This will force the child to use all available space on the y-axis.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":485303,"byte_end":485374,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":485379,"byte_end":485382,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ [`SizedBox`]: widget/struct.SizedBox.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":485387,"byte_end":485432,"line_start":116,"line_end":116,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2800},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":485821,"byte_end":485831,"line_start":127,"line_end":127,"column_start":8,"column_end":18},"name":"background","qualname":"::widget::widget_ext::WidgetExt::background","value":"pub fn background<impl Into<BackgroundBrush<T>>: Into<BackgroundBrush<T>>>(Self,\n                                                                           impl Into<BackgroundBrush<T>>)\n-> Container<T>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Wrap this widget in a [`Container`] with the provided `background`.","sig":null,"attributes":[{"value":"/ Wrap this widget in a [`Container`] with the provided `background`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":485532,"byte_end":485603,"line_start":121,"line_end":121,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":485608,"byte_end":485611,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ See [`Container::background`] for more information.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":485616,"byte_end":485671,"line_start":123,"line_end":123,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":485676,"byte_end":485679,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ [`Container`]: widget/struct.Container.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":485684,"byte_end":485731,"line_start":125,"line_end":125,"column_start":5,"column_end":52}},{"value":"/ [`Container::background`]: widget/struct.Container.html#method.background","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":485736,"byte_end":485813,"line_start":126,"line_end":126,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2802},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":486217,"byte_end":486223,"line_start":138,"line_end":138,"column_start":8,"column_end":14},"name":"border","qualname":"::widget::widget_ext::WidgetExt::border","value":"pub fn border<impl Into<KeyOrValue<Color>>: Into<KeyOrValue<Color>>,\n              impl Into<KeyOrValue<f64>>: Into<KeyOrValue<f64>>>(Self,\n                                                                 impl Into<KeyOrValue<Color>>,\n                                                                 impl Into<KeyOrValue<f64>>)\n-> Container<T>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Wrap this widget in a [`Container`] with the given border.","sig":null,"attributes":[{"value":"/ Wrap this widget in a [`Container`] with the given border.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":485952,"byte_end":486014,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":486019,"byte_end":486022,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Arguments can be either concrete values, or a [`Key`] of the respective","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":486027,"byte_end":486102,"line_start":133,"line_end":133,"column_start":5,"column_end":80}},{"value":"/ type.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":486107,"byte_end":486116,"line_start":134,"line_end":134,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":486121,"byte_end":486124,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ [`Container`]: widget/struct.Container.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":486129,"byte_end":486176,"line_start":136,"line_end":136,"column_start":5,"column_end":52}},{"value":"/ [`Key`]: struct.Key.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":486181,"byte_end":486209,"line_start":137,"line_end":137,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":486621,"byte_end":486630,"line_start":151,"line_end":151,"column_start":8,"column_end":17},"name":"env_scope","qualname":"::widget::widget_ext::WidgetExt::env_scope","value":"pub fn env_scope<impl Fn(&mut Env, &T) + 'static: Fn(&mut Env, &T) -> () +\n                 'static>(Self, impl Fn(&mut Env, &T) + 'static)\n-> EnvScope<T, Self>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Wrap this widget in a [`EnvScope`] widget, modifying the parent\n [`Env`] with the provided closure.","sig":null,"attributes":[{"value":"/ Wrap this widget in a [`EnvScope`] widget, modifying the parent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":486412,"byte_end":486479,"line_start":146,"line_end":146,"column_start":5,"column_end":72}},{"value":"/ [`Env`] with the provided closure.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":486484,"byte_end":486522,"line_start":147,"line_end":147,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":486527,"byte_end":486530,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ [`EnvScope`]: widget/struct.EnvScope.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":486535,"byte_end":486580,"line_start":149,"line_end":149,"column_start":5,"column_end":50}},{"value":"/ [`Env`]: struct.Env.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":486585,"byte_end":486613,"line_start":150,"line_end":150,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2807},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":486861,"byte_end":486871,"line_start":158,"line_end":158,"column_start":8,"column_end":18},"name":"controller","qualname":"::widget::widget_ext::WidgetExt::controller","value":"pub fn controller<C: Controller<T, Self>>(Self, C) -> ControllerHost<Self, C>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Wrap this widget with the provided [`Controller`].","sig":null,"attributes":[{"value":"/ Wrap this widget with the provided [`Controller`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":486738,"byte_end":486792,"line_start":155,"line_end":155,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":486797,"byte_end":486800,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ [`Controller`]: widget/trait.Controller.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":486805,"byte_end":486853,"line_start":157,"line_end":157,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2809},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":487466,"byte_end":487474,"line_start":171,"line_end":171,"column_start":8,"column_end":16},"name":"on_click","qualname":"::widget::widget_ext::WidgetExt::on_click","value":"pub fn on_click<impl Fn(&mut EventCtx, &mut T, &Env) + 'static: Fn(&mut EventCtx,\n                                                                   &mut T,\n                                                                   &Env) ->\n                () +\n                'static>(Self, impl Fn(&mut EventCtx, &mut T, &Env) + 'static)\n-> ControllerHost<Self, Click<T>>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Control the events of this widget with a [`Click`] widget. The closure\n provided will be called when the widget is clicked.","sig":null,"attributes":[{"value":"/ Control the events of this widget with a [`Click`] widget. The closure","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":487003,"byte_end":487077,"line_start":162,"line_end":162,"column_start":5,"column_end":79}},{"value":"/ provided will be called when the widget is clicked.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":487082,"byte_end":487137,"line_start":163,"line_end":163,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":487142,"byte_end":487145,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The child widget will also be updated on [`LifeCycle::HotChanged`] and","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":487150,"byte_end":487224,"line_start":165,"line_end":165,"column_start":5,"column_end":79}},{"value":"/ mouse down, which can be useful for painting based on `ctx.is_active()`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":487229,"byte_end":487304,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ and `ctx.is_hot()`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":487309,"byte_end":487332,"line_start":167,"line_end":167,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":487337,"byte_end":487340,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [`Click`]: widget/struct.Click.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":487345,"byte_end":487384,"line_start":169,"line_end":169,"column_start":5,"column_end":44}},{"value":"/ [`LifeCycle::HotChanged`]: enum.LifeCycle.html#variant.HotChanged","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":487389,"byte_end":487458,"line_start":170,"line_end":170,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2811},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":487786,"byte_end":487804,"line_start":181,"line_end":181,"column_start":8,"column_end":26},"name":"debug_paint_layout","qualname":"::widget::widget_ext::WidgetExt::debug_paint_layout","value":"pub fn debug_paint_layout(Self) -> EnvScope<T, Self>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Draw the [`layout`] `Rect`s of  this widget and its children.","sig":null,"attributes":[{"value":"/ Draw the [`layout`] `Rect`s of  this widget and its children.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":487651,"byte_end":487716,"line_start":178,"line_end":178,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":487721,"byte_end":487724,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ [`layout`]: trait.Widget.html#tymethod.layout","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":487729,"byte_end":487778,"line_start":180,"line_end":180,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2813},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":488257,"byte_end":488272,"line_start":192,"line_end":192,"column_start":8,"column_end":23},"name":"debug_widget_id","qualname":"::widget::widget_ext::WidgetExt::debug_widget_id","value":"pub fn debug_widget_id(Self) -> EnvScope<T, Self>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Display the `WidgetId`s for this widget and its children, when hot.","sig":null,"attributes":[{"value":"/ Display the `WidgetId`s for this widget and its children, when hot.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":487915,"byte_end":487986,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":487991,"byte_end":487994,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ When this is `true`, widgets that are `hot` (are under the mouse cursor)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":487999,"byte_end":488075,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ will display their ids in their bottom right corner.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":488080,"byte_end":488136,"line_start":188,"line_end":188,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":488141,"byte_end":488144,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ These ids may overlap; in this case the id of a child will obscure","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":488149,"byte_end":488219,"line_start":190,"line_end":190,"column_start":5,"column_end":75}},{"value":"/ the id of its parent.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":488224,"byte_end":488249,"line_start":191,"line_end":191,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2815},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":488502,"byte_end":488520,"line_start":198,"line_end":198,"column_start":8,"column_end":26},"name":"debug_invalidation","qualname":"::widget::widget_ext::WidgetExt::debug_invalidation","value":"pub fn debug_invalidation(Self) -> DebugInvalidation<T, Self>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Draw a color-changing rectangle over this widget, allowing you to see the\n invalidation regions.\n","sig":null,"attributes":[{"value":"/ Draw a color-changing rectangle over this widget, allowing you to see the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":488387,"byte_end":488464,"line_start":196,"line_end":196,"column_start":5,"column_end":82}},{"value":"/ invalidation regions.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":488469,"byte_end":488494,"line_start":197,"line_end":197,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2816},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":488939,"byte_end":488951,"line_start":208,"line_end":208,"column_start":8,"column_end":20},"name":"debug_widget","qualname":"::widget::widget_ext::WidgetExt::debug_widget","value":"pub fn debug_widget(Self) -> EnvScope<T, Self>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Set the [`DEBUG_WIDGET`] env variable for this widget (and its descendants).","sig":null,"attributes":[{"value":"/ Set the [`DEBUG_WIDGET`] env variable for this widget (and its descendants).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":488607,"byte_end":488687,"line_start":202,"line_end":202,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":488692,"byte_end":488695,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This does nothing by default, but you can use this variable while","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":488700,"byte_end":488769,"line_start":204,"line_end":204,"column_start":5,"column_end":74}},{"value":"/ debugging to only print messages from particular instances of a widget.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":488774,"byte_end":488849,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":488854,"byte_end":488857,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ [`DEBUG_WIDGET`]: struct.Env.html#associatedconstant.DEBUG_WIDGET","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":488862,"byte_end":488931,"line_start":207,"line_end":207,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2818},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":489236,"byte_end":489240,"line_start":217,"line_end":217,"column_start":8,"column_end":12},"name":"lens","qualname":"::widget::widget_ext::WidgetExt::lens","value":"pub fn lens<S: Data, L: Lens<S, T>>(Self, L) -> LensWrap<T, L, Self>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Wrap this widget in a [`LensWrap`] widget for the provided [`Lens`].","sig":null,"attributes":[{"value":"/ Wrap this widget in a [`LensWrap`] widget for the provided [`Lens`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":489063,"byte_end":489135,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":489140,"byte_end":489143,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":489148,"byte_end":489151,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ [`LensWrap`]: struct.LensWrap.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":489156,"byte_end":489194,"line_start":215,"line_end":215,"column_start":5,"column_end":43}},{"value":"/ [`Lens`]: trait.Lens.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":489199,"byte_end":489228,"line_start":216,"line_end":216,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":489398,"byte_end":489403,"line_start":222,"line_end":222,"column_start":8,"column_end":13},"name":"parse","qualname":"::widget::widget_ext::WidgetExt::parse","value":"pub fn parse(Self) -> Parse<Self> where Self: Widget<String>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Parse a `Widget<String>`'s contents\n","sig":null,"attributes":[{"value":"/ Parse a `Widget<String>`'s contents","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":489351,"byte_end":489390,"line_start":221,"line_end":221,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2822},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":489874,"byte_end":489881,"line_start":238,"line_end":238,"column_start":8,"column_end":15},"name":"with_id","qualname":"::widget::widget_ext::WidgetExt::with_id","value":"pub fn with_id(Self, WidgetId) -> IdentityWrapper<Self>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Assign the widget a specific [`WidgetId`].","sig":null,"attributes":[{"value":"/ Assign the widget a specific [`WidgetId`].","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":489507,"byte_end":489553,"line_start":229,"line_end":229,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":489558,"byte_end":489561,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ You must ensure that a given [`WidgetId`] is only ever used for","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":489566,"byte_end":489633,"line_start":231,"line_end":231,"column_start":5,"column_end":72}},{"value":"/ a single widget at a time.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":489638,"byte_end":489668,"line_start":232,"line_end":232,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":489673,"byte_end":489676,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ An id _may_ be reused over time; for instance if you replace one","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":489681,"byte_end":489749,"line_start":234,"line_end":234,"column_start":5,"column_end":73}},{"value":"/ widget with another, you may reuse the first widget's id.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":489754,"byte_end":489815,"line_start":235,"line_end":235,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":489820,"byte_end":489823,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ [`WidgetId`]: struct.WidgetId.html","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":489828,"byte_end":489866,"line_start":237,"line_end":237,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2823},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":490020,"byte_end":490025,"line_start":243,"line_end":243,"column_start":8,"column_end":13},"name":"boxed","qualname":"::widget::widget_ext::WidgetExt::boxed","value":"pub fn boxed(Self) -> Box<Widget<T>>","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":" Wrap this widget in a `Box`.\n","sig":null,"attributes":[{"value":"/ Wrap this widget in a `Box`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":489980,"byte_end":490012,"line_start":242,"line_end":242,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2829},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":490347,"byte_end":490356,"line_start":255,"line_end":255,"column_start":12,"column_end":21},"name":"fix_width","qualname":"<SizedBox<T>>::fix_width","value":"pub fn fix_width(Self, f64) -> SizedBox<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2830},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":490436,"byte_end":490446,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"name":"fix_height","qualname":"<SizedBox<T>>::fix_height","value":"pub fn fix_height(Self, f64) -> SizedBox<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2834},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":490668,"byte_end":490677,"line_start":267,"line_end":267,"column_start":12,"column_end":21},"name":"env_scope","qualname":"<EnvScope<T, W>>::env_scope","value":"pub fn env_scope<impl Fn(&mut Env, &T) + 'static: Fn(&mut Env, &T) -> () +\n                 'static>(Self, impl Fn(&mut Env, &T) + 'static)\n-> EnvScope<T, W>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2837},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":490998,"byte_end":491016,"line_start":279,"line_end":279,"column_start":12,"column_end":30},"name":"debug_paint_layout","qualname":"<EnvScope<T, W>>::debug_paint_layout","value":"pub fn debug_paint_layout(Self) -> EnvScope<T, W>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2884},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":262238,"byte_end":262245,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"name":"prelude","qualname":"::widget::prelude","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","parent":null,"children":[{"krate":0,"index":2885},{"krate":0,"index":2886},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":2891},{"krate":0,"index":2892},{"krate":0,"index":2893},{"krate":0,"index":2894},{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2897},{"krate":0,"index":2898}],"decl_id":null,"docs":" The types required to implement a `Widget`.","sig":null,"attributes":[{"value":"/ The types required to implement a `Widget`.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261464,"byte_end":261511,"line_start":93,"line_end":93,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261512,"byte_end":261515,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # Structs","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261516,"byte_end":261529,"line_start":95,"line_end":95,"column_start":1,"column_end":14}},{"value":"/ [`BoxConstraints`](../../struct.BoxConstraints.html)\\","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261530,"byte_end":261587,"line_start":96,"line_end":96,"column_start":1,"column_end":58}},{"value":"/ [`Env`](../../struct.Env.html)\\","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261588,"byte_end":261623,"line_start":97,"line_end":97,"column_start":1,"column_end":36}},{"value":"/ [`EventCtx`](../../struct.EventCtx.html)\\","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261624,"byte_end":261669,"line_start":98,"line_end":98,"column_start":1,"column_end":46}},{"value":"/ [`LayoutCtx`](../../struct.LayoutCtx.html)\\","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261670,"byte_end":261717,"line_start":99,"line_end":99,"column_start":1,"column_end":48}},{"value":"/ [`LifeCycleCtx`](../../struct.LifeCycleCtx.html)\\","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261718,"byte_end":261771,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/ [`PaintCtx`](../../struct.PaintCtx.html)\\","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261772,"byte_end":261817,"line_start":101,"line_end":101,"column_start":1,"column_end":46}},{"value":"/ [`Size`](../../struct.Size.html)\\","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261818,"byte_end":261855,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/ [`UpdateCtx`](../../struct.UpdateCtx.html)\\","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261856,"byte_end":261903,"line_start":103,"line_end":103,"column_start":1,"column_end":48}},{"value":"/ [`WidgetId`](../../struct.WidgetId.html)\\","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261904,"byte_end":261949,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261950,"byte_end":261953,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ # Enums","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261954,"byte_end":261965,"line_start":106,"line_end":106,"column_start":1,"column_end":12}},{"value":"/ [`Event`](../../enum.Event.html)\\","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":261966,"byte_end":262003,"line_start":107,"line_end":107,"column_start":1,"column_end":38}},{"value":"/ [`LifeCycle`](../../enum.LifeCycle.html)\\","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":262004,"byte_end":262049,"line_start":108,"line_end":108,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":262050,"byte_end":262053,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ # Traits","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":262054,"byte_end":262066,"line_start":110,"line_end":110,"column_start":1,"column_end":13}},{"value":"/ [`RenderContext`](../../trait.RenderContext.html)\\","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":262067,"byte_end":262121,"line_start":111,"line_end":111,"column_start":1,"column_end":55}},{"value":"/ [`Widget`](../../trait.Widget.html)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\mod.rs","byte_start":262122,"byte_end":262161,"line_start":112,"line_end":112,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2941},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":493955,"byte_end":493967,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"DruidHandler","qualname":"::win_handler::DruidHandler","value":"DruidHandler {  }","parent":null,"children":[{"krate":0,"index":2943},{"krate":0,"index":2944}],"decl_id":null,"docs":" The struct implements the druid-shell `WinHandler` trait.","sig":null,"attributes":[{"value":"/ The struct implements the druid-shell `WinHandler` trait.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":493733,"byte_end":493794,"line_start":43,"line_end":43,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":493795,"byte_end":493798,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ One `DruidHandler` exists per window.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":493799,"byte_end":493840,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":493841,"byte_end":493844,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This is something of an internal detail and possibly we don't want to surface","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":493845,"byte_end":493926,"line_start":47,"line_end":47,"column_start":1,"column_end":82}},{"value":"/ it publicly.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":493927,"byte_end":493943,"line_start":48,"line_end":48,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":4186},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\window.rs","byte_start":519297,"byte_end":519305,"line_start":40,"line_end":40,"column_start":12,"column_end":20},"name":"WindowId","qualname":"::window::WindowId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unique identifier for a window.\n","sig":null,"attributes":[{"value":"/ A unique identifier for a window.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\window.rs","byte_start":519180,"byte_end":519217,"line_start":38,"line_end":38,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3113},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\window.rs","byte_start":519369,"byte_end":519375,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"Window","qualname":"::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":3115},{"krate":0,"index":3116},{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":3122},{"krate":0,"index":3123},{"krate":0,"index":3124},{"krate":0,"index":3125}],"decl_id":null,"docs":" Per-window state not owned by user code.\n","sig":null,"attributes":[{"value":"/ Per-window state not owned by user code.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\window.rs","byte_start":519313,"byte_end":519357,"line_start":42,"line_end":42,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3161},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\window.rs","byte_start":533458,"byte_end":533462,"line_start":444,"line_end":444,"column_start":12,"column_end":16},"name":"next","qualname":"<WindowId>::next","value":"pub fn next() -> WindowId","parent":null,"children":[],"decl_id":null,"docs":" Allocate a new, unique window id.\n","sig":null,"attributes":[{"value":"/ Allocate a new, unique window id.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\window.rs","byte_start":533409,"byte_end":533446,"line_start":443,"line_end":443,"column_start":5,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":8339,"byte_end":8350,"line_start":57,"line_end":57,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":11187,"byte_end":11197,"line_start":147,"line_end":147,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":16690,"byte_end":16701,"line_start":34,"line_end":34,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\bloom.rs","byte_start":22572,"byte_end":22577,"line_start":39,"line_end":39,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\bloom.rs","byte_start":25065,"byte_end":25070,"line_start":114,"line_end":114,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\bloom.rs","byte_start":25253,"byte_end":25258,"line_start":120,"line_end":120,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27908,"byte_end":27922,"line_start":43,"line_end":43,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":40569,"byte_end":40577,"line_start":241,"line_end":241,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":40683,"byte_end":40691,"line_start":246,"line_end":246,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":41007,"byte_end":41015,"line_start":258,"line_end":258,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":41375,"byte_end":41382,"line_start":270,"line_end":270,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":44174,"byte_end":44183,"line_start":349,"line_end":349,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":44435,"byte_end":44442,"line_start":360,"line_end":360,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":44631,"byte_end":44639,"line_start":369,"line_end":369,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":44967,"byte_end":44975,"line_start":377,"line_end":377,"column_start":18,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":45000,"byte_end":45008,"line_start":378,"line_end":378,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":45091,"byte_end":45097,"line_start":384,"line_end":384,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":45198,"byte_end":45204,"line_start":390,"line_end":390,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":45311,"byte_end":45319,"line_start":396,"line_end":396,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":45434,"byte_end":45442,"line_start":402,"line_end":402,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":58667,"byte_end":58675,"line_start":343,"line_end":343,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":64235,"byte_end":64247,"line_start":487,"line_end":487,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":65135,"byte_end":65144,"line_start":511,"line_end":511,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":65840,"byte_end":65848,"line_start":528,"line_end":528,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":68857,"byte_end":68869,"line_start":620,"line_end":620,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":70276,"byte_end":70282,"line_start":664,"line_end":664,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":71609,"byte_end":71615,"line_start":707,"line_end":707,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":71741,"byte_end":71747,"line_start":713,"line_end":713,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":71858,"byte_end":71864,"line_start":719,"line_end":719,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":72045,"byte_end":72053,"line_start":726,"line_end":726,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":72191,"byte_end":72199,"line_start":734,"line_end":734,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":77300,"byte_end":77309,"line_start":132,"line_end":132,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":85149,"byte_end":85158,"line_start":359,"line_end":359,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":105303,"byte_end":105312,"line_start":872,"line_end":872,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":105602,"byte_end":105613,"line_start":882,"line_end":882,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":114740,"byte_end":114743,"line_start":162,"line_end":162,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":114869,"byte_end":114871,"line_start":168,"line_end":168,"column_start":36,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":114984,"byte_end":114990,"line_start":174,"line_end":174,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":115223,"byte_end":115229,"line_start":184,"line_end":184,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":116945,"byte_end":116950,"line_start":248,"line_end":248,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":117048,"byte_end":117053,"line_start":254,"line_end":254,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":117184,"byte_end":117188,"line_start":260,"line_end":260,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":117319,"byte_end":117323,"line_start":266,"line_end":266,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":117472,"byte_end":117478,"line_start":272,"line_end":272,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":117686,"byte_end":117692,"line_start":280,"line_end":280,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":117917,"byte_end":117921,"line_start":289,"line_end":289,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":118146,"byte_end":118157,"line_start":298,"line_end":298,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":118311,"byte_end":118314,"line_start":304,"line_end":304,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":118644,"byte_end":118650,"line_start":314,"line_end":314,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":119147,"byte_end":119154,"line_start":328,"line_end":328,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":119525,"byte_end":119532,"line_start":340,"line_end":340,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":119823,"byte_end":119829,"line_start":352,"line_end":352,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":119980,"byte_end":119988,"line_start":358,"line_end":358,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":120213,"byte_end":120217,"line_start":367,"line_end":367,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":120352,"byte_end":120362,"line_start":373,"line_end":373,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":120482,"byte_end":120489,"line_start":379,"line_end":379,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":120650,"byte_end":120655,"line_start":385,"line_end":385,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":127777,"byte_end":127780,"line_start":149,"line_end":149,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":640},{"krate":0,"index":645},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":655},{"krate":0,"index":659},{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133202,"byte_end":133205,"line_start":300,"line_end":300,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133725,"byte_end":133728,"line_start":321,"line_end":321,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":134197,"byte_end":134202,"line_start":337,"line_end":337,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":135057,"byte_end":135062,"line_start":366,"line_end":366,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":135652,"byte_end":135657,"line_start":381,"line_end":381,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":136422,"byte_end":136425,"line_start":400,"line_end":400,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":136572,"byte_end":136579,"line_start":406,"line_end":406,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":136849,"byte_end":136852,"line_start":416,"line_end":416,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":138215,"byte_end":138221,"line_start":456,"line_end":456,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":138305,"byte_end":138319,"line_start":462,"line_end":462,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":138469,"byte_end":138483,"line_start":467,"line_end":467,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":138730,"byte_end":138744,"line_start":477,"line_end":477,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":140436,"byte_end":140446,"line_start":531,"line_end":531,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":140729,"byte_end":140739,"line_start":540,"line_end":540,"column_start":67,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":140882,"byte_end":140892,"line_start":546,"line_end":546,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":151996,"byte_end":152001,"line_start":257,"line_end":257,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":157976,"byte_end":157988,"line_start":56,"line_end":56,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":158775,"byte_end":158787,"line_start":86,"line_end":86,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":160149,"byte_end":160162,"line_start":123,"line_end":123,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":160325,"byte_end":160338,"line_start":129,"line_end":129,"column_start":28,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":167804,"byte_end":167805,"line_start":166,"line_end":166,"column_start":61,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":169003,"byte_end":169011,"line_start":197,"line_end":197,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":169407,"byte_end":169415,"line_start":211,"line_end":211,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":819},{"krate":0,"index":821},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":171086,"byte_end":171091,"line_start":270,"line_end":270,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":171395,"byte_end":171400,"line_start":281,"line_end":281,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":172503,"byte_end":172507,"line_start":325,"line_end":325,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":172854,"byte_end":172858,"line_start":342,"line_end":342,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":173275,"byte_end":173279,"line_start":359,"line_end":359,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":173612,"byte_end":173615,"line_start":376,"line_end":376,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":173902,"byte_end":173905,"line_start":389,"line_end":389,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":174450,"byte_end":174455,"line_start":412,"line_end":412,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":174836,"byte_end":174841,"line_start":430,"line_end":430,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":175049,"byte_end":175054,"line_start":439,"line_end":439,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":175641,"byte_end":175643,"line_start":458,"line_end":458,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":912},{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":176065,"byte_end":176070,"line_start":476,"line_end":476,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":176342,"byte_end":176347,"line_start":490,"line_end":490,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":180620,"byte_end":180631,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":181329,"byte_end":181344,"line_start":125,"line_end":125,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":995},{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":183481,"byte_end":183492,"line_start":182,"line_end":182,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":999},{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":187482,"byte_end":187497,"line_start":293,"line_end":293,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":1017},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":190012,"byte_end":190021,"line_start":363,"line_end":363,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":190304,"byte_end":190316,"line_start":372,"line_end":372,"column_start":54,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":197938,"byte_end":197946,"line_start":171,"line_end":171,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1056},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":199742,"byte_end":199750,"line_start":233,"line_end":233,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1073},{"krate":0,"index":1075},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":205003,"byte_end":205014,"line_start":390,"line_end":390,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":205134,"byte_end":205144,"line_start":396,"line_end":396,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":205690,"byte_end":205698,"line_start":416,"line_end":416,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":206710,"byte_end":206719,"line_start":442,"line_end":442,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":206841,"byte_end":206850,"line_start":448,"line_end":448,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":223455,"byte_end":223465,"line_start":74,"line_end":74,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":227107,"byte_end":227113,"line_start":60,"line_end":60,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":230106,"byte_end":230118,"line_start":166,"line_end":166,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":236981,"byte_end":236990,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249664,"byte_end":249678,"line_start":59,"line_end":59,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1309}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249752,"byte_end":249766,"line_start":65,"line_end":65,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\util.rs","byte_start":258378,"byte_end":258385,"line_start":31,"line_end":31,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1365}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":263518,"byte_end":263523,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1399},{"krate":0,"index":1401},{"krate":0,"index":1403}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":265208,"byte_end":265213,"line_start":84,"line_end":84,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268380,"byte_end":268386,"line_start":33,"line_end":33,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":270160,"byte_end":270166,"line_start":89,"line_end":89,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\checkbox.rs","byte_start":274292,"byte_end":274300,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\checkbox.rs","byte_start":274541,"byte_end":274549,"line_start":40,"line_end":40,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":279385,"byte_end":279390,"line_start":43,"line_end":43,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":279653,"byte_end":279658,"line_start":52,"line_end":52,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1513},{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":282006,"byte_end":282015,"line_start":36,"line_end":36,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1520}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":282086,"byte_end":282095,"line_start":42,"line_end":42,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":284710,"byte_end":284719,"line_start":38,"line_end":38,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1560},{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":286563,"byte_end":286572,"line_start":100,"line_end":100,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":292141,"byte_end":292155,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":292382,"byte_end":292396,"line_start":102,"line_end":102,"column_start":58,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\either.rs","byte_start":294400,"byte_end":294406,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1637}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\either.rs","byte_start":295078,"byte_end":295084,"line_start":50,"line_end":50,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298215,"byte_end":298223,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1671}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":299149,"byte_end":299157,"line_start":61,"line_end":61,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309800,"byte_end":309810,"line_start":251,"line_end":251,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":310561,"byte_end":310572,"line_start":272,"line_end":272,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":310771,"byte_end":310775,"line_start":281,"line_end":281,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":311899,"byte_end":311903,"line_start":318,"line_end":318,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1738},{"krate":0,"index":1741},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1749},{"krate":0,"index":1752},{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":318900,"byte_end":318904,"line_start":517,"line_end":517,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":324487,"byte_end":324505,"line_start":655,"line_end":655,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":325072,"byte_end":325079,"line_start":677,"line_end":677,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1773},{"krate":0,"index":1774}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":326377,"byte_end":326384,"line_start":713,"line_end":713,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1776},{"krate":0,"index":1777}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":328224,"byte_end":328230,"line_start":763,"line_end":763,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":328729,"byte_end":328739,"line_start":774,"line_end":774,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\identity_wrapper.rs","byte_start":333314,"byte_end":333329,"line_start":29,"line_end":29,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1808}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\identity_wrapper.rs","byte_start":333528,"byte_end":333543,"line_start":36,"line_end":36,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1817}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\invalidation.rs","byte_start":335229,"byte_end":335246,"line_start":26,"line_end":26,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1830}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\invalidation.rs","byte_start":335508,"byte_end":335525,"line_start":37,"line_end":37,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1839}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338752,"byte_end":338757,"line_start":65,"line_end":65,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1894},{"krate":0,"index":1896},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1901},{"krate":0,"index":1903},{"krate":0,"index":1905},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1910},{"krate":0,"index":1912},{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":343551,"byte_end":343558,"line_start":212,"line_end":212,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1918}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":343772,"byte_end":343781,"line_start":221,"line_end":221,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1921},{"krate":0,"index":1924},{"krate":0,"index":1925}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":344888,"byte_end":344893,"line_start":253,"line_end":253,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1932}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":346289,"byte_end":346298,"line_start":292,"line_end":292,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1935}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":346412,"byte_end":346421,"line_start":298,"line_end":298,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1938}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":346559,"byte_end":346568,"line_start":304,"line_end":304,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1941}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":346729,"byte_end":346738,"line_start":310,"line_end":310,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1945}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\list.rs","byte_start":348033,"byte_end":348037,"line_start":36,"line_end":36,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1972},{"krate":0,"index":1976}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\list.rs","byte_start":350719,"byte_end":350722,"line_start":125,"line_end":125,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1988},{"krate":0,"index":1990},{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\list.rs","byte_start":352650,"byte_end":352654,"line_start":196,"line_end":196,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2004},{"krate":0,"index":2006},{"krate":0,"index":2008},{"krate":0,"index":2010},{"krate":0,"index":2012}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":356672,"byte_end":356679,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2042}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":358154,"byte_end":358161,"line_start":75,"line_end":75,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2051}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362997,"byte_end":363004,"line_start":100,"line_end":100,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":363263,"byte_end":363278,"line_start":109,"line_end":109,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2104}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":363955,"byte_end":363962,"line_start":126,"line_end":126,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":364530,"byte_end":364545,"line_start":142,"line_end":142,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2114}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":364673,"byte_end":364688,"line_start":148,"line_end":148,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2117}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":364828,"byte_end":364843,"line_start":154,"line_end":154,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2120}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":364985,"byte_end":365000,"line_start":160,"line_end":160,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2123}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":365141,"byte_end":365156,"line_start":166,"line_end":166,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2126}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":365292,"byte_end":365307,"line_start":172,"line_end":172,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2129}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":365442,"byte_end":365457,"line_start":178,"line_end":178,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2132}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\parse.rs","byte_start":366220,"byte_end":366225,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2157}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\parse.rs","byte_start":366430,"byte_end":366435,"line_start":26,"line_end":26,"column_start":76,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\progress_bar.rs","byte_start":368833,"byte_end":368844,"line_start":30,"line_end":30,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2188}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\progress_bar.rs","byte_start":368971,"byte_end":368982,"line_start":37,"line_end":37,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\radio.rs","byte_start":372331,"byte_end":372341,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2226}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\radio.rs","byte_start":372995,"byte_end":373000,"line_start":49,"line_end":49,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2237}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\radio.rs","byte_start":373314,"byte_end":373319,"line_start":59,"line_end":59,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":377042,"byte_end":377057,"line_start":36,"line_end":36,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2274}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":377691,"byte_end":377706,"line_start":56,"line_end":56,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":378341,"byte_end":378356,"line_start":82,"line_end":82,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2299}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":378576,"byte_end":378591,"line_start":93,"line_end":93,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2301}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":379250,"byte_end":379256,"line_start":117,"line_end":117,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2319},{"krate":0,"index":2320},{"krate":0,"index":2322},{"krate":0,"index":2323},{"krate":0,"index":2324},{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":386332,"byte_end":386338,"line_start":307,"line_end":307,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2331},{"krate":0,"index":2335},{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":395682,"byte_end":395690,"line_start":40,"line_end":40,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2366},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2372},{"krate":0,"index":2373},{"krate":0,"index":2374}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":398401,"byte_end":398409,"line_start":132,"line_end":132,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\slider.rs","byte_start":401884,"byte_end":401890,"line_start":37,"line_end":37,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2407},{"krate":0,"index":2408}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\slider.rs","byte_start":402415,"byte_end":402421,"line_start":59,"line_end":59,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2412}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\slider.rs","byte_start":403058,"byte_end":403064,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2414},{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2418}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":408763,"byte_end":408770,"line_start":34,"line_end":34,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2437}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":409480,"byte_end":409487,"line_start":60,"line_end":60,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":409648,"byte_end":409655,"line_start":69,"line_end":69,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":413155,"byte_end":413160,"line_start":38,"line_end":38,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2486},{"krate":0,"index":2489},{"krate":0,"index":2492},{"krate":0,"index":2495},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":422087,"byte_end":422092,"line_start":268,"line_end":268,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2516}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":430930,"byte_end":430937,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2554},{"krate":0,"index":2555},{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2558},{"krate":0,"index":2559}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":433008,"byte_end":433015,"line_start":115,"line_end":115,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2561}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":433095,"byte_end":433102,"line_start":121,"line_end":121,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2567}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\switch.rs","byte_start":438535,"byte_end":438541,"line_start":39,"line_end":39,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2600}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\switch.rs","byte_start":441011,"byte_end":441017,"line_start":116,"line_end":116,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2606}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\textbox.rs","byte_start":449082,"byte_end":449089,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2659},{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2675}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\textbox.rs","byte_start":456106,"byte_end":456113,"line_start":234,"line_end":234,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\textbox.rs","byte_start":464885,"byte_end":464892,"line_start":470,"line_end":470,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2684}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\view_switcher.rs","byte_start":468208,"byte_end":468220,"line_start":35,"line_end":35,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\view_switcher.rs","byte_start":469111,"byte_end":469123,"line_start":58,"line_end":58,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":479014,"byte_end":479022,"line_start":185,"line_end":185,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2745},{"krate":0,"index":2748},{"krate":0,"index":2749}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":480340,"byte_end":480343,"line_start":220,"line_end":220,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2758}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":490143,"byte_end":490144,"line_start":248,"line_end":248,"column_start":56,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":490322,"byte_end":490330,"line_start":254,"line_end":254,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2829},{"krate":0,"index":2830}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":490640,"byte_end":490648,"line_start":266,"line_end":266,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2834},{"krate":0,"index":2837}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":495063,"byte_end":495070,"line_start":91,"line_end":91,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2964},{"krate":0,"index":2965},{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2969},{"krate":0,"index":2970},{"krate":0,"index":2971}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":496094,"byte_end":496104,"line_start":126,"line_end":126,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2974}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":496210,"byte_end":496218,"line_start":132,"line_end":132,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2977},{"krate":0,"index":2978}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":496835,"byte_end":496840,"line_start":159,"line_end":159,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2981},{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2988},{"krate":0,"index":2990},{"krate":0,"index":2992},{"krate":0,"index":2994},{"krate":0,"index":2997},{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3010}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":506775,"byte_end":506787,"line_start":431,"line_end":431,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3013}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":507088,"byte_end":507096,"line_start":442,"line_end":442,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3027},{"krate":0,"index":3028},{"krate":0,"index":3030},{"krate":0,"index":3033},{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3043}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":514928,"byte_end":514938,"line_start":644,"line_end":644,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3046}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":515070,"byte_end":515082,"line_start":650,"line_end":650,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3049},{"krate":0,"index":3050},{"krate":0,"index":3051},{"krate":0,"index":3052},{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3055},{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":3058},{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3066}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":517688,"byte_end":517695,"line_start":739,"line_end":739,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3069}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\window.rs","byte_start":519857,"byte_end":519863,"line_start":58,"line_end":58,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3128}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\window.rs","byte_start":520340,"byte_end":520346,"line_start":76,"line_end":76,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3131},{"krate":0,"index":3132},{"krate":0,"index":3133},{"krate":0,"index":3134},{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3140},{"krate":0,"index":3141},{"krate":0,"index":3142},{"krate":0,"index":3143},{"krate":0,"index":3144},{"krate":0,"index":3149},{"krate":0,"index":3150},{"krate":0,"index":3154},{"krate":0,"index":3155}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\window.rs","byte_start":533394,"byte_end":533402,"line_start":442,"line_end":442,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3161}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":4621,"byte_end":4625,"line_start":132,"line_end":132,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":756}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":4734,"byte_end":4738,"line_start":139,"line_end":139,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1200}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\mod.rs","byte_start":224664,"byte_end":224673,"line_start":20,"line_end":20,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1259}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\mod.rs","byte_start":224720,"byte_end":224728,"line_start":23,"line_end":23,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1277}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\mod.rs","byte_start":224785,"byte_end":224794,"line_start":26,"line_end":26,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1286}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":4748,"byte_end":4753,"line_start":140,"line_end":140,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1317}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lib.rs","byte_start":4773,"byte_end":4779,"line_start":142,"line_end":142,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1366}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":8339,"byte_end":8350,"line_start":57,"line_end":57,"column_start":15,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":36},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app.rs","byte_start":11187,"byte_end":11197,"line_start":147,"line_end":147,"column_start":15,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":42},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\app_delegate.rs","byte_start":16690,"byte_end":16701,"line_start":34,"line_end":34,"column_start":10,"column_end":21},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":97},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\bloom.rs","byte_start":22572,"byte_end":22577,"line_start":39,"line_end":39,"column_start":24,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\bloom.rs","byte_start":25065,"byte_end":25070,"line_start":114,"line_end":114,"column_start":37,"column_end":42},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3253},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\bloom.rs","byte_start":25253,"byte_end":25258,"line_start":120,"line_end":120,"column_start":29,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3253},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\box_constraints.rs","byte_start":27908,"byte_end":27922,"line_start":43,"line_end":43,"column_start":6,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":40569,"byte_end":40577,"line_start":241,"line_end":241,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":40683,"byte_end":40691,"line_start":246,"line_end":246,"column_start":9,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":41007,"byte_end":41015,"line_start":258,"line_end":258,"column_start":14,"column_end":22},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":41375,"byte_end":41382,"line_start":270,"line_end":270,"column_start":6,"column_end":13},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":44174,"byte_end":44183,"line_start":349,"line_end":349,"column_start":14,"column_end":23},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":44435,"byte_end":44442,"line_start":360,"line_end":360,"column_start":25,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3290},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":44631,"byte_end":44639,"line_start":369,"line_end":369,"column_start":31,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3271},"to":{"krate":2,"index":6327}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":44967,"byte_end":44975,"line_start":377,"line_end":377,"column_start":18,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3271},"to":{"krate":2,"index":1981}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":45000,"byte_end":45008,"line_start":378,"line_end":378,"column_start":19,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3271},"to":{"krate":2,"index":1669}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":45091,"byte_end":45097,"line_start":384,"line_end":384,"column_start":25,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3297},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":45198,"byte_end":45204,"line_start":390,"line_end":390,"column_start":25,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3297},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":45311,"byte_end":45319,"line_start":396,"line_end":396,"column_start":31,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":4186},"to":{"krate":2,"index":1886}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\command.rs","byte_start":45434,"byte_end":45442,"line_start":402,"line_end":402,"column_start":31,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4162},"to":{"krate":2,"index":1886}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":58667,"byte_end":58675,"line_start":343,"line_end":343,"column_start":6,"column_end":14},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":64235,"byte_end":64247,"line_start":487,"line_end":487,"column_start":6,"column_end":18},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":65135,"byte_end":65144,"line_start":511,"line_end":511,"column_start":6,"column_end":15},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":65840,"byte_end":65848,"line_start":528,"line_end":528,"column_start":6,"column_end":14},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":68857,"byte_end":68869,"line_start":620,"line_end":620,"column_start":10,"column_end":22},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":70276,"byte_end":70282,"line_start":664,"line_end":664,"column_start":6,"column_end":12},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":71609,"byte_end":71615,"line_start":707,"line_end":707,"column_start":36,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3315},"to":{"krate":2,"index":2067}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":71741,"byte_end":71747,"line_start":713,"line_end":713,"column_start":36,"column_end":42},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3315},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":71858,"byte_end":71864,"line_start":719,"line_end":719,"column_start":21,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3315},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":72045,"byte_end":72053,"line_start":726,"line_end":726,"column_start":20,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":321},"to":{"krate":2,"index":2142}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\contexts.rs","byte_start":72191,"byte_end":72199,"line_start":734,"line_end":734,"column_start":23,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":321},"to":{"krate":2,"index":2155}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":77300,"byte_end":77309,"line_start":132,"line_end":132,"column_start":23,"column_end":32},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":85149,"byte_end":85158,"line_start":359,"line_end":359,"column_start":29,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":105303,"byte_end":105312,"line_start":872,"line_end":872,"column_start":33,"column_end":42},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\core.rs","byte_start":105602,"byte_end":105613,"line_start":882,"line_end":882,"column_start":6,"column_end":17},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":113156,"byte_end":113161,"line_start":106,"line_end":106,"column_start":17,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":1669},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":114740,"byte_end":114743,"line_start":162,"line_end":162,"column_start":36,"column_end":39},"kind":{"Impl":{"id":62}},"from":{"krate":5,"index":4030},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":114869,"byte_end":114871,"line_start":168,"line_end":168,"column_start":36,"column_end":38},"kind":{"Impl":{"id":63}},"from":{"krate":5,"index":3157},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":114984,"byte_end":114990,"line_start":174,"line_end":174,"column_start":24,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":2,"index":30242},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":115223,"byte_end":115229,"line_start":184,"line_end":184,"column_start":33,"column_end":39},"kind":{"Impl":{"id":65}},"from":{"krate":2,"index":30401},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":116945,"byte_end":116950,"line_start":248,"line_end":248,"column_start":15,"column_end":20},"kind":{"Impl":{"id":66}},"from":{"krate":14,"index":1782},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":117048,"byte_end":117053,"line_start":254,"line_end":254,"column_start":22,"column_end":27},"kind":{"Impl":{"id":67}},"from":{"krate":15,"index":1314},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":117184,"byte_end":117188,"line_start":260,"line_end":260,"column_start":22,"column_end":26},"kind":{"Impl":{"id":68}},"from":{"krate":15,"index":1409},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":117319,"byte_end":117323,"line_start":266,"line_end":266,"column_start":22,"column_end":26},"kind":{"Impl":{"id":69}},"from":{"krate":15,"index":1367},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":117472,"byte_end":117478,"line_start":272,"line_end":272,"column_start":22,"column_end":28},"kind":{"Impl":{"id":70}},"from":{"krate":15,"index":1149},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":117686,"byte_end":117692,"line_start":280,"line_end":280,"column_start":22,"column_end":28},"kind":{"Impl":{"id":71}},"from":{"krate":15,"index":1278},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":117917,"byte_end":117921,"line_start":289,"line_end":289,"column_start":22,"column_end":26},"kind":{"Impl":{"id":72}},"from":{"krate":15,"index":1339},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":118146,"byte_end":118157,"line_start":298,"line_end":298,"column_start":22,"column_end":33},"kind":{"Impl":{"id":73}},"from":{"krate":15,"index":1353},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":118311,"byte_end":118314,"line_start":304,"line_end":304,"column_start":22,"column_end":25},"kind":{"Impl":{"id":74}},"from":{"krate":15,"index":1163},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":118644,"byte_end":118650,"line_start":314,"line_end":314,"column_start":22,"column_end":28},"kind":{"Impl":{"id":75}},"from":{"krate":15,"index":1187},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":119147,"byte_end":119154,"line_start":328,"line_end":328,"column_start":22,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":15,"index":1210},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":119525,"byte_end":119532,"line_start":340,"line_end":340,"column_start":22,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":15,"index":1178},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":119823,"byte_end":119829,"line_start":352,"line_end":352,"column_start":22,"column_end":28},"kind":{"Impl":{"id":78}},"from":{"krate":15,"index":1237},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":119980,"byte_end":119988,"line_start":358,"line_end":358,"column_start":22,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":15,"index":1251},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":120213,"byte_end":120217,"line_start":367,"line_end":367,"column_start":22,"column_end":26},"kind":{"Impl":{"id":80}},"from":{"krate":15,"index":1294},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":120352,"byte_end":120362,"line_start":373,"line_end":373,"column_start":22,"column_end":32},"kind":{"Impl":{"id":81}},"from":{"krate":15,"index":1306},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":120482,"byte_end":120489,"line_start":379,"line_end":379,"column_start":22,"column_end":29},"kind":{"Impl":{"id":82}},"from":{"krate":15,"index":1326},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\data.rs","byte_start":120650,"byte_end":120655,"line_start":385,"line_end":385,"column_start":21,"column_end":26},"kind":{"Impl":{"id":83}},"from":{"krate":18,"index":401},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":127271,"byte_end":127276,"line_start":130,"line_end":130,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1976},"to":{"krate":0,"index":628}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":127777,"byte_end":127780,"line_start":149,"line_end":149,"column_start":6,"column_end":9},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3550},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133202,"byte_end":133205,"line_start":300,"line_end":300,"column_start":9,"column_end":12},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":133725,"byte_end":133728,"line_start":321,"line_end":321,"column_start":6,"column_end":9},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":134197,"byte_end":134202,"line_start":337,"line_end":337,"column_start":6,"column_end":11},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":135057,"byte_end":135062,"line_start":366,"line_end":366,"column_start":16,"column_end":21},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3561},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":135652,"byte_end":135657,"line_start":381,"line_end":381,"column_start":15,"column_end":20},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3561},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":136422,"byte_end":136425,"line_start":400,"line_end":400,"column_start":15,"column_end":18},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3550},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":136572,"byte_end":136579,"line_start":406,"line_end":406,"column_start":15,"column_end":22},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3555},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":136849,"byte_end":136852,"line_start":416,"line_end":416,"column_start":18,"column_end":21},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3550},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":138215,"byte_end":138221,"line_start":456,"line_end":456,"column_start":26,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":5,"index":5079},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":138305,"byte_end":138319,"line_start":462,"line_end":462,"column_start":6,"column_end":20},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":138469,"byte_end":138483,"line_start":467,"line_end":467,"column_start":28,"column_end":42},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3588},"to":{"krate":2,"index":6327}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":138730,"byte_end":138744,"line_start":477,"line_end":477,"column_start":28,"column_end":42},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3588},"to":{"krate":1,"index":1690}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":140436,"byte_end":140446,"line_start":531,"line_end":531,"column_start":28,"column_end":38},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":140729,"byte_end":140739,"line_start":540,"line_end":540,"column_start":67,"column_end":77},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":620},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\env.rs","byte_start":140882,"byte_end":140892,"line_start":546,"line_end":546,"column_start":45,"column_end":55},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":620},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\event.rs","byte_start":151996,"byte_end":152001,"line_start":257,"line_end":257,"column_start":6,"column_end":11},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":157976,"byte_end":157988,"line_start":56,"line_end":56,"column_start":6,"column_end":18},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3738},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":158775,"byte_end":158787,"line_start":86,"line_end":86,"column_start":6,"column_end":18},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":160149,"byte_end":160162,"line_start":123,"line_end":123,"column_start":28,"column_end":41},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3744},"to":{"krate":2,"index":6327}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\ext_event.rs","byte_start":160325,"byte_end":160338,"line_start":129,"line_end":129,"column_start":28,"column_end":41},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3744},"to":{"krate":1,"index":1690}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":164709,"byte_end":164713,"line_start":58,"line_end":58,"column_start":42,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":764},"to":{"krate":0,"index":773}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":167804,"byte_end":167805,"line_start":166,"line_end":166,"column_start":61,"column_end":62},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":794},"to":{"krate":0,"index":773}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":169003,"byte_end":169011,"line_start":197,"line_end":197,"column_start":15,"column_end":23},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":169407,"byte_end":169415,"line_start":211,"line_end":211,"column_start":32,"column_end":40},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":795},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":171086,"byte_end":171091,"line_start":270,"line_end":270,"column_start":19,"column_end":24},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":171395,"byte_end":171400,"line_start":281,"line_end":281,"column_start":40,"column_end":45},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":824},"to":{"krate":0,"index":764}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":172503,"byte_end":172507,"line_start":325,"line_end":325,"column_start":23,"column_end":27},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":172854,"byte_end":172858,"line_start":342,"line_end":342,"column_start":36,"column_end":40},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3750},"to":{"krate":0,"index":764}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":173275,"byte_end":173279,"line_start":359,"line_end":359,"column_start":39,"column_end":43},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3750},"to":{"krate":2,"index":1669}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":173612,"byte_end":173615,"line_start":376,"line_end":376,"column_start":16,"column_end":19},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":173902,"byte_end":173905,"line_start":389,"line_end":389,"column_start":45,"column_end":48},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3766},"to":{"krate":0,"index":764}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":174450,"byte_end":174455,"line_start":412,"line_end":412,"column_start":40,"column_end":45},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3782},"to":{"krate":0,"index":764}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":174836,"byte_end":174841,"line_start":430,"line_end":430,"column_start":9,"column_end":14},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":175049,"byte_end":175054,"line_start":439,"line_end":439,"column_start":35,"column_end":40},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3789},"to":{"krate":0,"index":764}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":175641,"byte_end":175643,"line_start":458,"line_end":458,"column_start":32,"column_end":34},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3800},"to":{"krate":0,"index":764}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":176065,"byte_end":176070,"line_start":476,"line_end":476,"column_start":9,"column_end":14},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\lens\\lens.rs","byte_start":176342,"byte_end":176347,"line_start":490,"line_end":490,"column_start":35,"column_end":40},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3807},"to":{"krate":0,"index":764}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":180620,"byte_end":180631,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":181329,"byte_end":181344,"line_start":125,"line_end":125,"column_start":6,"column_end":21},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":183481,"byte_end":183492,"line_start":182,"line_end":182,"column_start":6,"column_end":17},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":187482,"byte_end":187497,"line_start":293,"line_end":293,"column_start":9,"column_end":24},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":190012,"byte_end":190021,"line_start":363,"line_end":363,"column_start":29,"column_end":38},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3818},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\localization.rs","byte_start":190304,"byte_end":190316,"line_start":372,"line_end":372,"column_start":54,"column_end":66},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1026},"to":{"krate":2,"index":6327}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":197938,"byte_end":197946,"line_start":171,"line_end":171,"column_start":9,"column_end":17},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":199742,"byte_end":199750,"line_start":233,"line_end":233,"column_start":15,"column_end":23},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3838},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":205003,"byte_end":205014,"line_start":390,"line_end":390,"column_start":9,"column_end":20},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":205134,"byte_end":205144,"line_start":396,"line_end":396,"column_start":6,"column_end":16},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":205690,"byte_end":205698,"line_start":416,"line_end":416,"column_start":29,"column_end":37},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3838},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":206710,"byte_end":206719,"line_start":442,"line_end":442,"column_start":31,"column_end":40},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3845},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\menu.rs","byte_start":206841,"byte_end":206850,"line_start":448,"line_end":448,"column_start":31,"column_end":40},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3845},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\mouse.rs","byte_start":223455,"byte_end":223465,"line_start":74,"line_end":74,"column_start":40,"column_end":50},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3901},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":225750,"byte_end":225755,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1976},"to":{"krate":0,"index":1205}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":227107,"byte_end":227113,"line_start":60,"line_end":60,"column_start":23,"column_end":29},"kind":{"Impl":{"id":150}},"from":{"krate":5,"index":5079},"to":{"krate":0,"index":1205}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\editable_text.rs","byte_start":230106,"byte_end":230118,"line_start":166,"line_end":166,"column_start":45,"column_end":57},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3914},"to":{"krate":0,"index":1230}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\selection.rs","byte_start":236981,"byte_end":236990,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249664,"byte_end":249678,"line_start":59,"line_end":59,"column_start":6,"column_end":20},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":4023},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\text\\text_input.rs","byte_start":249752,"byte_end":249766,"line_start":65,"line_end":65,"column_start":20,"column_end":34},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":4023},"to":{"krate":0,"index":1306}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\util.rs","byte_start":258378,"byte_end":258385,"line_start":31,"line_end":31,"column_start":28,"column_end":35},"kind":{"Impl":{"id":155}},"from":{"krate":1,"index":6531},"to":{"krate":0,"index":1360}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":263518,"byte_end":263523,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\align.rs","byte_start":265208,"byte_end":265213,"line_start":84,"line_end":84,"column_start":29,"column_end":34},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1385},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":268380,"byte_end":268386,"line_start":33,"line_end":33,"column_start":15,"column_end":21},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\button.rs","byte_start":270160,"byte_end":270166,"line_start":89,"line_end":89,"column_start":29,"column_end":35},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1432},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\checkbox.rs","byte_start":274292,"byte_end":274300,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\checkbox.rs","byte_start":274541,"byte_end":274549,"line_start":40,"line_end":40,"column_start":23,"column_end":31},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1482},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":279385,"byte_end":279390,"line_start":43,"line_end":43,"column_start":15,"column_end":20},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\click.rs","byte_start":279653,"byte_end":279658,"line_start":52,"line_end":52,"column_start":50,"column_end":55},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1503},"to":{"krate":0,"index":1586}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":282006,"byte_end":282015,"line_start":36,"line_end":36,"column_start":18,"column_end":27},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4026},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\common.rs","byte_start":282086,"byte_end":282095,"line_start":42,"line_end":42,"column_start":6,"column_end":15},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":284710,"byte_end":284719,"line_start":38,"line_end":38,"column_start":15,"column_end":24},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\container.rs","byte_start":286563,"byte_end":286572,"line_start":100,"line_end":100,"column_start":29,"column_end":38},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1548},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":292141,"byte_end":292155,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\controller.rs","byte_start":292382,"byte_end":292396,"line_start":102,"line_end":102,"column_start":58,"column_end":72},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1592},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\either.rs","byte_start":294400,"byte_end":294406,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\either.rs","byte_start":295078,"byte_end":295084,"line_start":50,"line_end":50,"column_start":29,"column_end":35},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1629},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":298215,"byte_end":298223,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\env_scope.rs","byte_start":299149,"byte_end":299157,"line_start":61,"line_end":61,"column_start":43,"column_end":51},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1663},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":309800,"byte_end":309810,"line_start":251,"line_end":251,"column_start":6,"column_end":16},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":310561,"byte_end":310572,"line_start":272,"line_end":272,"column_start":9,"column_end":20},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":310771,"byte_end":310775,"line_start":281,"line_end":281,"column_start":6,"column_end":10},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":311899,"byte_end":311903,"line_start":318,"line_end":318,"column_start":15,"column_end":19},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":318900,"byte_end":318904,"line_start":517,"line_end":517,"column_start":29,"column_end":33},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1703},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":324487,"byte_end":324505,"line_start":655,"line_end":655,"column_start":6,"column_end":24},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":325072,"byte_end":325079,"line_start":677,"line_end":677,"column_start":6,"column_end":13},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":326377,"byte_end":326384,"line_start":713,"line_end":713,"column_start":19,"column_end":26},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1765},"to":{"krate":2,"index":5047}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":328224,"byte_end":328230,"line_start":763,"line_end":763,"column_start":29,"column_end":35},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1714},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\flex.rs","byte_start":328729,"byte_end":328739,"line_start":774,"line_end":774,"column_start":20,"column_end":30},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4047},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\identity_wrapper.rs","byte_start":333314,"byte_end":333329,"line_start":29,"line_end":29,"column_start":9,"column_end":24},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\identity_wrapper.rs","byte_start":333528,"byte_end":333543,"line_start":36,"line_end":36,"column_start":43,"column_end":58},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1802},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\invalidation.rs","byte_start":335229,"byte_end":335246,"line_start":26,"line_end":26,"column_start":29,"column_end":46},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\invalidation.rs","byte_start":335508,"byte_end":335525,"line_start":37,"line_end":37,"column_start":43,"column_end":60},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1821},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":338752,"byte_end":338757,"line_start":65,"line_end":65,"column_start":15,"column_end":20},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":343551,"byte_end":343558,"line_start":212,"line_end":212,"column_start":9,"column_end":16},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":343772,"byte_end":343781,"line_start":221,"line_end":221,"column_start":15,"column_end":24},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":344888,"byte_end":344893,"line_start":253,"line_end":253,"column_start":29,"column_end":34},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1886},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":346289,"byte_end":346298,"line_start":292,"line_end":292,"column_start":26,"column_end":35},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1871},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":346412,"byte_end":346421,"line_start":298,"line_end":298,"column_start":24,"column_end":33},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1871},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":346559,"byte_end":346568,"line_start":304,"line_end":304,"column_start":38,"column_end":47},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1871},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\label.rs","byte_start":346729,"byte_end":346738,"line_start":310,"line_end":310,"column_start":58,"column_end":67},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1871},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\list.rs","byte_start":348033,"byte_end":348037,"line_start":36,"line_end":36,"column_start":15,"column_end":19},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\list.rs","byte_start":349168,"byte_end":349172,"line_start":66,"line_end":66,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":503},"to":{"krate":0,"index":1979}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\list.rs","byte_start":350719,"byte_end":350722,"line_start":125,"line_end":125,"column_start":31,"column_end":34},"kind":{"Impl":{"id":199}},"from":{"krate":5,"index":4030},"to":{"krate":0,"index":1979}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\list.rs","byte_start":352650,"byte_end":352654,"line_start":196,"line_end":196,"column_start":45,"column_end":49},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1966},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":356672,"byte_end":356679,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2033},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\padding.rs","byte_start":358154,"byte_end":358161,"line_start":75,"line_end":75,"column_start":29,"column_end":36},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2033},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":362997,"byte_end":363004,"line_start":100,"line_end":100,"column_start":9,"column_end":16},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":363263,"byte_end":363278,"line_start":109,"line_end":109,"column_start":15,"column_end":30},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":363955,"byte_end":363962,"line_start":126,"line_end":126,"column_start":29,"column_end":36},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2074},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":364530,"byte_end":364545,"line_start":142,"line_end":142,"column_start":25,"column_end":40},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2078},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":364673,"byte_end":364688,"line_start":148,"line_end":148,"column_start":30,"column_end":45},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2078},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":364828,"byte_end":364843,"line_start":154,"line_end":154,"column_start":34,"column_end":49},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2078},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":364985,"byte_end":365000,"line_start":160,"line_end":160,"column_start":34,"column_end":49},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2078},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":365141,"byte_end":365156,"line_start":166,"line_end":166,"column_start":33,"column_end":48},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2078},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":365292,"byte_end":365307,"line_start":172,"line_end":172,"column_start":30,"column_end":45},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2078},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\painter.rs","byte_start":365442,"byte_end":365457,"line_start":178,"line_end":178,"column_start":30,"column_end":45},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2078},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\parse.rs","byte_start":366220,"byte_end":366225,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\parse.rs","byte_start":366430,"byte_end":366435,"line_start":26,"line_end":26,"column_start":76,"column_end":81},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2151},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\progress_bar.rs","byte_start":368833,"byte_end":368844,"line_start":30,"line_end":30,"column_start":6,"column_end":17},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\progress_bar.rs","byte_start":368971,"byte_end":368982,"line_start":37,"line_end":37,"column_start":22,"column_end":33},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4103},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\radio.rs","byte_start":372331,"byte_end":372341,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\radio.rs","byte_start":372995,"byte_end":373000,"line_start":49,"line_end":49,"column_start":15,"column_end":20},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\radio.rs","byte_start":373314,"byte_end":373319,"line_start":59,"line_end":59,"column_start":41,"column_end":46},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2231},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":377042,"byte_end":377057,"line_start":36,"line_end":36,"column_start":6,"column_end":21},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":377691,"byte_end":377706,"line_start":56,"line_end":56,"column_start":6,"column_end":21},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":378341,"byte_end":378356,"line_start":82,"line_end":82,"column_start":18,"column_end":33},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2293},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":378576,"byte_end":378591,"line_start":93,"line_end":93,"column_start":6,"column_end":21},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":379250,"byte_end":379256,"line_start":117,"line_end":117,"column_start":23,"column_end":29},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\scroll.rs","byte_start":386332,"byte_end":386338,"line_start":307,"line_end":307,"column_start":43,"column_end":49},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2302},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":395682,"byte_end":395690,"line_start":40,"line_end":40,"column_start":9,"column_end":17},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\sized_box.rs","byte_start":398401,"byte_end":398409,"line_start":132,"line_end":132,"column_start":29,"column_end":37},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2359},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\slider.rs","byte_start":401884,"byte_end":401890,"line_start":37,"line_end":37,"column_start":6,"column_end":12},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\slider.rs","byte_start":402415,"byte_end":402421,"line_start":59,"line_end":59,"column_start":6,"column_end":12},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":4128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\slider.rs","byte_start":403058,"byte_end":403064,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":4128},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":408763,"byte_end":408770,"line_start":34,"line_end":34,"column_start":6,"column_end":13},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":409480,"byte_end":409487,"line_start":60,"line_end":60,"column_start":18,"column_end":25},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2430},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\spinner.rs","byte_start":409648,"byte_end":409655,"line_start":69,"line_end":69,"column_start":29,"column_end":36},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2430},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":413155,"byte_end":413160,"line_start":38,"line_end":38,"column_start":9,"column_end":14},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\split.rs","byte_start":422087,"byte_end":422092,"line_start":268,"line_end":268,"column_start":29,"column_end":34},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2472},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":430930,"byte_end":430937,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":433008,"byte_end":433015,"line_start":115,"line_end":115,"column_start":18,"column_end":25},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2545},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\stepper.rs","byte_start":433095,"byte_end":433102,"line_start":121,"line_end":121,"column_start":22,"column_end":29},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2545},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\switch.rs","byte_start":438535,"byte_end":438541,"line_start":39,"line_end":39,"column_start":6,"column_end":12},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":4140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\switch.rs","byte_start":441011,"byte_end":441017,"line_start":116,"line_end":116,"column_start":23,"column_end":29},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4140},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\textbox.rs","byte_start":449082,"byte_end":449089,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\textbox.rs","byte_start":456106,"byte_end":456113,"line_start":234,"line_end":234,"column_start":25,"column_end":32},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4151},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\textbox.rs","byte_start":464885,"byte_end":464892,"line_start":470,"line_end":470,"column_start":18,"column_end":25},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":4151},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\view_switcher.rs","byte_start":468208,"byte_end":468220,"line_start":35,"line_end":35,"column_start":29,"column_end":41},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\view_switcher.rs","byte_start":469111,"byte_end":469123,"line_start":58,"line_end":58,"column_start":43,"column_end":55},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2708},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":479014,"byte_end":479022,"line_start":185,"line_end":185,"column_start":6,"column_end":14},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget.rs","byte_start":480340,"byte_end":480343,"line_start":220,"line_end":220,"column_start":23,"column_end":26},"kind":{"Impl":{"id":247}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":482283,"byte_end":482289,"line_start":25,"line_end":25,"column_start":31,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":2735},"to":{"krate":0,"index":2785}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":482295,"byte_end":482300,"line_start":25,"line_end":25,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":1976},"to":{"krate":0,"index":2785}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":490143,"byte_end":490144,"line_start":248,"line_end":248,"column_start":56,"column_end":57},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2826},"to":{"krate":0,"index":2785}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":490322,"byte_end":490330,"line_start":254,"line_end":254,"column_start":15,"column_end":23},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\widget\\widget_ext.rs","byte_start":490640,"byte_end":490648,"line_start":266,"line_end":266,"column_start":18,"column_end":26},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":1663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":495063,"byte_end":495070,"line_start":91,"line_end":91,"column_start":9,"column_end":16},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":496094,"byte_end":496104,"line_start":126,"line_end":126,"column_start":9,"column_end":19},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":496210,"byte_end":496218,"line_start":132,"line_end":132,"column_start":9,"column_end":17},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":496835,"byte_end":496840,"line_start":159,"line_end":159,"column_start":15,"column_end":20},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":2948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":506775,"byte_end":506787,"line_start":431,"line_end":431,"column_start":15,"column_end":27},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":2941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":507088,"byte_end":507096,"line_start":442,"line_end":442,"column_start":15,"column_end":23},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":514928,"byte_end":514938,"line_start":644,"line_end":644,"column_start":44,"column_end":54},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2945},"to":{"krate":14,"index":28}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":515070,"byte_end":515082,"line_start":650,"line_end":650,"column_start":30,"column_end":42},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2941},"to":{"krate":14,"index":372}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\win_handler.rs","byte_start":517688,"byte_end":517695,"line_start":739,"line_end":739,"column_start":21,"column_end":28},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2958},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\window.rs","byte_start":519857,"byte_end":519863,"line_start":58,"line_end":58,"column_start":9,"column_end":15},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\window.rs","byte_start":520340,"byte_end":520346,"line_start":76,"line_end":76,"column_start":15,"column_end":21},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\druid-0.6.0\\src\\window.rs","byte_start":533394,"byte_end":533402,"line_start":442,"line_end":442,"column_start":6,"column_end":14},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":4186},"to":{"krate":4294967295,"index":4294967295}}]}