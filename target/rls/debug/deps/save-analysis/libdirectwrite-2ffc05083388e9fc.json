{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4","program":"C:\\Users\\falik\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","directwrite","C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=2ffc05083388e9fc","-C","extra-filename=-2ffc05083388e9fc","--out-dir","c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps","--extern","winapi=c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps\\libwinapi-3cefac11a9e5348a.rmeta","--extern","wio=c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps\\libwio-c06314f2140e321d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\falik\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\falik\\Documents\\School\\21S\\CS 4390 Networks\\project\\target\\rls\\debug\\deps\\libdirectwrite-2ffc05083388e9fc.rmeta"},"prelude":{"crate_id":{"name":"directwrite","disambiguator":[14011095567510236688,3209129809307689679]},"crate_root":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src","external_crates":[{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[45344308337484766,904807583985397655]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[17608585110195136257,12532935013018738971]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10644633998059158352,10345665241509147306]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18212625787733517551,4937265065110821766]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2699922135837212616,11588109643627721037]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16653465091603201180,18239440457404116996]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3073254730555026972,7758270140448631200]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13759999943095835806,4978516890064261122]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4575299228079760236,9361028770882531394]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10307147502021998988,15592389341950453369]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2670035867216739096,10315597156951015330]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7309248630993686720,3186694738066578297]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","num":13,"id":{"name":"winapi","disambiguator":[2443334114920443930,3236215031580195971]}},{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","num":14,"id":{"name":"wio","disambiguator":[14899165245836841888,8606327060688362677]}}],"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","byte_start":0,"byte_end":440,"line_start":1,"line_end":25,"column_start":1,"column_end":13}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","byte_start":75,"byte_end":82,"line_start":6,"line_end":6,"column_start":18,"column_end":25},"alias_span":null,"name":"Factory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1381},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","byte_start":105,"byte_end":115,"line_start":7,"line_end":7,"column_start":22,"column_end":32},"alias_span":null,"name":"TextFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1414},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","byte_start":138,"byte_end":148,"line_start":8,"line_end":8,"column_start":22,"column_end":32},"alias_span":null,"name":"TextLayout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":10225,"byte_end":10240,"line_start":15,"line_end":15,"column_start":24,"column_end":39},"alias_span":null,"name":"FontFaceBuilder","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":1342},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":10265,"byte_end":10276,"line_start":16,"line_end":16,"column_start":24,"column_end":35},"alias_span":null,"name":"FontMetrics","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":1347},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":10301,"byte_end":10313,"line_start":17,"line_end":17,"column_start":24,"column_end":36},"alias_span":null,"name":"GlyphMetrics","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\mod.rs","byte_start":31019,"byte_end":31034,"line_start":5,"line_end":5,"column_start":24,"column_end":39},"alias_span":null,"name":"FontFileBuilder","value":"","parent":{"krate":0,"index":217}},{"kind":"Use","ref_id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":41908,"byte_end":41925,"line_start":14,"line_end":14,"column_start":24,"column_end":41},"alias_span":null,"name":"TextFormatBuilder","value":"","parent":{"krate":0,"index":356}},{"kind":"Use","ref_id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":52109,"byte_end":52126,"line_start":18,"line_end":18,"column_start":24,"column_end":41},"alias_span":null,"name":"TextLayoutBuilder","value":"","parent":{"krate":0,"index":440}},{"kind":"Use","ref_id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\vtbl\\mod.rs","byte_start":89078,"byte_end":89103,"line_start":1,"line_end":1,"column_start":23,"column_end":48},"alias_span":null,"name":"TEXT_RENDERER_COMREF_VTBL","value":"","parent":{"krate":0,"index":633}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","byte_start":0,"byte_end":440,"line_start":1,"line_end":25,"column_start":1,"column_end":13},"name":"","qualname":"::","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":12},{"krate":0,"index":22},{"krate":0,"index":41},{"krate":0,"index":60},{"krate":0,"index":70},{"krate":0,"index":91},{"krate":0,"index":195},{"krate":0,"index":217},{"krate":0,"index":249},{"krate":0,"index":257},{"krate":0,"index":356},{"krate":0,"index":440},{"krate":0,"index":622},{"krate":0,"index":757}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","byte_start":0,"byte_end":16,"line_start":1,"line_end":1,"column_start":1,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\drawing_effect.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"drawing_effect","qualname":"::drawing_effect","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\drawing_effect.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\drawing_effect.rs","byte_start":588,"byte_end":601,"line_start":4,"line_end":4,"column_start":18,"column_end":31},"name":"DrawingEffect","qualname":"::drawing_effect::DrawingEffect","value":"DrawingEffect","parent":null,"children":[{"krate":0,"index":11}],"decl_id":null,"docs":" This trait represents types which can be used in set_drawing_effect on a text layout.\n","sig":null,"attributes":[{"value":"/ This trait represents types which can be used in set_drawing_effect on a text layout.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\drawing_effect.rs","byte_start":481,"byte_end":570,"line_start":3,"line_end":3,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\drawing_effect.rs","byte_start":618,"byte_end":632,"line_start":5,"line_end":5,"column_start":15,"column_end":29},"name":"get_effect_ptr","qualname":"::drawing_effect::DrawingEffect::get_effect_ptr","value":"pub unsafe fn get_effect_ptr(&Self) -> *mut IUnknown","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"enums","qualname":"::enums","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":1458},{"krate":0,"index":14},{"krate":0,"index":849},{"krate":0,"index":900},{"krate":0,"index":898},{"krate":0,"index":896},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":888},{"krate":0,"index":886},{"krate":0,"index":883},{"krate":0,"index":771},{"krate":0,"index":774},{"krate":0,"index":901},{"krate":0,"index":943},{"krate":0,"index":941},{"krate":0,"index":939},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":931},{"krate":0,"index":929},{"krate":0,"index":926},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":944},{"krate":0,"index":971},{"krate":0,"index":969},{"krate":0,"index":967},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":959},{"krate":0,"index":957},{"krate":0,"index":954},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":972},{"krate":0,"index":999},{"krate":0,"index":997},{"krate":0,"index":995},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":987},{"krate":0,"index":985},{"krate":0,"index":982},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":1000},{"krate":0,"index":1048},{"krate":0,"index":1046},{"krate":0,"index":1044},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1036},{"krate":0,"index":1034},{"krate":0,"index":1031},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":1049},{"krate":0,"index":1079},{"krate":0,"index":1077},{"krate":0,"index":1075},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1067},{"krate":0,"index":1065},{"krate":0,"index":1062},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":1080},{"krate":0,"index":1110},{"krate":0,"index":1108},{"krate":0,"index":1106},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1098},{"krate":0,"index":1096},{"krate":0,"index":1093},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":1111},{"krate":0,"index":1138},{"krate":0,"index":1136},{"krate":0,"index":1134},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1126},{"krate":0,"index":1124},{"krate":0,"index":1121},{"krate":0,"index":813},{"krate":0,"index":816},{"krate":0,"index":1139},{"krate":0,"index":1166},{"krate":0,"index":1164},{"krate":0,"index":1162},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1154},{"krate":0,"index":1152},{"krate":0,"index":1149},{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":1167},{"krate":0,"index":1197},{"krate":0,"index":1195},{"krate":0,"index":1193},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1185},{"krate":0,"index":1183},{"krate":0,"index":1180},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":1198},{"krate":0,"index":1228},{"krate":0,"index":1226},{"krate":0,"index":1224},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1216},{"krate":0,"index":1214},{"krate":0,"index":1211},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":1229},{"krate":0,"index":1262},{"krate":0,"index":1260},{"krate":0,"index":1258},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1250},{"krate":0,"index":1248},{"krate":0,"index":1245},{"krate":0,"index":837},{"krate":0,"index":840},{"krate":0,"index":1263},{"krate":0,"index":1290},{"krate":0,"index":1288},{"krate":0,"index":1286},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1278},{"krate":0,"index":1276},{"krate":0,"index":1273},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":1291},{"krate":0,"index":1330},{"krate":0,"index":1327},{"krate":0,"index":1324},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1302},{"krate":0,"index":1299},{"krate":0,"index":1295},{"krate":0,"index":18}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":702,"byte_end":713,"line_start":3,"line_end":3,"column_start":11,"column_end":22},"name":"CheckedEnum","qualname":"::enums::CheckedEnum","value":"CheckedEnum: Sized + Copy + 'static","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":747,"byte_end":753,"line_start":4,"line_end":4,"column_start":8,"column_end":14},"name":"to_u32","qualname":"::enums::CheckedEnum::to_u32","value":"pub fn to_u32(Self) -> u32","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":775,"byte_end":783,"line_start":5,"line_end":5,"column_start":8,"column_end":16},"name":"from_u32","qualname":"::enums::CheckedEnum::from_u32","value":"pub fn from_u32(u32) -> Option<Self>","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":1832,"byte_end":1836,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"name":"Thin","qualname":"::enums::FontWeight::Thin","value":"FontWeight::Thin","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":853},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":1852,"byte_end":1862,"line_start":50,"line_end":50,"column_start":9,"column_end":19},"name":"ExtraLight","qualname":"::enums::FontWeight::ExtraLight","value":"FontWeight::ExtraLight","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":1878,"byte_end":1883,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"name":"Light","qualname":"::enums::FontWeight::Light","value":"FontWeight::Light","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":859},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":1899,"byte_end":1908,"line_start":52,"line_end":52,"column_start":9,"column_end":18},"name":"SemiLight","qualname":"::enums::FontWeight::SemiLight","value":"FontWeight::SemiLight","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":1924,"byte_end":1930,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"name":"Normal","qualname":"::enums::FontWeight::Normal","value":"FontWeight::Normal","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":1946,"byte_end":1952,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"name":"Medium","qualname":"::enums::FontWeight::Medium","value":"FontWeight::Medium","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":1968,"byte_end":1976,"line_start":55,"line_end":55,"column_start":9,"column_end":17},"name":"SemiBold","qualname":"::enums::FontWeight::SemiBold","value":"FontWeight::SemiBold","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":871},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":1992,"byte_end":1996,"line_start":56,"line_end":56,"column_start":9,"column_end":13},"name":"Bold","qualname":"::enums::FontWeight::Bold","value":"FontWeight::Bold","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":874},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2012,"byte_end":2021,"line_start":57,"line_end":57,"column_start":9,"column_end":18},"name":"ExtraBold","qualname":"::enums::FontWeight::ExtraBold","value":"FontWeight::ExtraBold","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":877},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2037,"byte_end":2042,"line_start":58,"line_end":58,"column_start":9,"column_end":14},"name":"Black","qualname":"::enums::FontWeight::Black","value":"FontWeight::Black","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2058,"byte_end":2068,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"name":"ExtraBlack","qualname":"::enums::FontWeight::ExtraBlack","value":"FontWeight::ExtraBlack","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":849},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":1811,"byte_end":1821,"line_start":48,"line_end":48,"column_start":14,"column_end":24},"name":"FontWeight","qualname":"::enums::FontWeight","value":"pub enum FontWeight {\n    Thin = ,\n    ExtraLight = ,\n    Light = ,\n    SemiLight = ,\n    Normal = ,\n    Medium = ,\n    SemiBold = ,\n    Bold = ,\n    ExtraBold = ,\n    Black = ,\n    ExtraBlack = ,\n}","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":871},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":880}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":955,"byte_end":967,"line_start":14,"line_end":14,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":902},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2118,"byte_end":2121,"line_start":63,"line_end":63,"column_start":9,"column_end":12},"name":"CFF","qualname":"::enums::FontFaceType::CFF","value":"FontFaceType::CFF","parent":{"krate":0,"index":901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2135,"byte_end":2143,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"name":"TrueType","qualname":"::enums::FontFaceType::TrueType","value":"FontFaceType::TrueType","parent":{"krate":0,"index":901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2157,"byte_end":2175,"line_start":65,"line_end":65,"column_start":9,"column_end":27},"name":"OpenTypeCollection","qualname":"::enums::FontFaceType::OpenTypeCollection","value":"FontFaceType::OpenTypeCollection","parent":{"krate":0,"index":901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2189,"byte_end":2194,"line_start":66,"line_end":66,"column_start":9,"column_end":14},"name":"Type1","qualname":"::enums::FontFaceType::Type1","value":"FontFaceType::Type1","parent":{"krate":0,"index":901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2208,"byte_end":2214,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"name":"Bitmap","qualname":"::enums::FontFaceType::Bitmap","value":"FontFaceType::Bitmap","parent":{"krate":0,"index":901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2228,"byte_end":2235,"line_start":68,"line_end":68,"column_start":9,"column_end":16},"name":"Unknown","qualname":"::enums::FontFaceType::Unknown","value":"FontFaceType::Unknown","parent":{"krate":0,"index":901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2249,"byte_end":2255,"line_start":69,"line_end":69,"column_start":9,"column_end":15},"name":"RawCFF","qualname":"::enums::FontFaceType::RawCFF","value":"FontFaceType::RawCFF","parent":{"krate":0,"index":901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2269,"byte_end":2287,"line_start":70,"line_end":70,"column_start":9,"column_end":27},"name":"TrueTypeCollection","qualname":"::enums::FontFaceType::TrueTypeCollection","value":"FontFaceType::TrueTypeCollection","parent":{"krate":0,"index":901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2096,"byte_end":2108,"line_start":62,"line_end":62,"column_start":14,"column_end":26},"name":"FontFaceType","qualname":"::enums::FontFaceType","value":"pub enum FontFaceType {\n    CFF = ,\n    TrueType = ,\n    OpenTypeCollection = ,\n    Type1 = ,\n    Bitmap = ,\n    Unknown = ,\n    RawCFF = ,\n    TrueTypeCollection = ,\n}","parent":null,"children":[{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":923}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":955,"byte_end":967,"line_start":14,"line_end":14,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":945},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2339,"byte_end":2343,"line_start":74,"line_end":74,"column_start":9,"column_end":13},"name":"None","qualname":"::enums::FontSimulations::None","value":"FontSimulations::None","parent":{"krate":0,"index":944},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2357,"byte_end":2361,"line_start":75,"line_end":75,"column_start":9,"column_end":13},"name":"Bold","qualname":"::enums::FontSimulations::Bold","value":"FontSimulations::Bold","parent":{"krate":0,"index":944},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":951},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2375,"byte_end":2382,"line_start":76,"line_end":76,"column_start":9,"column_end":16},"name":"Oblique","qualname":"::enums::FontSimulations::Oblique","value":"FontSimulations::Oblique","parent":{"krate":0,"index":944},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":944},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2313,"byte_end":2328,"line_start":73,"line_end":73,"column_start":14,"column_end":29},"name":"FontSimulations","qualname":"::enums::FontSimulations","value":"pub enum FontSimulations { None = , Bold = , Oblique = , }","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":955,"byte_end":967,"line_start":14,"line_end":14,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":973},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2428,"byte_end":2434,"line_start":80,"line_end":80,"column_start":9,"column_end":15},"name":"Normal","qualname":"::enums::FontStyle::Normal","value":"FontStyle::Normal","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":976},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2448,"byte_end":2455,"line_start":81,"line_end":81,"column_start":9,"column_end":16},"name":"Oblique","qualname":"::enums::FontStyle::Oblique","value":"FontStyle::Oblique","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2469,"byte_end":2475,"line_start":82,"line_end":82,"column_start":9,"column_end":15},"name":"Italic","qualname":"::enums::FontStyle::Italic","value":"FontStyle::Italic","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":972},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2408,"byte_end":2417,"line_start":79,"line_end":79,"column_start":14,"column_end":23},"name":"FontStyle","qualname":"::enums::FontStyle","value":"pub enum FontStyle { Normal = , Oblique = , Italic = , }","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":979}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":955,"byte_end":967,"line_start":14,"line_end":14,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2523,"byte_end":2532,"line_start":86,"line_end":86,"column_start":9,"column_end":18},"name":"Undefined","qualname":"::enums::FontStretch::Undefined","value":"FontStretch::Undefined","parent":{"krate":0,"index":1000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1004},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2546,"byte_end":2560,"line_start":87,"line_end":87,"column_start":9,"column_end":23},"name":"UltraCondensed","qualname":"::enums::FontStretch::UltraCondensed","value":"FontStretch::UltraCondensed","parent":{"krate":0,"index":1000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1007},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2574,"byte_end":2588,"line_start":88,"line_end":88,"column_start":9,"column_end":23},"name":"ExtraCondensed","qualname":"::enums::FontStretch::ExtraCondensed","value":"FontStretch::ExtraCondensed","parent":{"krate":0,"index":1000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2602,"byte_end":2611,"line_start":89,"line_end":89,"column_start":9,"column_end":18},"name":"Condensed","qualname":"::enums::FontStretch::Condensed","value":"FontStretch::Condensed","parent":{"krate":0,"index":1000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1013},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2625,"byte_end":2638,"line_start":90,"line_end":90,"column_start":9,"column_end":22},"name":"SemiCondensed","qualname":"::enums::FontStretch::SemiCondensed","value":"FontStretch::SemiCondensed","parent":{"krate":0,"index":1000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2652,"byte_end":2658,"line_start":91,"line_end":91,"column_start":9,"column_end":15},"name":"Normal","qualname":"::enums::FontStretch::Normal","value":"FontStretch::Normal","parent":{"krate":0,"index":1000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2672,"byte_end":2684,"line_start":92,"line_end":92,"column_start":9,"column_end":21},"name":"SemiExpanded","qualname":"::enums::FontStretch::SemiExpanded","value":"FontStretch::SemiExpanded","parent":{"krate":0,"index":1000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2698,"byte_end":2706,"line_start":93,"line_end":93,"column_start":9,"column_end":17},"name":"Expanded","qualname":"::enums::FontStretch::Expanded","value":"FontStretch::Expanded","parent":{"krate":0,"index":1000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2720,"byte_end":2733,"line_start":94,"line_end":94,"column_start":9,"column_end":22},"name":"ExtraExpanded","qualname":"::enums::FontStretch::ExtraExpanded","value":"FontStretch::ExtraExpanded","parent":{"krate":0,"index":1000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2747,"byte_end":2760,"line_start":95,"line_end":95,"column_start":9,"column_end":22},"name":"UltraExpanded","qualname":"::enums::FontStretch::UltraExpanded","value":"FontStretch::UltraExpanded","parent":{"krate":0,"index":1000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2501,"byte_end":2512,"line_start":85,"line_end":85,"column_start":14,"column_end":25},"name":"FontStretch","qualname":"::enums::FontStretch","value":"pub enum FontStretch {\n    Undefined = ,\n    UltraCondensed = ,\n    ExtraCondensed = ,\n    Condensed = ,\n    SemiCondensed = ,\n    Normal = ,\n    SemiExpanded = ,\n    Expanded = ,\n    ExtraExpanded = ,\n    UltraExpanded = ,\n}","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":1016},{"krate":0,"index":1019},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1028}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":955,"byte_end":967,"line_start":14,"line_end":14,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1050},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2811,"byte_end":2818,"line_start":99,"line_end":99,"column_start":9,"column_end":16},"name":"Neutral","qualname":"::enums::BreakCondition::Neutral","value":"BreakCondition::Neutral","parent":{"krate":0,"index":1049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1053},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2832,"byte_end":2840,"line_start":100,"line_end":100,"column_start":9,"column_end":17},"name":"CanBreak","qualname":"::enums::BreakCondition::CanBreak","value":"BreakCondition::CanBreak","parent":{"krate":0,"index":1049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2854,"byte_end":2865,"line_start":101,"line_end":101,"column_start":9,"column_end":20},"name":"MayNotBreak","qualname":"::enums::BreakCondition::MayNotBreak","value":"BreakCondition::MayNotBreak","parent":{"krate":0,"index":1049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1059},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2879,"byte_end":2888,"line_start":102,"line_end":102,"column_start":9,"column_end":18},"name":"MustBreak","qualname":"::enums::BreakCondition::MustBreak","value":"BreakCondition::MustBreak","parent":{"krate":0,"index":1049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2786,"byte_end":2800,"line_start":98,"line_end":98,"column_start":14,"column_end":28},"name":"BreakCondition","qualname":"::enums::BreakCondition","value":"pub enum BreakCondition {\n    Neutral = ,\n    CanBreak = ,\n    MayNotBreak = ,\n    MustBreak = ,\n}","parent":null,"children":[{"krate":0,"index":1050},{"krate":0,"index":1053},{"krate":0,"index":1056},{"krate":0,"index":1059}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":955,"byte_end":967,"line_start":14,"line_end":14,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2938,"byte_end":2949,"line_start":106,"line_end":106,"column_start":9,"column_end":20},"name":"TopToBottom","qualname":"::enums::FlowDirection::TopToBottom","value":"FlowDirection::TopToBottom","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1084},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2963,"byte_end":2974,"line_start":107,"line_end":107,"column_start":9,"column_end":20},"name":"BottomToTop","qualname":"::enums::FlowDirection::BottomToTop","value":"FlowDirection::BottomToTop","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2988,"byte_end":2999,"line_start":108,"line_end":108,"column_start":9,"column_end":20},"name":"LeftToRight","qualname":"::enums::FlowDirection::LeftToRight","value":"FlowDirection::LeftToRight","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3013,"byte_end":3024,"line_start":109,"line_end":109,"column_start":9,"column_end":20},"name":"RightToLeft","qualname":"::enums::FlowDirection::RightToLeft","value":"FlowDirection::RightToLeft","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":2914,"byte_end":2927,"line_start":105,"line_end":105,"column_start":14,"column_end":27},"name":"FlowDirection","qualname":"::enums::FlowDirection","value":"pub enum FlowDirection {\n    TopToBottom = ,\n    BottomToTop = ,\n    LeftToRight = ,\n    RightToLeft = ,\n}","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1087},{"krate":0,"index":1090}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":955,"byte_end":967,"line_start":14,"line_end":14,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1112},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3078,"byte_end":3085,"line_start":113,"line_end":113,"column_start":9,"column_end":16},"name":"Default","qualname":"::enums::LineSpacingMethod::Default","value":"LineSpacingMethod::Default","parent":{"krate":0,"index":1111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3099,"byte_end":3106,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"name":"Uniform","qualname":"::enums::LineSpacingMethod::Uniform","value":"LineSpacingMethod::Uniform","parent":{"krate":0,"index":1111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3120,"byte_end":3132,"line_start":115,"line_end":115,"column_start":9,"column_end":21},"name":"Proportional","qualname":"::enums::LineSpacingMethod::Proportional","value":"LineSpacingMethod::Proportional","parent":{"krate":0,"index":1111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1111},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3050,"byte_end":3067,"line_start":112,"line_end":112,"column_start":14,"column_end":31},"name":"LineSpacingMethod","qualname":"::enums::LineSpacingMethod","value":"pub enum LineSpacingMethod { Default = , Uniform = , Proportional = , }","parent":null,"children":[{"krate":0,"index":1112},{"krate":0,"index":1115},{"krate":0,"index":1118}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":955,"byte_end":967,"line_start":14,"line_end":14,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1140},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3187,"byte_end":3191,"line_start":119,"line_end":119,"column_start":9,"column_end":13},"name":"Near","qualname":"::enums::ParagraphAlignment::Near","value":"ParagraphAlignment::Near","parent":{"krate":0,"index":1139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1143},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3205,"byte_end":3208,"line_start":120,"line_end":120,"column_start":9,"column_end":12},"name":"Far","qualname":"::enums::ParagraphAlignment::Far","value":"ParagraphAlignment::Far","parent":{"krate":0,"index":1139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1146},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3222,"byte_end":3228,"line_start":121,"line_end":121,"column_start":9,"column_end":15},"name":"Center","qualname":"::enums::ParagraphAlignment::Center","value":"ParagraphAlignment::Center","parent":{"krate":0,"index":1139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1139},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3158,"byte_end":3176,"line_start":118,"line_end":118,"column_start":14,"column_end":32},"name":"ParagraphAlignment","qualname":"::enums::ParagraphAlignment","value":"pub enum ParagraphAlignment { Near = , Far = , Center = , }","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1143},{"krate":0,"index":1146}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":955,"byte_end":967,"line_start":14,"line_end":14,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3281,"byte_end":3292,"line_start":125,"line_end":125,"column_start":9,"column_end":20},"name":"LeftToRight","qualname":"::enums::ReadingDirection::LeftToRight","value":"ReadingDirection::LeftToRight","parent":{"krate":0,"index":1167},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1171},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3306,"byte_end":3317,"line_start":126,"line_end":126,"column_start":9,"column_end":20},"name":"RightToLeft","qualname":"::enums::ReadingDirection::RightToLeft","value":"ReadingDirection::RightToLeft","parent":{"krate":0,"index":1167},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1174},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3331,"byte_end":3342,"line_start":127,"line_end":127,"column_start":9,"column_end":20},"name":"TopToBottom","qualname":"::enums::ReadingDirection::TopToBottom","value":"ReadingDirection::TopToBottom","parent":{"krate":0,"index":1167},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3356,"byte_end":3367,"line_start":128,"line_end":128,"column_start":9,"column_end":20},"name":"BottomToTop","qualname":"::enums::ReadingDirection::BottomToTop","value":"ReadingDirection::BottomToTop","parent":{"krate":0,"index":1167},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3254,"byte_end":3270,"line_start":124,"line_end":124,"column_start":14,"column_end":30},"name":"ReadingDirection","qualname":"::enums::ReadingDirection","value":"pub enum ReadingDirection {\n    LeftToRight = ,\n    RightToLeft = ,\n    TopToBottom = ,\n    BottomToTop = ,\n}","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1171},{"krate":0,"index":1174},{"krate":0,"index":1177}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":955,"byte_end":967,"line_start":14,"line_end":14,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1199},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3417,"byte_end":3424,"line_start":132,"line_end":132,"column_start":9,"column_end":16},"name":"Leading","qualname":"::enums::TextAlignment::Leading","value":"TextAlignment::Leading","parent":{"krate":0,"index":1198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3438,"byte_end":3446,"line_start":133,"line_end":133,"column_start":9,"column_end":17},"name":"Trailing","qualname":"::enums::TextAlignment::Trailing","value":"TextAlignment::Trailing","parent":{"krate":0,"index":1198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3460,"byte_end":3466,"line_start":134,"line_end":134,"column_start":9,"column_end":15},"name":"Center","qualname":"::enums::TextAlignment::Center","value":"TextAlignment::Center","parent":{"krate":0,"index":1198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1208},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3480,"byte_end":3489,"line_start":135,"line_end":135,"column_start":9,"column_end":18},"name":"Justified","qualname":"::enums::TextAlignment::Justified","value":"TextAlignment::Justified","parent":{"krate":0,"index":1198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3393,"byte_end":3406,"line_start":131,"line_end":131,"column_start":14,"column_end":27},"name":"TextAlignment","qualname":"::enums::TextAlignment","value":"pub enum TextAlignment { Leading = , Trailing = , Center = , Justified = , }","parent":null,"children":[{"krate":0,"index":1199},{"krate":0,"index":1202},{"krate":0,"index":1205},{"krate":0,"index":1208}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":955,"byte_end":967,"line_start":14,"line_end":14,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3538,"byte_end":3542,"line_start":139,"line_end":139,"column_start":9,"column_end":13},"name":"Wrap","qualname":"::enums::WordWrapping::Wrap","value":"WordWrapping::Wrap","parent":{"krate":0,"index":1229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3556,"byte_end":3562,"line_start":140,"line_end":140,"column_start":9,"column_end":15},"name":"NoWrap","qualname":"::enums::WordWrapping::NoWrap","value":"WordWrapping::NoWrap","parent":{"krate":0,"index":1229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3576,"byte_end":3590,"line_start":141,"line_end":141,"column_start":9,"column_end":23},"name":"EmergencyBreak","qualname":"::enums::WordWrapping::EmergencyBreak","value":"WordWrapping::EmergencyBreak","parent":{"krate":0,"index":1229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3604,"byte_end":3613,"line_start":142,"line_end":142,"column_start":9,"column_end":18},"name":"WholeWord","qualname":"::enums::WordWrapping::WholeWord","value":"WordWrapping::WholeWord","parent":{"krate":0,"index":1229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1242},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3627,"byte_end":3636,"line_start":143,"line_end":143,"column_start":9,"column_end":18},"name":"Character","qualname":"::enums::WordWrapping::Character","value":"WordWrapping::Character","parent":{"krate":0,"index":1229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1229},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3515,"byte_end":3527,"line_start":138,"line_end":138,"column_start":14,"column_end":26},"name":"WordWrapping","qualname":"::enums::WordWrapping","value":"pub enum WordWrapping {\n    Wrap = ,\n    NoWrap = ,\n    EmergencyBreak = ,\n    WholeWord = ,\n    Character = ,\n}","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1239},{"krate":0,"index":1242}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":955,"byte_end":967,"line_start":14,"line_end":14,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1264},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3686,"byte_end":3693,"line_start":147,"line_end":147,"column_start":9,"column_end":16},"name":"Natural","qualname":"::enums::MeasuringMode::Natural","value":"MeasuringMode::Natural","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1267},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3707,"byte_end":3717,"line_start":148,"line_end":148,"column_start":9,"column_end":19},"name":"GdiClassic","qualname":"::enums::MeasuringMode::GdiClassic","value":"MeasuringMode::GdiClassic","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1270},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3731,"byte_end":3741,"line_start":149,"line_end":149,"column_start":9,"column_end":19},"name":"GdiNatural","qualname":"::enums::MeasuringMode::GdiNatural","value":"MeasuringMode::GdiNatural","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1263},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3662,"byte_end":3675,"line_start":146,"line_end":146,"column_start":14,"column_end":27},"name":"MeasuringMode","qualname":"::enums::MeasuringMode","value":"pub enum MeasuringMode { Natural = , GdiClassic = , GdiNatural = , }","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1267},{"krate":0,"index":1270}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":955,"byte_end":967,"line_start":14,"line_end":14,"column_start":9,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3846,"byte_end":3859,"line_start":155,"line_end":155,"column_start":12,"column_end":25},"name":"UncheckedEnum","qualname":"::enums::UncheckedEnum","value":"UncheckedEnum { value }","parent":null,"children":[{"krate":0,"index":1293},{"krate":0,"index":1294}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3756,"byte_end":3766,"line_start":153,"line_end":153,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1293},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3886,"byte_end":3891,"line_start":156,"line_end":156,"column_start":9,"column_end":14},"name":"value","qualname":"::enums::UncheckedEnum::value","value":"u32","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3994,"byte_end":3997,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<UncheckedEnum<T>>::new","value":"pub fn new(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":4125,"byte_end":4132,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"as_enum","qualname":"<UncheckedEnum<T>>::as_enum","value":"pub fn as_enum(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\error.rs","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":1332},{"krate":0,"index":1337},{"krate":0,"index":1335},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":39}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\error.rs","byte_start":4351,"byte_end":4359,"line_start":10,"line_end":10,"column_start":10,"column_end":18},"name":"DWResult","qualname":"::error::DWResult","value":"result::Result<T, DWriteError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\error.rs","byte_start":4432,"byte_end":4443,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"DWriteError","qualname":"::error::DWriteError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1334},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\error.rs","byte_start":4444,"byte_end":4455,"line_start":13,"line_end":13,"column_start":24,"column_end":35},"name":"0","qualname":"::error::DWriteError::0","value":"i32","parent":{"krate":0,"index":1332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\factory.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"factory","qualname":"::factory","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\factory.rs","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":1472},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\factory.rs","byte_start":5438,"byte_end":5445,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Factory","qualname":"::factory::Factory","value":"Factory {  }","parent":null,"children":[{"krate":0,"index":53}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\factory.rs","byte_start":5510,"byte_end":5513,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Factory>::new","value":"pub fn new() -> Result<Factory, DWriteError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\factory.rs","byte_start":6062,"byte_end":6070,"line_start":35,"line_end":35,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Factory>::from_raw","value":"pub unsafe fn from_raw(*mut IDWriteFactory) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\factory.rs","byte_start":6200,"byte_end":6207,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"name":"get_raw","qualname":"<Factory>::get_raw","value":"pub unsafe fn get_raw(&Self) -> *mut IDWriteFactory","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"font","qualname":"::font","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font\\mod.rs","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":69}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font\\mod.rs","byte_start":6411,"byte_end":6415,"line_start":4,"line_end":4,"column_start":12,"column_end":16},"name":"Font","qualname":"::font::Font","value":"Font {  }","parent":null,"children":[{"krate":0,"index":64}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font\\mod.rs","byte_start":6481,"byte_end":6489,"line_start":9,"line_end":9,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Font>::from_raw","value":"pub unsafe fn from_raw(*mut IDWriteFont) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font\\mod.rs","byte_start":6613,"byte_end":6620,"line_start":15,"line_end":15,"column_start":19,"column_end":26},"name":"get_raw","qualname":"<Font>::get_raw","value":"pub unsafe fn get_raw(&Self) -> *mut IDWriteFont","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"font_collection","qualname":"::font_collection","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":1338},{"krate":0,"index":1340},{"krate":0,"index":81},{"krate":0,"index":89},{"krate":0,"index":90}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1338},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":7046,"byte_end":7060,"line_start":16,"line_end":16,"column_start":12,"column_end":26},"name":"FontCollection","qualname":"::font_collection::FontCollection","value":"FontCollection {  }","parent":null,"children":[{"krate":0,"index":1339}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":7007,"byte_end":7017,"line_start":14,"line_end":14,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":7222,"byte_end":7238,"line_start":22,"line_end":22,"column_start":12,"column_end":28},"name":"find_family_name","qualname":"<FontCollection>::find_family_name","value":"pub fn find_family_name(&Self, &str) -> DWResult<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Finds the font family with the specified family name and returns its index\n","sig":null,"attributes":[{"value":"/ Finds the font family with the specified family name and returns its index","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":7132,"byte_end":7210,"line_start":21,"line_end":21,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":7744,"byte_end":7752,"line_start":38,"line_end":38,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<FontCollection>::from_raw","value":"pub unsafe fn from_raw(*mut IDWriteFontCollection) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":7962,"byte_end":7977,"line_start":45,"line_end":45,"column_start":12,"column_end":27},"name":"get_font_family","qualname":"<FontCollection>::get_font_family","value":"pub fn get_font_family(&Self, u32) -> DWResult<FontFamily>","parent":null,"children":[],"decl_id":null,"docs":" Creates a FontFamily object given a zero-based font family index\n","sig":null,"attributes":[{"value":"/ Creates a FontFamily object given a zero-based font family index","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":7882,"byte_end":7950,"line_start":44,"line_end":44,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":8372,"byte_end":8393,"line_start":58,"line_end":58,"column_start":12,"column_end":33},"name":"get_font_family_count","qualname":"<FontCollection>::get_font_family_count","value":"pub fn get_font_family_count(&Self) -> DWResult<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of font families in the collection\n","sig":null,"attributes":[{"value":"/ Gets the number of font families in the collection","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":8306,"byte_end":8360,"line_start":57,"line_end":57,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":8670,"byte_end":8693,"line_start":64,"line_end":64,"column_start":12,"column_end":35},"name":"get_font_from_font_face","qualname":"<FontCollection>::get_font_from_font_face","value":"pub fn get_font_from_font_face(&Self, &FontFace) -> DWResult<Font>","parent":null,"children":[],"decl_id":null,"docs":" Gets the font object that corresponds to the same physical font as the specified font face object.\n The specified physical font must belong to the font collection.\n","sig":null,"attributes":[{"value":"/ Gets the font object that corresponds to the same physical font as the specified font face object.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":8484,"byte_end":8586,"line_start":62,"line_end":62,"column_start":5,"column_end":107}},{"value":"/ The specified physical font must belong to the font collection.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":8591,"byte_end":8658,"line_start":63,"line_end":63,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":9126,"byte_end":9152,"line_start":77,"line_end":77,"column_start":12,"column_end":38},"name":"get_system_font_collection","qualname":"<FontCollection>::get_system_font_collection","value":"pub fn get_system_font_collection(&Factory, bool) -> DWResult<FontCollection>","parent":null,"children":[],"decl_id":null,"docs":" Gets a FontCollection object which represents the set of installed fonts.\n","sig":null,"attributes":[{"value":"/ Gets a FontCollection object which represents the set of installed fonts.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":9037,"byte_end":9114,"line_start":76,"line_end":76,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":9680,"byte_end":9687,"line_start":94,"line_end":94,"column_start":19,"column_end":26},"name":"get_raw","qualname":"<FontCollection>::get_raw","value":"pub unsafe fn get_raw(&Self) -> *mut IDWriteFontCollection","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"font_face","qualname":"::font_face","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":146},{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":174},{"krate":0,"index":193},{"krate":0,"index":194}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\builder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"builder","qualname":"::font_face::builder","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\builder.rs","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":1556},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":137}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\builder.rs","byte_start":18201,"byte_end":18216,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"FontFaceBuilder","qualname":"::font_face::builder::FontFaceBuilder","value":"FontFaceBuilder {  }","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\builder.rs","byte_start":18476,"byte_end":18479,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<FontFaceBuilder>::new","value":"pub fn new(&'a IDWriteFactory) -> FontFaceBuilder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\builder.rs","byte_start":18748,"byte_end":18753,"line_start":31,"line_end":31,"column_start":12,"column_end":17},"name":"build","qualname":"<FontFaceBuilder>::build","value":"pub fn build(Self) -> Result<FontFace, DWriteError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\builder.rs","byte_start":20093,"byte_end":20112,"line_start":64,"line_end":64,"column_start":12,"column_end":31},"name":"with_font_face_type","qualname":"<FontFaceBuilder>::with_font_face_type","value":"pub fn with_font_face_type(Self, FontFaceType) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\builder.rs","byte_start":20246,"byte_end":20256,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"with_files","qualname":"<FontFaceBuilder>::with_files","value":"pub fn with_files(Self, &'b [FontFile]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\builder.rs","byte_start":20365,"byte_end":20380,"line_start":74,"line_end":74,"column_start":12,"column_end":27},"name":"with_face_index","qualname":"<FontFaceBuilder>::with_face_index","value":"pub fn with_face_index(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\builder.rs","byte_start":20493,"byte_end":20524,"line_start":79,"line_end":79,"column_start":12,"column_end":43},"name":"with_font_face_simulation_flags","qualname":"<FontFaceBuilder>::with_font_face_simulation_flags","value":"pub fn with_font_face_simulation_flags(Self, FontSimulations) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"metrics","qualname":"::font_face::metrics","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":1342},{"krate":0,"index":1346},{"krate":0,"index":1344},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":1347},{"krate":0,"index":1351},{"krate":0,"index":1349},{"krate":0,"index":163},{"krate":0,"index":166}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1342},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":20890,"byte_end":20901,"line_start":7,"line_end":7,"column_start":12,"column_end":23},"name":"FontMetrics","qualname":"::font_face::metrics::FontMetrics","value":"FontMetrics {  }","parent":null,"children":[{"krate":0,"index":1343}],"decl_id":null,"docs":" Specifies the metrics that are applicable to all glyphs within the font face.\n","sig":null,"attributes":[{"value":"/ Specifies the metrics that are applicable to all glyphs within the font face.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":20774,"byte_end":20855,"line_start":5,"line_end":5,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":21680,"byte_end":21699,"line_start":27,"line_end":27,"column_start":12,"column_end":31},"name":"design_units_per_em","qualname":"<FontMetrics>::design_units_per_em","value":"pub fn design_units_per_em(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The number of font design units per em unit.\n Font files use their own coordinate system of font design units.\n A font design unit is the smallest measurable unit in the em square, an imaginary square that\n is used to size and align glyphs. The concept of em square is used as a reference scale factor\n when defining font size and device transformation semantics. The size of one em square is also\n commonly used to compute the paragraph identation value.\n","sig":null,"attributes":[{"value":"/ The number of font design units per em unit.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":21160,"byte_end":21208,"line_start":20,"line_end":20,"column_start":5,"column_end":53}},{"value":"/ Font files use their own coordinate system of font design units.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":21213,"byte_end":21281,"line_start":21,"line_end":21,"column_start":5,"column_end":73}},{"value":"/ A font design unit is the smallest measurable unit in the em square, an imaginary square that","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":21286,"byte_end":21383,"line_start":22,"line_end":22,"column_start":5,"column_end":102}},{"value":"/ is used to size and align glyphs. The concept of em square is used as a reference scale factor","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":21388,"byte_end":21486,"line_start":23,"line_end":23,"column_start":5,"column_end":103}},{"value":"/ when defining font size and device transformation semantics. The size of one em square is also","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":21491,"byte_end":21589,"line_start":24,"line_end":24,"column_start":5,"column_end":103}},{"value":"/ commonly used to compute the paragraph identation value.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":21594,"byte_end":21654,"line_start":25,"line_end":25,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":21659,"byte_end":21668,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":21951,"byte_end":21957,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"ascent","qualname":"<FontMetrics>::ascent","value":"pub fn ascent(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The ascent value of the font face in font design units.\n Ascent is the distance from the top of font character alignment box to the English baseline.\n","sig":null,"attributes":[{"value":"/ The ascent value of the font face in font design units.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":21765,"byte_end":21824,"line_start":31,"line_end":31,"column_start":5,"column_end":64}},{"value":"/ Ascent is the distance from the top of font character alignment box to the English baseline.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":21829,"byte_end":21925,"line_start":32,"line_end":32,"column_start":5,"column_end":101}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":21930,"byte_end":21939,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":22204,"byte_end":22211,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"descent","qualname":"<FontMetrics>::descent","value":"pub fn descent(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The descent value of the font face in font design units.\n Descent is the distance from the bottom of font character alignment box to the English baseline.\n","sig":null,"attributes":[{"value":"/ The descent value of the font face in font design units.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":22013,"byte_end":22073,"line_start":38,"line_end":38,"column_start":5,"column_end":65}},{"value":"/ Descent is the distance from the bottom of font character alignment box to the English baseline.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":22078,"byte_end":22178,"line_start":39,"line_end":39,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":22183,"byte_end":22192,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":22701,"byte_end":22709,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"line_gap","qualname":"<FontMetrics>::line_gap","value":"pub fn line_gap(&Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" The line gap in font design units. Recommended additional white space to add between lines to\n improve legibility. The recommended line spacing (baseline-to-baseline distance) is the sum of ascent,\n descent, and lineGap. The line gap is usually positive or zero but can be negative, in which case the\n recommended line spacing is less than the height of the character alignment box.\n","sig":null,"attributes":[{"value":"/ The line gap in font design units. Recommended additional white space to add between lines to","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":22268,"byte_end":22365,"line_start":45,"line_end":45,"column_start":5,"column_end":102}},{"value":"/ improve legibility. The recommended line spacing (baseline-to-baseline distance) is the sum of ascent,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":22370,"byte_end":22476,"line_start":46,"line_end":46,"column_start":5,"column_end":111}},{"value":"/ descent, and lineGap. The line gap is usually positive or zero but can be negative, in which case the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":22481,"byte_end":22586,"line_start":47,"line_end":47,"column_start":5,"column_end":110}},{"value":"/ recommended line spacing is less than the height of the character alignment box.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":22591,"byte_end":22675,"line_start":48,"line_end":48,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":22680,"byte_end":22689,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":23069,"byte_end":23079,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"cap_height","qualname":"<FontMetrics>::cap_height","value":"pub fn cap_height(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The cap height value of the font face in font design units. Cap height is the distance from the English\n baseline to the top of a typical English capital. Capital \"H\" is often used as a reference character for\n the purpose of calculating the cap height value.\n","sig":null,"attributes":[{"value":"/ The cap height value of the font face in font design units. Cap height is the distance from the English","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":22766,"byte_end":22873,"line_start":54,"line_end":54,"column_start":5,"column_end":112}},{"value":"/ baseline to the top of a typical English capital. Capital \"H\" is often used as a reference character for","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":22878,"byte_end":22986,"line_start":55,"line_end":55,"column_start":5,"column_end":113}},{"value":"/ the purpose of calculating the cap height value.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":22991,"byte_end":23043,"line_start":56,"line_end":56,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":23048,"byte_end":23057,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":23354,"byte_end":23362,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"x_height","qualname":"<FontMetrics>::x_height","value":"pub fn x_height(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The x-height value of the font face in font design units. x-height is the distance from the English baseline\n to the top of lowercase letter \"x\", or a similar lowercase character.\n","sig":null,"attributes":[{"value":"/ The x-height value of the font face in font design units. x-height is the distance from the English baseline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":23138,"byte_end":23250,"line_start":62,"line_end":62,"column_start":5,"column_end":117}},{"value":"/ to the top of lowercase letter \"x\", or a similar lowercase character.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":23255,"byte_end":23328,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":23333,"byte_end":23342,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":23701,"byte_end":23719,"line_start":73,"line_end":73,"column_start":12,"column_end":30},"name":"underline_position","qualname":"<FontMetrics>::underline_position","value":"pub fn underline_position(&Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" The underline position value of the font face in font design units. Underline position is the position of\n underline relative to the English baseline. The value is usually made negative in order to place the underline\n below the baseline.\n","sig":null,"attributes":[{"value":"/ The underline position value of the font face in font design units. Underline position is the position of","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":23419,"byte_end":23528,"line_start":69,"line_end":69,"column_start":5,"column_end":114}},{"value":"/ underline relative to the English baseline. The value is usually made negative in order to place the underline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":23533,"byte_end":23647,"line_start":70,"line_end":70,"column_start":5,"column_end":119}},{"value":"/ below the baseline.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":23652,"byte_end":23675,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":23680,"byte_end":23689,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":23894,"byte_end":23913,"line_start":79,"line_end":79,"column_start":12,"column_end":31},"name":"underline_thickness","qualname":"<FontMetrics>::underline_thickness","value":"pub fn underline_thickness(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The suggested underline thickness value of the font face in font design units.\n","sig":null,"attributes":[{"value":"/ The suggested underline thickness value of the font face in font design units.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":23786,"byte_end":23868,"line_start":77,"line_end":77,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":23873,"byte_end":23882,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":24279,"byte_end":24301,"line_start":87,"line_end":87,"column_start":12,"column_end":34},"name":"strikethrough_position","qualname":"<FontMetrics>::strikethrough_position","value":"pub fn strikethrough_position(&Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" The strikethrough position value of the font face in font design units. Strikethrough position is the\n position of strikethrough relative to the English baseline. The value is usually made positive in order\n to place the strikethrough above the baseline.\n","sig":null,"attributes":[{"value":"/ The strikethrough position value of the font face in font design units. Strikethrough position is the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":23981,"byte_end":24086,"line_start":83,"line_end":83,"column_start":5,"column_end":110}},{"value":"/ position of strikethrough relative to the English baseline. The value is usually made positive in order","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":24091,"byte_end":24198,"line_start":84,"line_end":84,"column_start":5,"column_end":112}},{"value":"/ to place the strikethrough above the baseline.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":24203,"byte_end":24253,"line_start":85,"line_end":85,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":24258,"byte_end":24267,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":24484,"byte_end":24507,"line_start":93,"line_end":93,"column_start":12,"column_end":35},"name":"strikethrough_thickness","qualname":"<FontMetrics>::strikethrough_thickness","value":"pub fn strikethrough_thickness(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The suggested strikethrough thickness value of the font face in font design units.\n","sig":null,"attributes":[{"value":"/ The suggested strikethrough thickness value of the font face in font design units.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":24372,"byte_end":24458,"line_start":91,"line_end":91,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":24463,"byte_end":24472,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1347},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":24711,"byte_end":24723,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"GlyphMetrics","qualname":"::font_face::metrics::GlyphMetrics","value":"GlyphMetrics {  }","parent":null,"children":[{"krate":0,"index":1348}],"decl_id":null,"docs":" Specifies the metrics of an individual glyph. The units depend on how the metrics are obtained.\n","sig":null,"attributes":[{"value":"/ Specifies the metrics of an individual glyph. The units depend on how the metrics are obtained.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":24577,"byte_end":24676,"line_start":98,"line_end":98,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":25284,"byte_end":25301,"line_start":117,"line_end":117,"column_start":12,"column_end":29},"name":"left_side_bearing","qualname":"<GlyphMetrics>::left_side_bearing","value":"pub fn left_side_bearing(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Specifies the X offset from the glyph origin to the left edge of the black box.\n The glyph origin is the current horizontal writing position. A negative value means the black\n box extends to the left of the origin (often true for lowercase italic 'f').\n","sig":null,"attributes":[{"value":"/ Specifies the X offset from the glyph origin to the left edge of the black box.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":24988,"byte_end":25071,"line_start":113,"line_end":113,"column_start":5,"column_end":88}},{"value":"/ The glyph origin is the current horizontal writing position. A negative value means the black","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":25076,"byte_end":25173,"line_start":114,"line_end":114,"column_start":5,"column_end":102}},{"value":"/ box extends to the left of the origin (often true for lowercase italic 'f').","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":25178,"byte_end":25258,"line_start":115,"line_end":115,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":25263,"byte_end":25272,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":25522,"byte_end":25535,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"advance_width","qualname":"<GlyphMetrics>::advance_width","value":"pub fn advance_width(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Specifies the X offset from the origin of the current glyph to the origin of the next glyph\n when writing horizontally.\n","sig":null,"attributes":[{"value":"/ Specifies the X offset from the origin of the current glyph to the origin of the next glyph","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":25366,"byte_end":25461,"line_start":121,"line_end":121,"column_start":5,"column_end":100}},{"value":"/ when writing horizontally.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":25466,"byte_end":25496,"line_start":122,"line_end":122,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":25501,"byte_end":25510,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":25846,"byte_end":25864,"line_start":132,"line_end":132,"column_start":12,"column_end":30},"name":"right_side_bearing","qualname":"<GlyphMetrics>::right_side_bearing","value":"pub fn right_side_bearing(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Specifies the X offset from the right edge of the black box to the origin of the next glyph\n when writing horizontally. The value is negative when the right edge of the black box\n overhangs the layout box.\n","sig":null,"attributes":[{"value":"/ Specifies the X offset from the right edge of the black box to the origin of the next glyph","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":25597,"byte_end":25692,"line_start":128,"line_end":128,"column_start":5,"column_end":100}},{"value":"/ when writing horizontally. The value is negative when the right edge of the black box","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":25697,"byte_end":25786,"line_start":129,"line_end":129,"column_start":5,"column_end":94}},{"value":"/ overhangs the layout box.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":25791,"byte_end":25820,"line_start":130,"line_end":130,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":25825,"byte_end":25834,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":26176,"byte_end":26192,"line_start":140,"line_end":140,"column_start":12,"column_end":28},"name":"top_side_bearing","qualname":"<GlyphMetrics>::top_side_bearing","value":"pub fn top_side_bearing(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Specifies the vertical offset from the vertical origin to the top of the black box.\n Thus, a positive value adds whitespace whereas a negative value means the glyph overhangs\n the top of the layout box.\n","sig":null,"attributes":[{"value":"/ Specifies the vertical offset from the vertical origin to the top of the black box.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":25930,"byte_end":26017,"line_start":136,"line_end":136,"column_start":5,"column_end":92}},{"value":"/ Thus, a positive value adds whitespace whereas a negative value means the glyph overhangs","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":26022,"byte_end":26115,"line_start":137,"line_end":137,"column_start":5,"column_end":98}},{"value":"/ the top of the layout box.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":26120,"byte_end":26150,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":26155,"byte_end":26164,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":26688,"byte_end":26702,"line_start":149,"line_end":149,"column_start":12,"column_end":26},"name":"advance_height","qualname":"<GlyphMetrics>::advance_height","value":"pub fn advance_height(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Specifies the Y offset from the vertical origin of the current glyph to the vertical origin\n of the next glyph when writing vertically. Note that the term \"origin\" by itself denotes the horizontal origin.\n The vertical origin is different. Its Y coordinate is specified by verticalOriginY value, and its X coordinate is\n half the advanceWidth to the right of the horizontal origin.\n","sig":null,"attributes":[{"value":"/ Specifies the Y offset from the vertical origin of the current glyph to the vertical origin","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":26256,"byte_end":26351,"line_start":144,"line_end":144,"column_start":5,"column_end":100}},{"value":"/ of the next glyph when writing vertically. Note that the term \"origin\" by itself denotes the horizontal origin.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":26356,"byte_end":26471,"line_start":145,"line_end":145,"column_start":5,"column_end":120}},{"value":"/ The vertical origin is different. Its Y coordinate is specified by verticalOriginY value, and its X coordinate is","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":26476,"byte_end":26593,"line_start":146,"line_end":146,"column_start":5,"column_end":122}},{"value":"/ half the advanceWidth to the right of the horizontal origin.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":26598,"byte_end":26662,"line_start":147,"line_end":147,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":26667,"byte_end":26676,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":27056,"byte_end":27075,"line_start":157,"line_end":157,"column_start":12,"column_end":31},"name":"bottom_side_bearing","qualname":"<GlyphMetrics>::bottom_side_bearing","value":"pub fn bottom_side_bearing(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Specifies the vertical distance from the bottom edge of the black box to the advance height.\n This is positive when the bottom edge of the black box is within the layout box,\n or negative when the bottom edge of black box overhangs the layout box.\n","sig":null,"attributes":[{"value":"/ Specifies the vertical distance from the bottom edge of the black box to the advance height.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":26765,"byte_end":26861,"line_start":153,"line_end":153,"column_start":5,"column_end":101}},{"value":"/ This is positive when the bottom edge of the black box is within the layout box,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":26866,"byte_end":26950,"line_start":154,"line_end":154,"column_start":5,"column_end":89}},{"value":"/ or negative when the bottom edge of black box overhangs the layout box.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":26955,"byte_end":27030,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":27035,"byte_end":27044,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":27430,"byte_end":27447,"line_start":165,"line_end":165,"column_start":12,"column_end":29},"name":"vertical_origin_y","qualname":"<GlyphMetrics>::vertical_origin_y","value":"pub fn vertical_origin_y(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Specifies the Y coordinate of a glyph's vertical origin, in the font's design coordinate system.\n The y coordinate of a glyph's vertical origin is the sum of the glyph's top side bearing and the\n top (that is, yMax) of the glyph's bounding box.\n","sig":null,"attributes":[{"value":"/ Specifies the Y coordinate of a glyph's vertical origin, in the font's design coordinate system.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":27142,"byte_end":27242,"line_start":161,"line_end":161,"column_start":5,"column_end":105}},{"value":"/ The y coordinate of a glyph's vertical origin is the sum of the glyph's top side bearing and the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":27247,"byte_end":27347,"line_start":162,"line_end":162,"column_start":5,"column_end":105}},{"value":"/ top (that is, yMax) of the glyph's bounding box.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":27352,"byte_end":27404,"line_start":163,"line_end":163,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":27409,"byte_end":27418,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1352},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":10389,"byte_end":10397,"line_start":23,"line_end":23,"column_start":12,"column_end":20},"name":"FontFace","qualname":"::font_face::FontFace","value":"FontFace {  }","parent":null,"children":[{"krate":0,"index":1353}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":10350,"byte_end":10360,"line_start":21,"line_end":21,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":10464,"byte_end":10470,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"create","qualname":"<FontFace>::create","value":"pub fn create(&Factory) -> FontFaceBuilder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":10596,"byte_end":10604,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<FontFace>::from_raw","value":"pub unsafe fn from_raw(*mut IDWriteFontFace) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":10812,"byte_end":10836,"line_start":38,"line_end":38,"column_start":12,"column_end":36},"name":"get_design_glyph_metrics","qualname":"<FontFace>::get_design_glyph_metrics","value":"pub fn get_design_glyph_metrics(&Self, &[u16], bool)\n-> DWResult<Vec<GlyphMetrics>>","parent":null,"children":[],"decl_id":null,"docs":" Obtains ideal (resolution-independent) glyph metrics in font design units.\n","sig":null,"attributes":[{"value":"/ Obtains ideal (resolution-independent) glyph metrics in font design units.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":10722,"byte_end":10800,"line_start":37,"line_end":37,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":11545,"byte_end":11554,"line_start":60,"line_end":60,"column_start":12,"column_end":21},"name":"get_files","qualname":"<FontFace>::get_files","value":"pub fn get_files(&Self) -> DWResult<Vec<FontFile>>","parent":null,"children":[],"decl_id":null,"docs":" Obtains the font files representing a font face.\n","sig":null,"attributes":[{"value":"/ Obtains the font files representing a font face.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":11481,"byte_end":11533,"line_start":59,"line_end":59,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":12386,"byte_end":12418,"line_start":82,"line_end":82,"column_start":12,"column_end":44},"name":"get_gdi_compatible_glyph_metrics","qualname":"<FontFace>::get_gdi_compatible_glyph_metrics","value":"pub fn get_gdi_compatible_glyph_metrics(&Self, f32, f32,\n                                        Option<&DWRITE_MATRIX>, bool, &[u16],\n                                        bool) -> DWResult<Vec<GlyphMetrics>>","parent":null,"children":[],"decl_id":null,"docs":" Obtains glyph metrics in font design units with the return values compatible with what GDI would produce.\n","sig":null,"attributes":[{"value":"/ Obtains glyph metrics in font design units with the return values compatible with what GDI would produce.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":12265,"byte_end":12374,"line_start":81,"line_end":81,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":13634,"byte_end":13660,"line_start":116,"line_end":116,"column_start":12,"column_end":38},"name":"get_gdi_compatible_metrics","qualname":"<FontFace>::get_gdi_compatible_metrics","value":"pub fn get_gdi_compatible_metrics(&Self, f32, f32, Option<&DWRITE_MATRIX>)\n-> DWResult<FontMetrics>","parent":null,"children":[],"decl_id":null,"docs":" Obtains design units and common metrics for the font face.\n These metrics are applicable to all the glyphs within a fontface and are used by applications for layout calculations.\n","sig":null,"attributes":[{"value":"/ Obtains design units and common metrics for the font face.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":13433,"byte_end":13495,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/ These metrics are applicable to all the glyphs within a fontface and are used by applications for layout calculations.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":13500,"byte_end":13622,"line_start":115,"line_end":115,"column_start":5,"column_end":127}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":14386,"byte_end":14401,"line_start":142,"line_end":142,"column_start":12,"column_end":27},"name":"get_glyph_count","qualname":"<FontFace>::get_glyph_count","value":"pub fn get_glyph_count(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Obtains the number of glyphs in the font face.\n","sig":null,"attributes":[{"value":"/ Obtains the number of glyphs in the font face.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":14324,"byte_end":14374,"line_start":141,"line_end":141,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":14598,"byte_end":14615,"line_start":147,"line_end":147,"column_start":12,"column_end":29},"name":"get_glyph_indices","qualname":"<FontFace>::get_glyph_indices","value":"pub fn get_glyph_indices(&Self, &[u32]) -> DWResult<Vec<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the nominal mapping of UCS4 Unicode code points to glyph indices as defined by the font 'CMAP' table.\n","sig":null,"attributes":[{"value":"/ Returns the nominal mapping of UCS4 Unicode code points to glyph indices as defined by the font 'CMAP' table.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":14473,"byte_end":14586,"line_start":146,"line_end":146,"column_start":5,"column_end":118}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":15328,"byte_end":15349,"line_start":165,"line_end":165,"column_start":12,"column_end":33},"name":"get_glyph_run_outline","qualname":"<FontFace>::get_glyph_run_outline","value":"pub fn get_glyph_run_outline(&Self, f32, &[u16], Option<&[f32]>,\n                             Option<&[DWRITE_GLYPH_OFFSET]>, bool, bool,\n                             *mut IDWriteGeometrySink) -> DWResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Computes the outline of a run of glyphs by calling back to the outline sink interface.\n If glyph_advances and/or glyph_offsets are provided, they must be the same length as glyph_indices, or the function will panic.\n","sig":null,"attributes":[{"value":"/ Computes the outline of a run of glyphs by calling back to the outline sink interface.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":15090,"byte_end":15180,"line_start":163,"line_end":163,"column_start":5,"column_end":95}},{"value":"/ If glyph_advances and/or glyph_offsets are provided, they must be the same length as glyph_indices, or the function will panic.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":15185,"byte_end":15316,"line_start":164,"line_end":164,"column_start":5,"column_end":136}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":16691,"byte_end":16700,"line_start":205,"line_end":205,"column_start":12,"column_end":21},"name":"get_index","qualname":"<FontFace>::get_index","value":"pub fn get_index(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Obtains the index of a font face in the context of its font files.\n","sig":null,"attributes":[{"value":"/ Obtains the index of a font face in the context of its font files.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":16609,"byte_end":16679,"line_start":204,"line_end":204,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":16977,"byte_end":16988,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"get_metrics","qualname":"<FontFace>::get_metrics","value":"pub fn get_metrics(&Self) -> FontMetrics","parent":null,"children":[],"decl_id":null,"docs":" Obtains design units and common metrics for the font face.\n These metrics are applicable to all the glyphs within a font face\n and are used by applications for layout calculations.\n","sig":null,"attributes":[{"value":"/ Obtains design units and common metrics for the font face.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":16767,"byte_end":16829,"line_start":209,"line_end":209,"column_start":5,"column_end":67}},{"value":"/ These metrics are applicable to all the glyphs within a font face","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":16834,"byte_end":16903,"line_start":210,"line_end":210,"column_start":5,"column_end":74}},{"value":"/ and are used by applications for layout calculations.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":16908,"byte_end":16965,"line_start":211,"line_end":211,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":17204,"byte_end":17211,"line_start":220,"line_end":220,"column_start":19,"column_end":26},"name":"get_raw","qualname":"<FontFace>::get_raw","value":"pub unsafe fn get_raw(&Self) -> *mut IDWriteFontFace","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":17342,"byte_end":17350,"line_start":225,"line_end":225,"column_start":12,"column_end":20},"name":"get_type","qualname":"<FontFace>::get_type","value":"pub fn get_type(&Self) -> FontFaceType","parent":null,"children":[],"decl_id":null,"docs":" Obtains the file format type of a font face.\n","sig":null,"attributes":[{"value":"/ Obtains the file format type of a font face.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":17282,"byte_end":17330,"line_start":224,"line_end":224,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":17536,"byte_end":17551,"line_start":230,"line_end":230,"column_start":12,"column_end":27},"name":"get_simulations","qualname":"<FontFace>::get_simulations","value":"pub fn get_simulations(&Self) -> DWResult<FontSimulations>","parent":null,"children":[],"decl_id":null,"docs":" Obtains the algorithmic style simulation flags of a font face.\n","sig":null,"attributes":[{"value":"/ Obtains the algorithmic style simulation flags of a font face.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":17458,"byte_end":17524,"line_start":229,"line_end":229,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":17761,"byte_end":17775,"line_start":235,"line_end":235,"column_start":12,"column_end":26},"name":"is_symbol_font","qualname":"<FontFace>::is_symbol_font","value":"pub fn is_symbol_font(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether the font is a symbol font.\n","sig":null,"attributes":[{"value":"/ Determines whether the font is a symbol font.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":17700,"byte_end":17749,"line_start":234,"line_end":234,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_family\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"font_family","qualname":"::font_family","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_family\\mod.rs","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":1356},{"krate":0,"index":1358},{"krate":0,"index":209},{"krate":0,"index":215},{"krate":0,"index":216}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1356},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_family\\mod.rs","byte_start":27844,"byte_end":27854,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"FontFamily","qualname":"::font_family::FontFamily","value":"FontFamily {  }","parent":null,"children":[{"krate":0,"index":1357}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_family\\mod.rs","byte_start":27805,"byte_end":27815,"line_start":14,"line_end":14,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_family\\mod.rs","byte_start":27932,"byte_end":27940,"line_start":21,"line_end":21,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<FontFamily>::from_raw","value":"pub unsafe fn from_raw(*mut IDWriteFontFamily) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_family\\mod.rs","byte_start":28217,"byte_end":28232,"line_start":28,"line_end":28,"column_start":12,"column_end":27},"name":"get_family_name","qualname":"<FontFamily>::get_family_name","value":"pub fn get_family_name(&Self) -> DWResult<String>","parent":null,"children":[],"decl_id":null,"docs":" Shortcut method based on GetFamilyNames to get the family name in the current locale (or EN-US or the first locale available, if not found)\n","sig":null,"attributes":[{"value":"/ Shortcut method based on GetFamilyNames to get the family name in the current locale (or EN-US or the first locale available, if not found)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_family\\mod.rs","byte_start":28062,"byte_end":28205,"line_start":27,"line_end":27,"column_start":5,"column_end":148}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_family\\mod.rs","byte_start":29556,"byte_end":29579,"line_start":63,"line_end":63,"column_start":12,"column_end":35},"name":"get_first_matching_font","qualname":"<FontFamily>::get_first_matching_font","value":"pub fn get_first_matching_font(&Self, FontWeight, FontStretch, FontStyle)\n-> DWResult<Font>","parent":null,"children":[],"decl_id":null,"docs":" Gets the font that best matches the specified properties.\n","sig":null,"attributes":[{"value":"/ Gets the font that best matches the specified properties.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_family\\mod.rs","byte_start":29483,"byte_end":29544,"line_start":62,"line_end":62,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_family\\mod.rs","byte_start":30233,"byte_end":30251,"line_start":86,"line_end":86,"column_start":12,"column_end":30},"name":"get_matching_fonts","qualname":"<FontFamily>::get_matching_fonts","value":"pub fn get_matching_fonts(&Self, FontWeight, FontStretch, FontStyle)\n-> DWResult<FontList>","parent":null,"children":[],"decl_id":null,"docs":" Gets a list of fonts in the font family ranked in order of how well they match the specified properties.\n","sig":null,"attributes":[{"value":"/ Gets a list of fonts in the font family ranked in order of how well they match the specified properties.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_family\\mod.rs","byte_start":30113,"byte_end":30221,"line_start":85,"line_end":85,"column_start":5,"column_end":113}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_family\\mod.rs","byte_start":30761,"byte_end":30768,"line_start":105,"line_end":105,"column_start":19,"column_end":26},"name":"get_raw","qualname":"<FontFamily>::get_raw","value":"pub unsafe fn get_raw(&Self) -> *mut IDWriteFontFamily","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"font_file","qualname":"::font_file","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\mod.rs","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":1360},{"krate":0,"index":1362},{"krate":0,"index":243},{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\builder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"builder","qualname":"::font_file::builder","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\builder.rs","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":1608},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":238}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\builder.rs","byte_start":31847,"byte_end":31862,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"FontFileBuilder","qualname":"::font_file::builder::FontFileBuilder","value":"FontFileBuilder {  }","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\builder.rs","byte_start":32018,"byte_end":32021,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<FontFileBuilder>::new","value":"pub fn new(&'a IDWriteFactory) -> FontFileBuilder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\builder.rs","byte_start":32215,"byte_end":32220,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"build","qualname":"<FontFileBuilder>::build","value":"pub fn build(Self) -> Result<FontFile, DWriteError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\builder.rs","byte_start":33018,"byte_end":33032,"line_start":52,"line_end":52,"column_start":12,"column_end":26},"name":"with_file_path","qualname":"<FontFileBuilder>::with_file_path","value":"pub fn with_file_path(Self, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1360},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\mod.rs","byte_start":31093,"byte_end":31101,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"FontFile","qualname":"::font_file::FontFile","value":"FontFile {  }","parent":null,"children":[{"krate":0,"index":1361}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\mod.rs","byte_start":31054,"byte_end":31064,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\mod.rs","byte_start":31168,"byte_end":31174,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"create","qualname":"<FontFile>::create","value":"pub fn create(&Factory) -> FontFileBuilder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\mod.rs","byte_start":31301,"byte_end":31309,"line_start":19,"line_end":19,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<FontFile>::from_raw","value":"pub unsafe fn from_raw(*mut IDWriteFontFile) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\mod.rs","byte_start":31441,"byte_end":31448,"line_start":25,"line_end":25,"column_start":19,"column_end":26},"name":"get_raw","qualname":"<FontFile>::get_raw","value":"pub unsafe fn get_raw(&Self) -> *mut IDWriteFontFile","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_list\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"font_list","qualname":"::font_list","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_list\\mod.rs","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":1364},{"krate":0,"index":1366},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":256}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1364},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_list\\mod.rs","byte_start":33240,"byte_end":33248,"line_start":6,"line_end":6,"column_start":12,"column_end":20},"name":"FontList","qualname":"::font_list::FontList","value":"FontList {  }","parent":null,"children":[{"krate":0,"index":1365}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_list\\mod.rs","byte_start":33201,"byte_end":33211,"line_start":4,"line_end":4,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_list\\mod.rs","byte_start":33322,"byte_end":33330,"line_start":11,"line_end":11,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<FontList>::from_raw","value":"pub unsafe fn from_raw(*mut IDWriteFontList) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_list\\mod.rs","byte_start":33462,"byte_end":33469,"line_start":17,"line_end":17,"column_start":19,"column_end":26},"name":"get_raw","qualname":"<FontList>::get_raw","value":"pub unsafe fn get_raw(&Self) -> *mut IDWriteFontList","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"inline_object","qualname":"::inline_object","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":322},{"krate":0,"index":327},{"krate":0,"index":335},{"krate":0,"index":340},{"krate":0,"index":345},{"krate":0,"index":1368},{"krate":0,"index":1380},{"krate":0,"index":1378},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":355}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":33909,"byte_end":33930,"line_start":15,"line_end":15,"column_start":12,"column_end":33},"name":"InlineObjectContainer","qualname":"::inline_object::InlineObjectContainer","value":"InlineObjectContainer {  }","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":33887,"byte_end":33897,"line_start":14,"line_end":14,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":34050,"byte_end":34053,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<InlineObjectContainer>::new","value":"pub fn new<O>(O) -> Arc<InlineObjectContainer> where\nO: Into<Box<InlineObject>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":34302,"byte_end":34314,"line_start":31,"line_end":31,"column_start":19,"column_end":31},"name":"try_from_ptr","qualname":"<InlineObjectContainer>::try_from_ptr","value":"pub unsafe fn try_from_ptr(*mut IDWriteInlineObject)\n-> Option<Arc<InlineObjectContainer>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":34621,"byte_end":34629,"line_start":43,"line_end":43,"column_start":19,"column_end":27},"name":"into_raw","qualname":"<InlineObjectContainer>::into_raw","value":"pub unsafe fn into_raw(Arc<InlineObjectContainer>) -> *mut IDWriteInlineObject","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":34761,"byte_end":34773,"line_start":48,"line_end":48,"column_start":11,"column_end":23},"name":"InlineObject","qualname":"::inline_object::InlineObject","value":"InlineObject: Any + Send + Sync","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":34802,"byte_end":34806,"line_start":49,"line_end":49,"column_start":8,"column_end":12},"name":"draw","qualname":"::inline_object::InlineObject::draw","value":"pub fn draw(&Self, &DrawingContext) -> DWResult<()>","parent":{"krate":0,"index":322},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":34864,"byte_end":34875,"line_start":50,"line_end":50,"column_start":8,"column_end":19},"name":"get_metrics","qualname":"::inline_object::InlineObject::get_metrics","value":"pub fn get_metrics(&Self) -> DWResult<InlineObjectMetrics>","parent":{"krate":0,"index":322},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":34924,"byte_end":34944,"line_start":51,"line_end":51,"column_start":8,"column_end":28},"name":"get_overhang_metrics","qualname":"::inline_object::InlineObject::get_overhang_metrics","value":"pub fn get_overhang_metrics(&Self) -> DWResult<InlineObjectOverhang>","parent":{"krate":0,"index":322},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":34994,"byte_end":35014,"line_start":52,"line_end":52,"column_start":8,"column_end":28},"name":"get_break_conditions","qualname":"::inline_object::InlineObject::get_break_conditions","value":"pub fn get_break_conditions(&Self)\n-> DWResult<(BreakCondition, BreakCondition)>","parent":{"krate":0,"index":322},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35083,"byte_end":35097,"line_start":55,"line_end":55,"column_start":12,"column_end":26},"name":"DrawingContext","qualname":"::inline_object::DrawingContext","value":"DrawingContext { client_context, renderer, origin_x, origin_y, is_sideways, is_right_to_left, client_effect }","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35108,"byte_end":35122,"line_start":56,"line_end":56,"column_start":9,"column_end":23},"name":"client_context","qualname":"::inline_object::DrawingContext::client_context","value":"*mut std::ffi::c_void","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35145,"byte_end":35153,"line_start":57,"line_end":57,"column_start":9,"column_end":17},"name":"renderer","qualname":"::inline_object::DrawingContext::renderer","value":"wio::com::ComPtr<winapi::um::dwrite::IDWriteTextRenderer>","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35192,"byte_end":35200,"line_start":58,"line_end":58,"column_start":9,"column_end":17},"name":"origin_x","qualname":"::inline_object::DrawingContext::origin_x","value":"f32","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35215,"byte_end":35223,"line_start":59,"line_end":59,"column_start":9,"column_end":17},"name":"origin_y","qualname":"::inline_object::DrawingContext::origin_y","value":"f32","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35238,"byte_end":35249,"line_start":60,"line_end":60,"column_start":9,"column_end":20},"name":"is_sideways","qualname":"::inline_object::DrawingContext::is_sideways","value":"bool","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35265,"byte_end":35281,"line_start":61,"line_end":61,"column_start":9,"column_end":25},"name":"is_right_to_left","qualname":"::inline_object::DrawingContext::is_right_to_left","value":"bool","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35297,"byte_end":35310,"line_start":62,"line_end":62,"column_start":9,"column_end":22},"name":"client_effect","qualname":"::inline_object::DrawingContext::client_effect","value":"std::option::Option<wio::com::ComPtr<winapi::um::unknwnbase::IUnknown>>","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35352,"byte_end":35371,"line_start":65,"line_end":65,"column_start":12,"column_end":31},"name":"InlineObjectMetrics","qualname":"::inline_object::InlineObjectMetrics","value":"InlineObjectMetrics { width, height, baseline, supports_sideways }","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35382,"byte_end":35387,"line_start":66,"line_end":66,"column_start":9,"column_end":14},"name":"width","qualname":"::inline_object::InlineObjectMetrics::width","value":"f32","parent":{"krate":0,"index":335},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35402,"byte_end":35408,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"name":"height","qualname":"::inline_object::InlineObjectMetrics::height","value":"f32","parent":{"krate":0,"index":335},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35423,"byte_end":35431,"line_start":68,"line_end":68,"column_start":9,"column_end":17},"name":"baseline","qualname":"::inline_object::InlineObjectMetrics::baseline","value":"f32","parent":{"krate":0,"index":335},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35446,"byte_end":35463,"line_start":69,"line_end":69,"column_start":9,"column_end":26},"name":"supports_sideways","qualname":"::inline_object::InlineObjectMetrics::supports_sideways","value":"bool","parent":{"krate":0,"index":335},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35485,"byte_end":35505,"line_start":72,"line_end":72,"column_start":12,"column_end":32},"name":"InlineObjectOverhang","qualname":"::inline_object::InlineObjectOverhang","value":"InlineObjectOverhang { left, top, right, bottom }","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35516,"byte_end":35520,"line_start":73,"line_end":73,"column_start":9,"column_end":13},"name":"left","qualname":"::inline_object::InlineObjectOverhang::left","value":"f32","parent":{"krate":0,"index":340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35535,"byte_end":35538,"line_start":74,"line_end":74,"column_start":9,"column_end":12},"name":"top","qualname":"::inline_object::InlineObjectOverhang::top","value":"f32","parent":{"krate":0,"index":340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35553,"byte_end":35558,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"name":"right","qualname":"::inline_object::InlineObjectOverhang::right","value":"f32","parent":{"krate":0,"index":340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35573,"byte_end":35579,"line_start":76,"line_end":76,"column_start":9,"column_end":15},"name":"bottom","qualname":"::inline_object::InlineObjectOverhang::bottom","value":"f32","parent":{"krate":0,"index":340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35606,"byte_end":35622,"line_start":79,"line_end":79,"column_start":18,"column_end":34},"name":"IntoInlineObject","qualname":"::inline_object::IntoInlineObject","value":"IntoInlineObject","parent":null,"children":[{"krate":0,"index":346}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35639,"byte_end":35648,"line_start":80,"line_end":80,"column_start":15,"column_end":24},"name":"into_iobj","qualname":"::inline_object::IntoInlineObject::into_iobj","value":"pub unsafe fn into_iobj(Self) -> *mut IDWriteInlineObject","parent":{"krate":0,"index":345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35736,"byte_end":35751,"line_start":84,"line_end":84,"column_start":12,"column_end":27},"name":"RawInlineObject","qualname":"::inline_object::RawInlineObject","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35835,"byte_end":35838,"line_start":88,"line_end":88,"column_start":19,"column_end":22},"name":"new","qualname":"<RawInlineObject>::new","value":"pub unsafe fn new(*mut IDWriteInlineObject) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35807,"byte_end":35816,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35948,"byte_end":35956,"line_start":93,"line_end":93,"column_start":19,"column_end":27},"name":"into_raw","qualname":"<RawInlineObject>::into_raw","value":"pub unsafe fn into_raw(Self) -> *mut IDWriteInlineObject","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35920,"byte_end":35929,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"text_format","qualname":"::text_format","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":1381},{"krate":0,"index":1387},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":407},{"krate":0,"index":434},{"krate":0,"index":438},{"krate":0,"index":439}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\builder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"builder","qualname":"::text_format::builder","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\builder.rs","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":1730},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":395}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\builder.rs","byte_start":48999,"byte_end":49016,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"TextFormatBuilder","qualname":"::text_format::builder::TextFormatBuilder","value":"TextFormatBuilder {  }","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\builder.rs","byte_start":49300,"byte_end":49303,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<TextFormatBuilder>::new","value":"pub fn new(&'a IDWriteFactory) -> TextFormatBuilder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\builder.rs","byte_start":49663,"byte_end":49668,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"build","qualname":"<TextFormatBuilder>::build","value":"pub fn build(Self) -> Result<TextFormat, DWriteError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\builder.rs","byte_start":50789,"byte_end":50800,"line_start":75,"line_end":75,"column_start":12,"column_end":23},"name":"with_family","qualname":"<TextFormatBuilder>::with_family","value":"pub fn with_family(Self, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\builder.rs","byte_start":50905,"byte_end":50925,"line_start":80,"line_end":80,"column_start":12,"column_end":32},"name":"with_font_collection","qualname":"<TextFormatBuilder>::with_font_collection","value":"pub fn with_font_collection(Self, &'a FontCollection) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\builder.rs","byte_start":51053,"byte_end":51064,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"with_weight","qualname":"<TextFormatBuilder>::with_weight","value":"pub fn with_weight(Self, FontWeight) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\builder.rs","byte_start":51166,"byte_end":51176,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"with_style","qualname":"<TextFormatBuilder>::with_style","value":"pub fn with_style(Self, FontStyle) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\builder.rs","byte_start":51274,"byte_end":51286,"line_start":95,"line_end":95,"column_start":12,"column_end":24},"name":"with_stretch","qualname":"<TextFormatBuilder>::with_stretch","value":"pub fn with_stretch(Self, FontStretch) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\builder.rs","byte_start":51392,"byte_end":51401,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"with_size","qualname":"<TextFormatBuilder>::with_size","value":"pub fn with_size(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\builder.rs","byte_start":51496,"byte_end":51507,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"with_locale","qualname":"<TextFormatBuilder>::with_locale","value":"pub fn with_locale(Self, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1381},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":41996,"byte_end":42006,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"TextFormat","qualname":"::text_format::TextFormat","value":"TextFormat {  }","parent":null,"children":[{"krate":0,"index":1382}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":41946,"byte_end":41956,"line_start":18,"line_end":18,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":42077,"byte_end":42083,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"create","qualname":"<TextFormat>::create","value":"pub fn create<'a>(&'a Factory) -> TextFormatBuilder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":42218,"byte_end":42236,"line_start":29,"line_end":29,"column_start":12,"column_end":30},"name":"get_flow_direction","qualname":"<TextFormat>::get_flow_direction","value":"pub fn get_flow_direction(&Self) -> DWResult<FlowDirection>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":42390,"byte_end":42409,"line_start":33,"line_end":33,"column_start":12,"column_end":31},"name":"get_font_collection","qualname":"<TextFormat>::get_font_collection","value":"pub fn get_font_collection(&Self) -> Option<FontCollection>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":42757,"byte_end":42777,"line_start":45,"line_end":45,"column_start":12,"column_end":32},"name":"get_font_family_name","qualname":"<TextFormat>::get_font_family_name","value":"pub fn get_font_family_name(&Self) -> DWResult<String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":43341,"byte_end":43354,"line_start":61,"line_end":61,"column_start":12,"column_end":25},"name":"get_font_size","qualname":"<TextFormat>::get_font_size","value":"pub fn get_font_size(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":43431,"byte_end":43447,"line_start":65,"line_end":65,"column_start":12,"column_end":28},"name":"get_font_stretch","qualname":"<TextFormat>::get_font_stretch","value":"pub fn get_font_stretch(&Self) -> DWResult<FontStretch>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":43595,"byte_end":43609,"line_start":69,"line_end":69,"column_start":12,"column_end":26},"name":"get_font_style","qualname":"<TextFormat>::get_font_style","value":"pub fn get_font_style(&Self) -> DWResult<FontStyle>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":43751,"byte_end":43766,"line_start":73,"line_end":73,"column_start":12,"column_end":27},"name":"get_font_weight","qualname":"<TextFormat>::get_font_weight","value":"pub fn get_font_weight(&Self) -> DWResult<FontWeight>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":43911,"byte_end":43934,"line_start":77,"line_end":77,"column_start":12,"column_end":35},"name":"get_incremental_tabstop","qualname":"<TextFormat>::get_incremental_tabstop","value":"pub fn get_incremental_tabstop(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":44021,"byte_end":44037,"line_start":81,"line_end":81,"column_start":12,"column_end":28},"name":"get_line_spacing","qualname":"<TextFormat>::get_line_spacing","value":"pub fn get_line_spacing(&Self) -> DWResult<LineSpacing>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":44665,"byte_end":44680,"line_start":102,"line_end":102,"column_start":12,"column_end":27},"name":"get_locale_name","qualname":"<TextFormat>::get_locale_name","value":"pub fn get_locale_name(&Self) -> DWResult<String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":45316,"byte_end":45339,"line_start":120,"line_end":120,"column_start":12,"column_end":35},"name":"get_paragraph_alignment","qualname":"<TextFormat>::get_paragraph_alignment","value":"pub fn get_paragraph_alignment(&Self) -> DWResult<ParagraphAlignment>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":45545,"byte_end":45566,"line_start":127,"line_end":127,"column_start":12,"column_end":33},"name":"get_reading_direction","qualname":"<TextFormat>::get_reading_direction","value":"pub fn get_reading_direction(&Self) -> DWResult<ReadingDirection>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":45749,"byte_end":45767,"line_start":133,"line_end":133,"column_start":12,"column_end":30},"name":"get_text_alignment","qualname":"<TextFormat>::get_text_alignment","value":"pub fn get_text_alignment(&Self) -> DWResult<TextAlignment>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":45955,"byte_end":45972,"line_start":139,"line_end":139,"column_start":12,"column_end":29},"name":"get_word_wrapping","qualname":"<TextFormat>::get_word_wrapping","value":"pub fn get_word_wrapping(&Self) -> DWResult<WordWrapping>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":46123,"byte_end":46141,"line_start":143,"line_end":143,"column_start":12,"column_end":30},"name":"set_flow_direction","qualname":"<TextFormat>::set_flow_direction","value":"pub fn set_flow_direction(&Self, FlowDirection) -> DWResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":46416,"byte_end":46439,"line_start":154,"line_end":154,"column_start":12,"column_end":35},"name":"set_incremental_tabstop","qualname":"<TextFormat>::set_incremental_tabstop","value":"pub fn set_incremental_tabstop(&Self, f32) -> DWResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":46702,"byte_end":46718,"line_start":165,"line_end":165,"column_start":12,"column_end":28},"name":"set_line_spacing","qualname":"<TextFormat>::set_line_spacing","value":"pub fn set_line_spacing(&Self, LineSpacingMethod, f32, f32) -> DWResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":47084,"byte_end":47107,"line_start":181,"line_end":181,"column_start":12,"column_end":35},"name":"set_paragraph_alignment","qualname":"<TextFormat>::set_paragraph_alignment","value":"pub fn set_paragraph_alignment(&Self, ParagraphAlignment) -> DWResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":47392,"byte_end":47413,"line_start":192,"line_end":192,"column_start":12,"column_end":33},"name":"set_reading_direction","qualname":"<TextFormat>::set_reading_direction","value":"pub fn set_reading_direction(&Self, ReadingDirection) -> DWResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":47694,"byte_end":47712,"line_start":203,"line_end":203,"column_start":12,"column_end":30},"name":"set_text_alignment","qualname":"<TextFormat>::set_text_alignment","value":"pub fn set_text_alignment(&Self, TextAlignment) -> DWResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":47987,"byte_end":48004,"line_start":214,"line_end":214,"column_start":12,"column_end":29},"name":"set_word_wrapping","qualname":"<TextFormat>::set_word_wrapping","value":"pub fn set_word_wrapping(&Self, WordWrapping) -> DWResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":48284,"byte_end":48292,"line_start":225,"line_end":225,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<TextFormat>::from_raw","value":"pub unsafe fn from_raw(*mut IDWriteTextFormat) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":48428,"byte_end":48435,"line_start":231,"line_end":231,"column_start":19,"column_end":26},"name":"get_raw","qualname":"<TextFormat>::get_raw","value":"pub unsafe fn get_raw(&Self) -> *mut IDWriteTextFormat","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":48517,"byte_end":48528,"line_start":236,"line_end":236,"column_start":12,"column_end":23},"name":"LineSpacing","qualname":"::text_format::LineSpacing","value":"LineSpacing { method, spacing, baseline }","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":48539,"byte_end":48545,"line_start":237,"line_end":237,"column_start":9,"column_end":15},"name":"method","qualname":"::text_format::LineSpacing::method","value":"enums::LineSpacingMethod","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":48574,"byte_end":48581,"line_start":238,"line_end":238,"column_start":9,"column_end":16},"name":"spacing","qualname":"::text_format::LineSpacing::spacing","value":"f32","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":48596,"byte_end":48604,"line_start":239,"line_end":239,"column_start":9,"column_end":17},"name":"baseline","qualname":"::text_format::LineSpacing::baseline","value":"f32","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"text_layout","qualname":"::text_layout","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":1768},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":496},{"krate":0,"index":1414},{"krate":0,"index":1420},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":561},{"krate":0,"index":1422},{"krate":0,"index":1427},{"krate":0,"index":1425},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":1428},{"krate":0,"index":1434},{"krate":0,"index":1432},{"krate":0,"index":1435},{"krate":0,"index":1441},{"krate":0,"index":1439},{"krate":0,"index":620},{"krate":0,"index":621}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\builder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"builder","qualname":"::text_layout::builder","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\builder.rs","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":1792},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":486}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\builder.rs","byte_start":74759,"byte_end":74776,"line_start":11,"line_end":11,"column_start":12,"column_end":29},"name":"TextLayoutBuilder","qualname":"::text_layout::builder::TextLayoutBuilder","value":"TextLayoutBuilder {  }","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\builder.rs","byte_start":74995,"byte_end":74998,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<TextLayoutBuilder>::new","value":"pub fn new(&'a IDWriteFactory) -> TextLayoutBuilder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\builder.rs","byte_start":75262,"byte_end":75267,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"build","qualname":"<TextLayoutBuilder>::build","value":"pub fn build(Self) -> Result<TextLayout, DWriteError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\builder.rs","byte_start":76324,"byte_end":76333,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"with_text","qualname":"<TextLayoutBuilder>::with_text","value":"pub fn with_text(Self, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\builder.rs","byte_start":76432,"byte_end":76441,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"with_font","qualname":"<TextLayoutBuilder>::with_font","value":"pub fn with_font(Self, &'a TextFormat) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\builder.rs","byte_start":76549,"byte_end":76559,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"with_width","qualname":"<TextLayoutBuilder>::with_width","value":"pub fn with_width(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\builder.rs","byte_start":76657,"byte_end":76668,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"with_height","qualname":"<TextLayoutBuilder>::with_height","value":"pub fn with_height(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\builder.rs","byte_start":76769,"byte_end":76778,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"with_size","qualname":"<TextLayoutBuilder>::with_size","value":"pub fn with_size(Self, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\builder.rs","byte_start":76889,"byte_end":76902,"line_start":86,"line_end":86,"column_start":12,"column_end":25},"name":"with_centered","qualname":"<TextLayoutBuilder>::with_centered","value":"pub fn with_centered(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"metrics","qualname":"::text_layout::metrics","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":1389},{"krate":0,"index":1393},{"krate":0,"index":1391},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":1394},{"krate":0,"index":1398},{"krate":0,"index":1396},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":1399},{"krate":0,"index":1403},{"krate":0,"index":1401},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":1404},{"krate":0,"index":1408},{"krate":0,"index":1406},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":1409},{"krate":0,"index":1413},{"krate":0,"index":1411},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":551}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1389},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":77224,"byte_end":77231,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Metrics","qualname":"::text_layout::metrics::Metrics","value":"Metrics {  }","parent":null,"children":[{"krate":0,"index":1390}],"decl_id":null,"docs":" Contains the metrics associated with text after layout. All coordinates are in device independent pixels (DIPs).\n","sig":null,"attributes":[{"value":"/ Contains the metrics associated with text after layout. All coordinates are in device independent pixels (DIPs).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":77073,"byte_end":77189,"line_start":7,"line_end":7,"column_start":1,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":77640,"byte_end":77644,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"left","qualname":"<Metrics>::left","value":"pub fn left(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" A value that indicates the left-most point of formatted text relative to the layout box,\n while excluding any glyph overhang.\n","sig":null,"attributes":[{"value":"/ A value that indicates the left-most point of formatted text relative to the layout box,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":77478,"byte_end":77570,"line_start":22,"line_end":22,"column_start":5,"column_end":97}},{"value":"/ while excluding any glyph overhang.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":77575,"byte_end":77614,"line_start":23,"line_end":23,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":77619,"byte_end":77628,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":77859,"byte_end":77862,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"top","qualname":"<Metrics>::top","value":"pub fn top(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" A value that indicates the top-most point of formatted text relative to the layout box,\n while excluding any glyph overhang.\n","sig":null,"attributes":[{"value":"/ A value that indicates the top-most point of formatted text relative to the layout box,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":77698,"byte_end":77789,"line_start":29,"line_end":29,"column_start":5,"column_end":96}},{"value":"/ while excluding any glyph overhang.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":77794,"byte_end":77833,"line_start":30,"line_end":30,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":77838,"byte_end":77847,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":78068,"byte_end":78073,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"width","qualname":"<Metrics>::width","value":"pub fn width(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" A value that indicates the width of the formatted text, while ignoring trailing whitespace\n at the end of each line.\n","sig":null,"attributes":[{"value":"/ A value that indicates the width of the formatted text, while ignoring trailing whitespace","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":77915,"byte_end":78009,"line_start":36,"line_end":36,"column_start":5,"column_end":99}},{"value":"/ at the end of each line.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":78014,"byte_end":78042,"line_start":37,"line_end":37,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":78047,"byte_end":78056,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":78267,"byte_end":78302,"line_start":46,"line_end":46,"column_start":12,"column_end":47},"name":"width_including_trailing_whitespace","qualname":"<Metrics>::width_including_trailing_whitespace","value":"pub fn width_including_trailing_whitespace(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The width of the formatted text, taking into account the trailing whitespace at the end of\n each line.\n","sig":null,"attributes":[{"value":"/ The width of the formatted text, taking into account the trailing whitespace at the end of","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":78128,"byte_end":78222,"line_start":43,"line_end":43,"column_start":5,"column_end":99}},{"value":"/ each line.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":78227,"byte_end":78241,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":78246,"byte_end":78255,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":78539,"byte_end":78545,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"height","qualname":"<Metrics>::height","value":"pub fn height(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The height of the formatted text. The height of an empty string is set to the same value as\n that of the default font.\n","sig":null,"attributes":[{"value":"/ The height of the formatted text. The height of an empty string is set to the same value as","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":78384,"byte_end":78479,"line_start":50,"line_end":50,"column_start":5,"column_end":100}},{"value":"/ that of the default font.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":78484,"byte_end":78513,"line_start":51,"line_end":51,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":78518,"byte_end":78527,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":78784,"byte_end":78796,"line_start":60,"line_end":60,"column_start":12,"column_end":24},"name":"layout_width","qualname":"<Metrics>::layout_width","value":"pub fn layout_width(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The initial width given to the layout. It can be either larger or smaller than the text\n content width, depending on whether the text was wrapped.\n","sig":null,"attributes":[{"value":"/ The initial width given to the layout. It can be either larger or smaller than the text","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":78601,"byte_end":78692,"line_start":57,"line_end":57,"column_start":5,"column_end":96}},{"value":"/ content width, depending on whether the text was wrapped.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":78697,"byte_end":78758,"line_start":58,"line_end":58,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":78763,"byte_end":78772,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":79025,"byte_end":79038,"line_start":67,"line_end":67,"column_start":12,"column_end":25},"name":"layout_height","qualname":"<Metrics>::layout_height","value":"pub fn layout_height(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Initial height given to the layout. Depending on the length of the text, it may be larger\n or smaller than the text content height.\n","sig":null,"attributes":[{"value":"/ Initial height given to the layout. Depending on the length of the text, it may be larger","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":78857,"byte_end":78950,"line_start":64,"line_end":64,"column_start":5,"column_end":98}},{"value":"/ or smaller than the text content height.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":78955,"byte_end":78999,"line_start":65,"line_end":65,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":79004,"byte_end":79013,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":79342,"byte_end":79367,"line_start":75,"line_end":75,"column_start":12,"column_end":37},"name":"max_bidi_reordering_depth","qualname":"<Metrics>::max_bidi_reordering_depth","value":"pub fn max_bidi_reordering_depth(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The maximum reordering count of any line of text, used to calculate the most number of\n hit-testing boxes needed. If the layout has no bidirectional text, or no text at all, the\n minimum level is 1.\n","sig":null,"attributes":[{"value":"/ The maximum reordering count of any line of text, used to calculate the most number of","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":79100,"byte_end":79190,"line_start":71,"line_end":71,"column_start":5,"column_end":95}},{"value":"/ hit-testing boxes needed. If the layout has no bidirectional text, or no text at all, the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":79195,"byte_end":79288,"line_start":72,"line_end":72,"column_start":5,"column_end":98}},{"value":"/ minimum level is 1.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":79293,"byte_end":79316,"line_start":73,"line_end":73,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":79321,"byte_end":79330,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":79491,"byte_end":79501,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"line_count","qualname":"<Metrics>::line_count","value":"pub fn line_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Total number of lines.\n","sig":null,"attributes":[{"value":"/ Total number of lines.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":79439,"byte_end":79465,"line_start":79,"line_end":79,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":79470,"byte_end":79479,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1394},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":79651,"byte_end":79665,"line_start":89,"line_end":89,"column_start":12,"column_end":26},"name":"ClusterMetrics","qualname":"::text_layout::metrics::ClusterMetrics","value":"ClusterMetrics {  }","parent":null,"children":[{"krate":0,"index":1395}],"decl_id":null,"docs":" Contains information about a glyph cluster.\n","sig":null,"attributes":[{"value":"/ Contains information about a glyph cluster.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":79558,"byte_end":79605,"line_start":86,"line_end":86,"column_start":1,"column_end":48}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":79606,"byte_end":79616,"line_start":87,"line_end":87,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":80142,"byte_end":80147,"line_start":111,"line_end":111,"column_start":12,"column_end":17},"name":"width","qualname":"<ClusterMetrics>::width","value":"pub fn width(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The total advance width of all glyphs in the cluster.\n","sig":null,"attributes":[{"value":"/ The total advance width of all glyphs in the cluster.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":80059,"byte_end":80116,"line_start":109,"line_end":109,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":80121,"byte_end":80130,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":80276,"byte_end":80282,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"length","qualname":"<ClusterMetrics>::length","value":"pub fn length(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The number of text positions in the cluster.\n","sig":null,"attributes":[{"value":"/ The number of text positions in the cluster.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":80202,"byte_end":80250,"line_start":115,"line_end":115,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":80255,"byte_end":80264,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":80431,"byte_end":80450,"line_start":123,"line_end":123,"column_start":12,"column_end":31},"name":"can_wrap_line_after","qualname":"<ClusterMetrics>::can_wrap_line_after","value":"pub fn can_wrap_line_after(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a line can be broken right after the cluster.\n","sig":null,"attributes":[{"value":"/ Indicates whether a line can be broken right after the cluster.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":80338,"byte_end":80405,"line_start":121,"line_end":121,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":80410,"byte_end":80419,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":80622,"byte_end":80635,"line_start":129,"line_end":129,"column_start":12,"column_end":25},"name":"is_whitespace","qualname":"<ClusterMetrics>::is_whitespace","value":"pub fn is_whitespace(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether the cluster corresponds to a whitespace character.\n","sig":null,"attributes":[{"value":"/ Indicates whether the cluster corresponds to a whitespace character.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":80524,"byte_end":80596,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":80601,"byte_end":80610,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":80800,"byte_end":80810,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"is_newline","qualname":"<ClusterMetrics>::is_newline","value":"pub fn is_newline(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether the cluster corresponds to a newline character.\n","sig":null,"attributes":[{"value":"/ Indicates whether the cluster corresponds to a newline character.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":80705,"byte_end":80774,"line_start":133,"line_end":133,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":80779,"byte_end":80788,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":80976,"byte_end":80990,"line_start":141,"line_end":141,"column_start":12,"column_end":26},"name":"is_soft_hyphen","qualname":"<ClusterMetrics>::is_soft_hyphen","value":"pub fn is_soft_hyphen(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether the cluster corresponds to a soft hyphen character.\n","sig":null,"attributes":[{"value":"/ Indicates whether the cluster corresponds to a soft hyphen character.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":80877,"byte_end":80950,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":80955,"byte_end":80964,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":81147,"byte_end":81163,"line_start":147,"line_end":147,"column_start":12,"column_end":28},"name":"is_right_to_left","qualname":"<ClusterMetrics>::is_right_to_left","value":"pub fn is_right_to_left(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether the cluster is read from right to left.\n","sig":null,"attributes":[{"value":"/ Indicates whether the cluster is read from right to left.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":81060,"byte_end":81121,"line_start":145,"line_end":145,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":81126,"byte_end":81135,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1399},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":81334,"byte_end":81345,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"LineMetrics","qualname":"::text_layout::metrics::LineMetrics","value":"LineMetrics {  }","parent":null,"children":[{"krate":0,"index":1400}],"decl_id":null,"docs":" Contains information about a formatted line of text.\n","sig":null,"attributes":[{"value":"/ Contains information about a formatted line of text.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":81232,"byte_end":81288,"line_start":152,"line_end":152,"column_start":1,"column_end":57}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":81289,"byte_end":81299,"line_start":153,"line_end":153,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":81864,"byte_end":81870,"line_start":178,"line_end":178,"column_start":12,"column_end":18},"name":"length","qualname":"<LineMetrics>::length","value":"pub fn length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of text positions in the text line. This includes any trailing whitespace and\n newline characters.\n","sig":null,"attributes":[{"value":"/ The number of text positions in the text line. This includes any trailing whitespace and","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":81718,"byte_end":81810,"line_start":175,"line_end":175,"column_start":5,"column_end":97}},{"value":"/ newline characters.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":81815,"byte_end":81838,"line_start":176,"line_end":176,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":81843,"byte_end":81852,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":82072,"byte_end":82098,"line_start":185,"line_end":185,"column_start":12,"column_end":38},"name":"trailing_whitespace_length","qualname":"<LineMetrics>::trailing_whitespace_length","value":"pub fn trailing_whitespace_length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of whitespace positions at the end of the text line. Newline sequences are\n considered whitespace.\n","sig":null,"attributes":[{"value":"/ The number of whitespace positions at the end of the text line. Newline sequences are","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":81926,"byte_end":82015,"line_start":182,"line_end":182,"column_start":5,"column_end":94}},{"value":"/ considered whitespace.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":82020,"byte_end":82046,"line_start":183,"line_end":183,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":82051,"byte_end":82060,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":82377,"byte_end":82391,"line_start":192,"line_end":192,"column_start":12,"column_end":26},"name":"newline_length","qualname":"<LineMetrics>::newline_length","value":"pub fn newline_length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of characters in the newline sequence at the end of the text line. If the count\n is zero, then the text line was either wrapped or it is the end of the text.\n","sig":null,"attributes":[{"value":"/ The number of characters in the newline sequence at the end of the text line. If the count","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":82172,"byte_end":82266,"line_start":189,"line_end":189,"column_start":5,"column_end":99}},{"value":"/ is zero, then the text line was either wrapped or it is the end of the text.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":82271,"byte_end":82351,"line_start":190,"line_end":190,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":82356,"byte_end":82365,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":82512,"byte_end":82518,"line_start":198,"line_end":198,"column_start":12,"column_end":18},"name":"height","qualname":"<LineMetrics>::height","value":"pub fn height(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The height of the text line.\n","sig":null,"attributes":[{"value":"/ The height of the text line.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":82454,"byte_end":82486,"line_start":196,"line_end":196,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":82491,"byte_end":82500,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":82663,"byte_end":82671,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"baseline","qualname":"<LineMetrics>::baseline","value":"pub fn baseline(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The distance from the top of the text line to its baseline.\n","sig":null,"attributes":[{"value":"/ The distance from the top of the text line to its baseline.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":82574,"byte_end":82637,"line_start":202,"line_end":202,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":82642,"byte_end":82651,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":82779,"byte_end":82789,"line_start":210,"line_end":210,"column_start":12,"column_end":22},"name":"is_trimmed","qualname":"<LineMetrics>::is_trimmed","value":"pub fn is_trimmed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The line is trimmed.\n","sig":null,"attributes":[{"value":"/ The line is trimmed.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":82729,"byte_end":82753,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":82758,"byte_end":82767,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1404},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":83377,"byte_end":83392,"line_start":223,"line_end":223,"column_start":12,"column_end":27},"name":"OverhangMetrics","qualname":"::text_layout::metrics::OverhangMetrics","value":"OverhangMetrics {  }","parent":null,"children":[{"krate":0,"index":1405}],"decl_id":null,"docs":" Indicates how much any visible DIPs (device independent pixels) overshoot each side of the\n layout or inline objects.","sig":null,"attributes":[{"value":"/ Indicates how much any visible DIPs (device independent pixels) overshoot each side of the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":82852,"byte_end":82946,"line_start":215,"line_end":215,"column_start":1,"column_end":95}},{"value":"/ layout or inline objects.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":82947,"byte_end":82976,"line_start":216,"line_end":216,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":82977,"byte_end":82980,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ Positive overhangs indicate that the visible area extends outside the layout box or inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":82981,"byte_end":83075,"line_start":218,"line_end":218,"column_start":1,"column_end":95}},{"value":"/ object, while negative values mean there is whitespace inside. The returned values are","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":83076,"byte_end":83166,"line_start":219,"line_end":219,"column_start":1,"column_end":91}},{"value":"/ unaffected by rendering transforms or pixel snapping. Additionally, they may not exactly","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":83167,"byte_end":83259,"line_start":220,"line_end":220,"column_start":1,"column_end":93}},{"value":"/ match the final target's pixel bounds after applying grid fitting and hinting.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":83260,"byte_end":83342,"line_start":221,"line_end":221,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":83776,"byte_end":83780,"line_start":238,"line_end":238,"column_start":12,"column_end":16},"name":"left","qualname":"<OverhangMetrics>::left","value":"pub fn left(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The distance from the left-most visible DIP to its left-alignment edge.\n","sig":null,"attributes":[{"value":"/ The distance from the left-most visible DIP to its left-alignment edge.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":83675,"byte_end":83750,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":83755,"byte_end":83764,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":83933,"byte_end":83936,"line_start":244,"line_end":244,"column_start":12,"column_end":15},"name":"top","qualname":"<OverhangMetrics>::top","value":"pub fn top(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The distance from the top-most visible DIP to its top alignment edge.\n","sig":null,"attributes":[{"value":"/ The distance from the top-most visible DIP to its top alignment edge.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":83834,"byte_end":83907,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":83912,"byte_end":83921,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":84092,"byte_end":84097,"line_start":250,"line_end":250,"column_start":12,"column_end":17},"name":"right","qualname":"<OverhangMetrics>::right","value":"pub fn right(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The distance from the right-most visible DIP to its right-alignment edge.\n","sig":null,"attributes":[{"value":"/ The distance from the right-most visible DIP to its right-alignment edge.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":83989,"byte_end":84066,"line_start":248,"line_end":248,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":84071,"byte_end":84080,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":84256,"byte_end":84262,"line_start":256,"line_end":256,"column_start":12,"column_end":18},"name":"bottom","qualname":"<OverhangMetrics>::bottom","value":"pub fn bottom(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The distance from the bottom-most visible DIP to its lower-alignment edge.\n","sig":null,"attributes":[{"value":"/ The distance from the bottom-most visible DIP to its lower-alignment edge.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":84152,"byte_end":84230,"line_start":254,"line_end":254,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":84235,"byte_end":84244,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1409},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":84410,"byte_end":84424,"line_start":264,"line_end":264,"column_start":12,"column_end":26},"name":"HitTestMetrics","qualname":"::text_layout::metrics::HitTestMetrics","value":"HitTestMetrics {  }","parent":null,"children":[{"krate":0,"index":1410}],"decl_id":null,"docs":" Describes the region obtained by a hit test.\n","sig":null,"attributes":[{"value":"/ Describes the region obtained by a hit test.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":84316,"byte_end":84364,"line_start":261,"line_end":261,"column_start":1,"column_end":49}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":84365,"byte_end":84375,"line_start":262,"line_end":262,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":84875,"byte_end":84888,"line_start":285,"line_end":285,"column_start":12,"column_end":25},"name":"text_position","qualname":"<HitTestMetrics>::text_position","value":"pub fn text_position(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The first text position within the hit region.\n","sig":null,"attributes":[{"value":"/ The first text position within the hit region.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":84813,"byte_end":84863,"line_start":284,"line_end":284,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":85017,"byte_end":85023,"line_start":290,"line_end":290,"column_start":12,"column_end":18},"name":"length","qualname":"<HitTestMetrics>::length","value":"pub fn length(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of text positions within the hit region.\n","sig":null,"attributes":[{"value":"/ The number of text positions within the hit region.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":84950,"byte_end":85005,"line_start":289,"line_end":289,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":85155,"byte_end":85159,"line_start":295,"line_end":295,"column_start":12,"column_end":16},"name":"left","qualname":"<HitTestMetrics>::left","value":"pub fn left(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The x-coordinate of the upper-left corner of the hit region.\n","sig":null,"attributes":[{"value":"/ The x-coordinate of the upper-left corner of the hit region.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":85079,"byte_end":85143,"line_start":294,"line_end":294,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":85289,"byte_end":85292,"line_start":300,"line_end":300,"column_start":12,"column_end":15},"name":"top","qualname":"<HitTestMetrics>::top","value":"pub fn top(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The y-coordinate of the upper-left corner of the hit region.\n","sig":null,"attributes":[{"value":"/ The y-coordinate of the upper-left corner of the hit region.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":85213,"byte_end":85277,"line_start":299,"line_end":299,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":85389,"byte_end":85394,"line_start":305,"line_end":305,"column_start":12,"column_end":17},"name":"width","qualname":"<HitTestMetrics>::width","value":"pub fn width(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The width of the hit region.\n","sig":null,"attributes":[{"value":"/ The width of the hit region.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":85345,"byte_end":85377,"line_start":304,"line_end":304,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":85494,"byte_end":85500,"line_start":310,"line_end":310,"column_start":12,"column_end":18},"name":"height","qualname":"<HitTestMetrics>::height","value":"pub fn height(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The height of the hit region.\n","sig":null,"attributes":[{"value":"/ The height of the hit region.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":85449,"byte_end":85482,"line_start":309,"line_end":309,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":85631,"byte_end":85641,"line_start":315,"line_end":315,"column_start":12,"column_end":22},"name":"bidi_level","qualname":"<HitTestMetrics>::bidi_level","value":"pub fn bidi_level(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The BIDI level of the text positions within the hit region.\n","sig":null,"attributes":[{"value":"/ The BIDI level of the text positions within the hit region.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":85556,"byte_end":85619,"line_start":314,"line_end":314,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":85771,"byte_end":85778,"line_start":320,"line_end":320,"column_start":12,"column_end":19},"name":"is_text","qualname":"<HitTestMetrics>::is_text","value":"pub fn is_text(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if the hit region contains text; otherwise, false.\n","sig":null,"attributes":[{"value":"/ true if the hit region contains text; otherwise, false.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":85700,"byte_end":85759,"line_start":319,"line_end":319,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":85908,"byte_end":85918,"line_start":325,"line_end":325,"column_start":12,"column_end":22},"name":"is_trimmed","qualname":"<HitTestMetrics>::is_trimmed","value":"pub fn is_trimmed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if the text range is trimmed; otherwise, false.\n","sig":null,"attributes":[{"value":"/ true if the text range is trimmed; otherwise, false.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":85840,"byte_end":85896,"line_start":324,"line_end":324,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1414},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":52318,"byte_end":52328,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"TextLayout","qualname":"::text_layout::TextLayout","value":"TextLayout {  }","parent":null,"children":[{"krate":0,"index":1415}],"decl_id":null,"docs":" The TextLayout interface represents a block of text after it has been fully analyzed and formatted.\n","sig":null,"attributes":[{"value":"/ The TextLayout interface represents a block of text after it has been fully analyzed and formatted.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":52164,"byte_end":52267,"line_start":23,"line_end":23,"column_start":1,"column_end":104}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":52268,"byte_end":52278,"line_start":24,"line_end":24,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":52399,"byte_end":52405,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"create","qualname":"<TextLayout>::create","value":"pub fn create<'a>(&'a Factory) -> TextLayoutBuilder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":52540,"byte_end":52549,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"as_format","qualname":"<TextLayout>::as_format","value":"pub fn as_format(&Self) -> TextFormat","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":52820,"byte_end":52839,"line_start":41,"line_end":41,"column_start":12,"column_end":31},"name":"determine_min_width","qualname":"<TextLayout>::determine_min_width","value":"pub fn determine_min_width(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Determines the minimum possible width the layout can be set to without emergency breaking\n between the characters of whole words occurring.\n","sig":null,"attributes":[{"value":"/ Determines the minimum possible width the layout can be set to without emergency breaking","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":52658,"byte_end":52751,"line_start":39,"line_end":39,"column_start":5,"column_end":98}},{"value":"/ between the characters of whole words occurring.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":52756,"byte_end":52808,"line_start":40,"line_end":40,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":53004,"byte_end":53008,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"draw","qualname":"<TextLayout>::draw","value":"pub fn draw(&Self, &mut TextRenderer, f32, f32, Context) -> DWResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":53592,"byte_end":53617,"line_start":71,"line_end":71,"column_start":12,"column_end":37},"name":"get_cluster_metrics_count","qualname":"<TextLayout>::get_cluster_metrics_count","value":"pub fn get_cluster_metrics_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of ClusterMetrics objects which exist for this TextLayout\n","sig":null,"attributes":[{"value":"/ Gets the number of ClusterMetrics objects which exist for this TextLayout","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":53503,"byte_end":53580,"line_start":70,"line_end":70,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":54149,"byte_end":54174,"line_start":83,"line_end":83,"column_start":12,"column_end":37},"name":"get_cluster_metrics_slice","qualname":"<TextLayout>::get_cluster_metrics_slice","value":"pub fn get_cluster_metrics_slice(&Self, &mut [metrics::ClusterMetrics])\n-> Result<usize, usize>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the ClusterMetrics for the glyph clusters in this layout. You should ensure the\n slice is large enough to hold all of the metrics, which can be obtained by calling\n `get_cluster_metrics_count`. If the slice is not large enough, it will return\n Err(actual_count), otherwise returns Ok(actual_count).\n","sig":null,"attributes":[{"value":"/ Retrieves the ClusterMetrics for the glyph clusters in this layout. You should ensure the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":53804,"byte_end":53897,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ slice is large enough to hold all of the metrics, which can be obtained by calling","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":53902,"byte_end":53988,"line_start":80,"line_end":80,"column_start":5,"column_end":91}},{"value":"/ `get_cluster_metrics_count`. If the slice is not large enough, it will return","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":53993,"byte_end":54074,"line_start":81,"line_end":81,"column_start":5,"column_end":86}},{"value":"/ Err(actual_count), otherwise returns Ok(actual_count).","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":54079,"byte_end":54137,"line_start":82,"line_end":82,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":54895,"byte_end":54914,"line_start":105,"line_end":105,"column_start":12,"column_end":31},"name":"get_cluster_metrics","qualname":"<TextLayout>::get_cluster_metrics","value":"pub fn get_cluster_metrics(&Self, &mut Vec<metrics::ClusterMetrics>)","parent":null,"children":[],"decl_id":null,"docs":" Fill all of the Cluster metrics into a Vec. This function will resize the Vec to fit all\n of the metrics structures exactly.\n","sig":null,"attributes":[{"value":"/ Fill all of the Cluster metrics into a Vec. This function will resize the Vec to fit all","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":54748,"byte_end":54840,"line_start":103,"line_end":103,"column_start":5,"column_end":97}},{"value":"/ of the metrics structures exactly.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":54845,"byte_end":54883,"line_start":104,"line_end":104,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":55316,"byte_end":55335,"line_start":113,"line_end":113,"column_start":12,"column_end":31},"name":"get_font_collection","qualname":"<TextLayout>::get_font_collection","value":"pub fn get_font_collection(&Self, u32)\n-> DWResult<(FontCollection, TextRange)>","parent":null,"children":[],"decl_id":null,"docs":" Gets the font collection of the text at the specified position. Also returns the text range\n which has identical formatting to the current character.\n","sig":null,"attributes":[{"value":"/ Gets the font collection of the text at the specified position. Also returns the text range","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":55144,"byte_end":55239,"line_start":111,"line_end":111,"column_start":5,"column_end":100}},{"value":"/ which has identical formatting to the current character.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":55244,"byte_end":55304,"line_start":112,"line_end":112,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":55981,"byte_end":55994,"line_start":129,"line_end":129,"column_start":12,"column_end":25},"name":"get_font_size","qualname":"<TextLayout>::get_font_size","value":"pub fn get_font_size(&Self, u32) -> DWResult<(f32, TextRange)>","parent":null,"children":[],"decl_id":null,"docs":" Gets the font em height of the text at the specified position. Also returns the text range\n which has identical formatting to the current character.\n","sig":null,"attributes":[{"value":"/ Gets the font em height of the text at the specified position. Also returns the text range","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":55810,"byte_end":55904,"line_start":127,"line_end":127,"column_start":5,"column_end":99}},{"value":"/ which has identical formatting to the current character.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":55909,"byte_end":55969,"line_start":128,"line_end":128,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":56546,"byte_end":56562,"line_start":143,"line_end":143,"column_start":12,"column_end":28},"name":"get_font_stretch","qualname":"<TextLayout>::get_font_stretch","value":"pub fn get_font_stretch(&Self, u32) -> DWResult<(FontStretch, TextRange)>","parent":null,"children":[],"decl_id":null,"docs":" Gets the font stretch of the text at the specified position. Also returns the text range\n which has identical formatting to the current character.\n","sig":null,"attributes":[{"value":"/ Gets the font stretch of the text at the specified position. Also returns the text range","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":56377,"byte_end":56469,"line_start":141,"line_end":141,"column_start":5,"column_end":97}},{"value":"/ which has identical formatting to the current character.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":56474,"byte_end":56534,"line_start":142,"line_end":142,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":57130,"byte_end":57144,"line_start":157,"line_end":157,"column_start":12,"column_end":26},"name":"get_font_style","qualname":"<TextLayout>::get_font_style","value":"pub fn get_font_style(&Self, u32) -> DWResult<(FontStyle, TextRange)>","parent":null,"children":[],"decl_id":null,"docs":" Gets the font style of the text at the specified position. Also returns the text range\n which has identical formatting to the current character.\n","sig":null,"attributes":[{"value":"/ Gets the font style of the text at the specified position. Also returns the text range","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":56963,"byte_end":57053,"line_start":155,"line_end":155,"column_start":5,"column_end":95}},{"value":"/ which has identical formatting to the current character.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":57058,"byte_end":57118,"line_start":156,"line_end":156,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":57701,"byte_end":57716,"line_start":171,"line_end":171,"column_start":12,"column_end":27},"name":"get_font_weight","qualname":"<TextLayout>::get_font_weight","value":"pub fn get_font_weight(&Self, u32) -> DWResult<(FontWeight, TextRange)>","parent":null,"children":[],"decl_id":null,"docs":" Gets the font weight of the text at the specified position. Also returns the text range\n which has identical formatting to the current character.\n","sig":null,"attributes":[{"value":"/ Gets the font weight of the text at the specified position. Also returns the text range","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":57533,"byte_end":57624,"line_start":169,"line_end":169,"column_start":5,"column_end":96}},{"value":"/ which has identical formatting to the current character.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":57629,"byte_end":57689,"line_start":170,"line_end":170,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":58199,"byte_end":58216,"line_start":184,"line_end":184,"column_start":12,"column_end":29},"name":"get_inline_object","qualname":"<TextLayout>::get_inline_object","value":"pub fn get_inline_object(&Self, u32)\n-> DWResult<(*mut IDWriteInlineObject, TextRange)>","parent":null,"children":[],"decl_id":null,"docs":" Gets the inline object at the position as-is. May return ptr::null_mut()\n","sig":null,"attributes":[{"value":"/ Gets the inline object at the position as-is. May return ptr::null_mut()","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":58111,"byte_end":58187,"line_start":183,"line_end":183,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":58784,"byte_end":58806,"line_start":202,"line_end":202,"column_start":12,"column_end":34},"name":"get_line_metrics_count","qualname":"<TextLayout>::get_line_metrics_count","value":"pub fn get_line_metrics_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number of LineMetrics objects that you need room for when calling\n `get_line_metrics_slice`\n","sig":null,"attributes":[{"value":"/ Get the number of LineMetrics objects that you need room for when calling","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":58662,"byte_end":58739,"line_start":200,"line_end":200,"column_start":5,"column_end":82}},{"value":"/ `get_line_metrics_slice`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":58744,"byte_end":58772,"line_start":201,"line_end":201,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":59494,"byte_end":59516,"line_start":216,"line_end":216,"column_start":12,"column_end":34},"name":"get_line_metrics_slice","qualname":"<TextLayout>::get_line_metrics_slice","value":"pub fn get_line_metrics_slice(&Self, &mut [metrics::LineMetrics])\n-> Result<usize, usize>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the information about each individual text line of the text string. You should\n first call `get_line_metrics_count` to know how large your slice must be to fit all of\n the metrics objects. The return value will contain the actual number of elements in the\n layout, but the official documentation does *not* specify whether the array will be filled\n with any values in the Err case, so that behavior is not guaranteed between windows\n versions.\n","sig":null,"attributes":[{"value":"/ Retrieves the information about each individual text line of the text string. You should","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":58990,"byte_end":59082,"line_start":210,"line_end":210,"column_start":5,"column_end":97}},{"value":"/ first call `get_line_metrics_count` to know how large your slice must be to fit all of","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":59087,"byte_end":59177,"line_start":211,"line_end":211,"column_start":5,"column_end":95}},{"value":"/ the metrics objects. The return value will contain the actual number of elements in the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":59182,"byte_end":59273,"line_start":212,"line_end":212,"column_start":5,"column_end":96}},{"value":"/ layout, but the official documentation does *not* specify whether the array will be filled","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":59278,"byte_end":59372,"line_start":213,"line_end":213,"column_start":5,"column_end":99}},{"value":"/ with any values in the Err case, so that behavior is not guaranteed between windows","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":59377,"byte_end":59464,"line_start":214,"line_end":214,"column_start":5,"column_end":92}},{"value":"/ versions.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":59469,"byte_end":59482,"line_start":215,"line_end":215,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":60201,"byte_end":60217,"line_start":235,"line_end":235,"column_start":12,"column_end":28},"name":"get_line_metrics","qualname":"<TextLayout>::get_line_metrics","value":"pub fn get_line_metrics(&Self, &mut Vec<metrics::LineMetrics>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the information about each individual text line of the text string. Resizes `buf`\n to fit all of the elements.\n","sig":null,"attributes":[{"value":"/ Retrieves the information about each individual text line of the text string. Resizes `buf`","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":60058,"byte_end":60153,"line_start":233,"line_end":233,"column_start":5,"column_end":100}},{"value":"/ to fit all of the elements.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":60158,"byte_end":60189,"line_start":234,"line_end":234,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":60554,"byte_end":60568,"line_start":246,"line_end":246,"column_start":12,"column_end":26},"name":"get_max_height","qualname":"<TextLayout>::get_max_height","value":"pub fn get_max_height(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Gets the layout maximum height.\n","sig":null,"attributes":[{"value":"/ Gets the layout maximum height.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":60507,"byte_end":60542,"line_start":245,"line_end":245,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":60685,"byte_end":60698,"line_start":251,"line_end":251,"column_start":12,"column_end":25},"name":"get_max_width","qualname":"<TextLayout>::get_max_width","value":"pub fn get_max_width(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Gets the layout maximum width.\n","sig":null,"attributes":[{"value":"/ Gets the layout maximum width.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":60639,"byte_end":60673,"line_start":250,"line_end":250,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":60835,"byte_end":60846,"line_start":256,"line_end":256,"column_start":12,"column_end":23},"name":"get_metrics","qualname":"<TextLayout>::get_metrics","value":"pub fn get_metrics(&Self) -> metrics::Metrics","parent":null,"children":[],"decl_id":null,"docs":" Retrieves overall metrics for the formatted string.\n","sig":null,"attributes":[{"value":"/ Retrieves overall metrics for the formatted string.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":60768,"byte_end":60823,"line_start":255,"line_end":255,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":61196,"byte_end":61216,"line_start":267,"line_end":267,"column_start":12,"column_end":32},"name":"get_overhang_metrics","qualname":"<TextLayout>::get_overhang_metrics","value":"pub fn get_overhang_metrics(&Self) -> metrics::OverhangMetrics","parent":null,"children":[],"decl_id":null,"docs":" Returns the overhangs (in DIPs) of the layout and all objects contained in it, including\n text glyphs and inline objects.\n","sig":null,"attributes":[{"value":"/ Returns the overhangs (in DIPs) of the layout and all objects contained in it, including","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":61052,"byte_end":61144,"line_start":265,"line_end":265,"column_start":5,"column_end":97}},{"value":"/ text glyphs and inline objects.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":61149,"byte_end":61184,"line_start":266,"line_end":266,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":61453,"byte_end":61470,"line_start":276,"line_end":276,"column_start":12,"column_end":29},"name":"get_strikethrough","qualname":"<TextLayout>::get_strikethrough","value":"pub fn get_strikethrough(&Self, u32) -> DWResult<(bool, TextRange)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":61923,"byte_end":61936,"line_start":292,"line_end":292,"column_start":12,"column_end":25},"name":"get_underline","qualname":"<TextLayout>::get_underline","value":"pub fn get_underline(&Self, u32) -> DWResult<(bool, TextRange)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":62660,"byte_end":62674,"line_start":308,"line_end":308,"column_start":12,"column_end":26},"name":"hit_test_point","qualname":"<TextLayout>::hit_test_point","value":"pub fn hit_test_point(&Self, f32, f32) -> HitTestPoint","parent":null,"children":[],"decl_id":null,"docs":" The application calls this function passing in a specific pixel location relative to the\n top-left location of the layout box and obtains the information about the correspondent\n hit-test metrics of the text string where the hit-test has occurred. Returns None if the\n specified pixel location is outside the string.\n","sig":null,"attributes":[{"value":"/ The application calls this function passing in a specific pixel location relative to the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":62307,"byte_end":62399,"line_start":304,"line_end":304,"column_start":5,"column_end":97}},{"value":"/ top-left location of the layout box and obtains the information about the correspondent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":62404,"byte_end":62495,"line_start":305,"line_end":305,"column_start":5,"column_end":96}},{"value":"/ hit-test metrics of the text string where the hit-test has occurred. Returns None if the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":62500,"byte_end":62592,"line_start":306,"line_end":306,"column_start":5,"column_end":97}},{"value":"/ specified pixel location is outside the string.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":62597,"byte_end":62648,"line_start":307,"line_end":307,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":63671,"byte_end":63693,"line_start":329,"line_end":329,"column_start":12,"column_end":34},"name":"hit_test_text_position","qualname":"<TextLayout>::hit_test_text_position","value":"pub fn hit_test_text_position(&Self, u32, bool) -> Option<HitTestTextPosition>","parent":null,"children":[],"decl_id":null,"docs":" The application calls this function to get the pixel location relative to the top-left of\n the layout box given the text position and the logical side of the position. This function\n is normally used as part of caret positioning of text where the caret is drawn at the\n location corresponding to the current text editing position. It may also be used as a way\n to programmatically obtain the geometry of a particular text position in UI automation.\n","sig":null,"attributes":[{"value":"/ The application calls this function to get the pixel location relative to the top-left of","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":63179,"byte_end":63272,"line_start":324,"line_end":324,"column_start":5,"column_end":98}},{"value":"/ the layout box given the text position and the logical side of the position. This function","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":63277,"byte_end":63371,"line_start":325,"line_end":325,"column_start":5,"column_end":99}},{"value":"/ is normally used as part of caret positioning of text where the caret is drawn at the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":63376,"byte_end":63465,"line_start":326,"line_end":326,"column_start":5,"column_end":94}},{"value":"/ location corresponding to the current text editing position. It may also be used as a way","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":63470,"byte_end":63563,"line_start":327,"line_end":327,"column_start":5,"column_end":98}},{"value":"/ to programmatically obtain the geometry of a particular text position in UI automation.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":63568,"byte_end":63659,"line_start":328,"line_end":328,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":64657,"byte_end":64676,"line_start":356,"line_end":356,"column_start":12,"column_end":31},"name":"hit_test_text_range","qualname":"<TextLayout>::hit_test_text_range","value":"pub fn hit_test_text_range(&Self, u32, u32, f32, f32,\n                           &mut Vec<metrics::HitTestMetrics>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The application calls this function to get a set of hit-test metrics corresponding to a\n range of text positions. One of the main usages is to implement highlight selection of\n the text string. origin_x and origin_y are added to the hit-test metrics returned.\n","sig":null,"attributes":[{"value":"/ The application calls this function to get a set of hit-test metrics corresponding to a","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":64368,"byte_end":64459,"line_start":353,"line_end":353,"column_start":5,"column_end":96}},{"value":"/ range of text positions. One of the main usages is to implement highlight selection of","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":64464,"byte_end":64554,"line_start":354,"line_end":354,"column_start":5,"column_end":95}},{"value":"/ the text string. origin_x and origin_y are added to the hit-test metrics returned.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":64559,"byte_end":64645,"line_start":355,"line_end":355,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":65965,"byte_end":65983,"line_start":403,"line_end":403,"column_start":12,"column_end":30},"name":"set_drawing_effect","qualname":"<TextLayout>::set_drawing_effect","value":"pub fn set_drawing_effect<E, T>(&Self, &E, T) -> DWResult<()> where\nE: DrawingEffect, T: Into<TextRange>","parent":null,"children":[],"decl_id":null,"docs":" Sets the drawing style for text within a text range.\n","sig":null,"attributes":[{"value":"/ Sets the drawing style for text within a text range.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":65897,"byte_end":65953,"line_start":402,"line_end":402,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":66573,"byte_end":66592,"line_start":425,"line_end":425,"column_start":12,"column_end":31},"name":"set_font_collection","qualname":"<TextLayout>::set_font_collection","value":"pub fn set_font_collection<T>(&Self, FontCollection, T) -> DWResult<()> where\nT: Into<TextRange>","parent":null,"children":[],"decl_id":null,"docs":" Sets the font collection for text within a text range.\n","sig":null,"attributes":[{"value":"/ Sets the font collection for text within a text range.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":66503,"byte_end":66561,"line_start":424,"line_end":424,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":67162,"byte_end":67176,"line_start":446,"line_end":446,"column_start":12,"column_end":26},"name":"set_font_style","qualname":"<TextLayout>::set_font_style","value":"pub fn set_font_style<T>(&Self, FontStyle, T) -> DWResult<()> where\nT: Into<TextRange>","parent":null,"children":[],"decl_id":null,"docs":" Sets the font style for text within a text range.\n","sig":null,"attributes":[{"value":"/ Sets the font style for text within a text range.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":67097,"byte_end":67150,"line_start":445,"line_end":445,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":67724,"byte_end":67739,"line_start":467,"line_end":467,"column_start":12,"column_end":27},"name":"set_font_weight","qualname":"<TextLayout>::set_font_weight","value":"pub fn set_font_weight<T>(&Self, FontWeight, T) -> DWResult<()> where\nT: Into<TextRange>","parent":null,"children":[],"decl_id":null,"docs":" Sets the font weight for text within a text range.\n","sig":null,"attributes":[{"value":"/ Sets the font weight for text within a text range.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":67658,"byte_end":67712,"line_start":466,"line_end":466,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":68232,"byte_end":68249,"line_start":487,"line_end":487,"column_start":12,"column_end":29},"name":"set_inline_object","qualname":"<TextLayout>::set_inline_object","value":"pub fn set_inline_object<I, T>(&Self, I, T) -> DWResult<()> where\nI: IntoInlineObject, T: Into<TextRange>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":68797,"byte_end":68812,"line_start":509,"line_end":509,"column_start":12,"column_end":27},"name":"set_locale_name","qualname":"<TextLayout>::set_locale_name","value":"pub fn set_locale_name<T>(&Self, &str, T) -> DWResult<()> where\nT: Into<TextRange>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":69346,"byte_end":69360,"line_start":531,"line_end":531,"column_start":12,"column_end":26},"name":"set_max_height","qualname":"<TextLayout>::set_max_height","value":"pub fn set_max_height(&Self, f32) -> DWResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":69612,"byte_end":69625,"line_start":542,"line_end":542,"column_start":12,"column_end":25},"name":"set_max_width","qualname":"<TextLayout>::set_max_width","value":"pub fn set_max_width(&Self, f32) -> DWResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":69943,"byte_end":69960,"line_start":554,"line_end":554,"column_start":12,"column_end":29},"name":"set_strikethrough","qualname":"<TextLayout>::set_strikethrough","value":"pub fn set_strikethrough<T>(&Self, bool, T) -> DWResult<()> where\nT: Into<TextRange>","parent":null,"children":[],"decl_id":null,"docs":" Sets strikethrough for text within a specified text range.\n","sig":null,"attributes":[{"value":"/ Sets strikethrough for text within a specified text range.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":69869,"byte_end":69931,"line_start":553,"line_end":553,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":70611,"byte_end":70624,"line_start":579,"line_end":579,"column_start":12,"column_end":25},"name":"set_underline","qualname":"<TextLayout>::set_underline","value":"pub fn set_underline<T>(&Self, bool, T) -> DWResult<()> where\nT: Into<TextRange>","parent":null,"children":[],"decl_id":null,"docs":" Sets underlining for text within a specified text range.\n","sig":null,"attributes":[{"value":"/ Sets underlining for text within a specified text range.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":70539,"byte_end":70599,"line_start":578,"line_end":578,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":71172,"byte_end":71180,"line_start":601,"line_end":601,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<TextLayout>::from_raw","value":"pub unsafe fn from_raw(*mut IDWriteTextLayout) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":71316,"byte_end":71323,"line_start":607,"line_end":607,"column_start":19,"column_end":26},"name":"get_raw","qualname":"<TextLayout>::get_raw","value":"pub unsafe fn get_raw(&Self) -> *mut IDWriteTextLayout","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1422},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":71428,"byte_end":71437,"line_start":613,"line_end":613,"column_start":12,"column_end":21},"name":"TextRange","qualname":"::text_layout::TextRange","value":"TextRange { start, length }","parent":null,"children":[{"krate":0,"index":1423},{"krate":0,"index":1424}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1423},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":71448,"byte_end":71453,"line_start":614,"line_end":614,"column_start":9,"column_end":14},"name":"start","qualname":"::text_layout::TextRange::start","value":"u32","parent":{"krate":0,"index":1422},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1424},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":71468,"byte_end":71474,"line_start":615,"line_end":615,"column_start":9,"column_end":15},"name":"length","qualname":"::text_layout::TextRange::length","value":"u32","parent":{"krate":0,"index":1422},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1428},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":73300,"byte_end":73312,"line_start":687,"line_end":687,"column_start":12,"column_end":24},"name":"HitTestPoint","qualname":"::text_layout::HitTestPoint","value":"HitTestPoint { metrics, is_inside, is_trailing_hit }","parent":null,"children":[{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1429},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":73522,"byte_end":73529,"line_start":690,"line_end":690,"column_start":9,"column_end":16},"name":"metrics","qualname":"::text_layout::HitTestPoint::metrics","value":"text_layout::metrics::HitTestMetrics","parent":{"krate":0,"index":1428},"children":[],"decl_id":null,"docs":" The output geometry fully enclosing the hit-test location. When is_inside is set to false,\n this structure represents the geometry enclosing the edge closest to the hit-test location.\n","sig":null,"attributes":[{"value":"/ The output geometry fully enclosing the hit-test location. When is_inside is set to false,","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":73319,"byte_end":73413,"line_start":688,"line_end":688,"column_start":5,"column_end":99}},{"value":"/ this structure represents the geometry enclosing the edge closest to the hit-test location.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":73418,"byte_end":73513,"line_start":689,"line_end":689,"column_start":5,"column_end":100}}]},{"kind":"Field","id":{"krate":0,"index":1430},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":73729,"byte_end":73738,"line_start":693,"line_end":693,"column_start":9,"column_end":18},"name":"is_inside","qualname":"::text_layout::HitTestPoint::is_inside","value":"bool","parent":{"krate":0,"index":1428},"children":[],"decl_id":null,"docs":" An output flag that indicates whether the hit-test location is inside the text string. When\n false, the position nearest the text's edge is returned.\n","sig":null,"attributes":[{"value":"/ An output flag that indicates whether the hit-test location is inside the text string. When","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":73560,"byte_end":73655,"line_start":691,"line_end":691,"column_start":5,"column_end":100}},{"value":"/ false, the position nearest the text's edge is returned.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":73660,"byte_end":73720,"line_start":692,"line_end":692,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1431},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":74068,"byte_end":74083,"line_start":698,"line_end":698,"column_start":9,"column_end":24},"name":"is_trailing_hit","qualname":"::text_layout::HitTestPoint::is_trailing_hit","value":"bool","parent":{"krate":0,"index":1428},"children":[],"decl_id":null,"docs":" An output flag that indicates whether the hit-test location is at the leading or the\n trailing side of the character. When is_inside is set to false, this value is set according\n to the output hitTestMetrics->textPosition value to represent the edge closest to the\n hit-test location.\n","sig":null,"attributes":[{"value":"/ An output flag that indicates whether the hit-test location is at the leading or the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":73750,"byte_end":73838,"line_start":694,"line_end":694,"column_start":5,"column_end":93}},{"value":"/ trailing side of the character. When is_inside is set to false, this value is set according","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":73843,"byte_end":73938,"line_start":695,"line_end":695,"column_start":5,"column_end":100}},{"value":"/ to the output hitTestMetrics->textPosition value to represent the edge closest to the","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":73943,"byte_end":74032,"line_start":696,"line_end":696,"column_start":5,"column_end":94}},{"value":"/ hit-test location.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":74037,"byte_end":74059,"line_start":697,"line_end":697,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1435},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":74128,"byte_end":74147,"line_start":702,"line_end":702,"column_start":12,"column_end":31},"name":"HitTestTextPosition","qualname":"::text_layout::HitTestTextPosition","value":"HitTestTextPosition { point_x, point_y, metrics }","parent":null,"children":[{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1436},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":74248,"byte_end":74255,"line_start":704,"line_end":704,"column_start":9,"column_end":16},"name":"point_x","qualname":"::text_layout::HitTestTextPosition::point_x","value":"f32","parent":{"krate":0,"index":1435},"children":[],"decl_id":null,"docs":" The output pixel location X, relative to the top-left location of the layout box.\n","sig":null,"attributes":[{"value":"/ The output pixel location X, relative to the top-left location of the layout box.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":74154,"byte_end":74239,"line_start":703,"line_end":703,"column_start":5,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":1437},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":74360,"byte_end":74367,"line_start":706,"line_end":706,"column_start":9,"column_end":16},"name":"point_y","qualname":"::text_layout::HitTestTextPosition::point_y","value":"f32","parent":{"krate":0,"index":1435},"children":[],"decl_id":null,"docs":" The output pixel location Y, relative to the top-left location of the layout box.\n","sig":null,"attributes":[{"value":"/ The output pixel location Y, relative to the top-left location of the layout box.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":74266,"byte_end":74351,"line_start":705,"line_end":705,"column_start":5,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":1438},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":74456,"byte_end":74463,"line_start":709,"line_end":709,"column_start":9,"column_end":16},"name":"metrics","qualname":"::text_layout::HitTestTextPosition::metrics","value":"text_layout::metrics::HitTestMetrics","parent":{"krate":0,"index":1435},"children":[],"decl_id":null,"docs":" The output geometry fully enclosing the specified text position.\n","sig":null,"attributes":[{"value":"/ The output geometry fully enclosing the specified text position.","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":74379,"byte_end":74447,"line_start":708,"line_end":708,"column_start":5,"column_end":73}}]},{"kind":"Mod","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"text_renderer","qualname":"::text_renderer","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":695},{"krate":0,"index":714},{"krate":0,"index":723},{"krate":0,"index":736},{"krate":0,"index":1442},{"krate":0,"index":1449},{"krate":0,"index":1447},{"krate":0,"index":1445},{"krate":0,"index":749},{"krate":0,"index":753}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\vtbl\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vtbl","qualname":"::text_renderer::vtbl","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\vtbl\\mod.rs","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\vtbl\\comref.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"comref","qualname":"::text_renderer::vtbl::comref","value":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\vtbl\\comref.rs","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":1832},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":680},{"krate":0,"index":682}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\vtbl\\comref.rs","byte_start":89684,"byte_end":89709,"line_start":20,"line_end":20,"column_start":12,"column_end":37},"name":"TEXT_RENDERER_COMREF_VTBL","qualname":"::text_renderer::vtbl::comref::TEXT_RENDERER_COMREF_VTBL","value":"IDWriteTextRendererVtbl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\vtbl\\comref.rs","byte_start":90301,"byte_end":90316,"line_start":37,"line_end":37,"column_start":31,"column_end":46},"name":"query_interface","qualname":"::text_renderer::vtbl::comref::query_interface","value":"pub unsafe extern \"system\" fn query_interface(*mut IUnknown, REFIID,\n                                              *mut *mut c_void) -> HRESULT","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\vtbl\\comref.rs","byte_start":90870,"byte_end":90877,"line_start":63,"line_end":63,"column_start":31,"column_end":38},"name":"add_ref","qualname":"::text_renderer::vtbl::comref::add_ref","value":"pub unsafe extern \"system\" fn add_ref(*mut IUnknown) -> ULONG","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\vtbl\\comref.rs","byte_start":90950,"byte_end":90957,"line_start":67,"line_end":67,"column_start":31,"column_end":38},"name":"release","qualname":"::text_renderer::vtbl::comref::release","value":"pub unsafe extern \"system\" fn release(*mut IUnknown) -> ULONG","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\vtbl\\comref.rs","byte_start":91030,"byte_end":91051,"line_start":71,"line_end":71,"column_start":31,"column_end":52},"name":"get_current_transform","qualname":"::text_renderer::vtbl::comref::get_current_transform","value":"pub unsafe extern \"system\" fn get_current_transform(*mut IDWritePixelSnapping,\n                                                    *mut c_void,\n                                                    *mut DWRITE_MATRIX)\n-> HRESULT","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\vtbl\\comref.rs","byte_start":91590,"byte_end":91608,"line_start":90,"line_end":90,"column_start":31,"column_end":49},"name":"get_pixels_per_dip","qualname":"::text_renderer::vtbl::comref::get_pixels_per_dip","value":"pub unsafe extern \"system\" fn get_pixels_per_dip(*mut IDWritePixelSnapping,\n                                                 *mut c_void, *mut FLOAT)\n-> HRESULT","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\vtbl\\comref.rs","byte_start":92140,"byte_end":92166,"line_start":109,"line_end":109,"column_start":31,"column_end":57},"name":"is_pixel_snapping_disabled","qualname":"::text_renderer::vtbl::comref::is_pixel_snapping_disabled","value":"pub unsafe extern \"system\" fn is_pixel_snapping_disabled(*mut IDWritePixelSnapping,\n                                                         *mut c_void,\n                                                         *mut BOOL) -> HRESULT","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\vtbl\\comref.rs","byte_start":92721,"byte_end":92735,"line_start":128,"line_end":128,"column_start":31,"column_end":45},"name":"draw_glyph_run","qualname":"::text_renderer::vtbl::comref::draw_glyph_run","value":"pub unsafe extern \"system\" fn draw_glyph_run(*mut IDWriteTextRenderer,\n                                             *mut c_void, FLOAT, FLOAT,\n                                             DWRITE_MEASURING_MODE,\n                                             *const DWRITE_GLYPH_RUN,\n                                             *const DWRITE_GLYPH_RUN_DESCRIPTION,\n                                             *mut IUnknown) -> HRESULT","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\vtbl\\comref.rs","byte_start":95056,"byte_end":95074,"line_start":193,"line_end":193,"column_start":31,"column_end":49},"name":"draw_inline_object","qualname":"::text_renderer::vtbl::comref::draw_inline_object","value":"pub unsafe extern \"system\" fn draw_inline_object(*mut IDWriteTextRenderer,\n                                                 *mut c_void, FLOAT, FLOAT,\n                                                 *mut IDWriteInlineObject,\n                                                 BOOL, BOOL, *mut IUnknown)\n-> HRESULT","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\vtbl\\comref.rs","byte_start":96035,"byte_end":96053,"line_start":228,"line_end":228,"column_start":31,"column_end":49},"name":"draw_strikethrough","qualname":"::text_renderer::vtbl::comref::draw_strikethrough","value":"pub unsafe extern \"system\" fn draw_strikethrough(*mut IDWriteTextRenderer,\n                                                 *mut c_void, FLOAT, FLOAT,\n                                                 *const DWRITE_STRIKETHROUGH,\n                                                 *mut IUnknown) -> HRESULT","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\vtbl\\comref.rs","byte_start":97702,"byte_end":97716,"line_start":280,"line_end":280,"column_start":31,"column_end":45},"name":"draw_underline","qualname":"::text_renderer::vtbl::comref::draw_underline","value":"pub unsafe extern \"system\" fn draw_underline(*mut IDWriteTextRenderer,\n                                             *mut c_void, FLOAT, FLOAT,\n                                             *const DWRITE_UNDERLINE,\n                                             *mut IUnknown) -> HRESULT","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":86250,"byte_end":86257,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"Context","qualname":"::text_renderer::Context","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":86258,"byte_end":86273,"line_start":13,"line_end":13,"column_start":20,"column_end":35},"name":"0","qualname":"::text_renderer::Context::0","value":"*mut std::ffi::c_void","parent":{"krate":0,"index":684},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":687},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":86287,"byte_end":86299,"line_start":15,"line_end":15,"column_start":11,"column_end":23},"name":"TextRenderer","qualname":"::text_renderer::TextRenderer","value":"TextRenderer","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":86309,"byte_end":86326,"line_start":16,"line_end":16,"column_start":8,"column_end":25},"name":"current_transform","qualname":"::text_renderer::TextRenderer::current_transform","value":"pub fn current_transform(&Self, Context) -> DWResult<DWRITE_MATRIX>","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":86387,"byte_end":86401,"line_start":17,"line_end":17,"column_start":8,"column_end":22},"name":"pixels_per_dip","qualname":"::text_renderer::TextRenderer::pixels_per_dip","value":"pub fn pixels_per_dip(&Self, Context) -> DWResult<f32>","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":86452,"byte_end":86478,"line_start":18,"line_end":18,"column_start":8,"column_end":34},"name":"is_pixel_snapping_disabled","qualname":"::text_renderer::TextRenderer::is_pixel_snapping_disabled","value":"pub fn is_pixel_snapping_disabled(&Self, Context) -> DWResult<bool>","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":86531,"byte_end":86545,"line_start":20,"line_end":20,"column_start":8,"column_end":22},"name":"draw_glyph_run","qualname":"::text_renderer::TextRenderer::draw_glyph_run","value":"pub fn draw_glyph_run(&mut Self, &DrawGlyphRun) -> DWResult<()>","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":86605,"byte_end":86623,"line_start":21,"line_end":21,"column_start":8,"column_end":26},"name":"draw_inline_object","qualname":"::text_renderer::TextRenderer::draw_inline_object","value":"pub fn draw_inline_object(&mut Self, &DrawInlineObject) -> DWResult<()>","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":86687,"byte_end":86705,"line_start":22,"line_end":22,"column_start":8,"column_end":26},"name":"draw_strikethrough","qualname":"::text_renderer::TextRenderer::draw_strikethrough","value":"pub fn draw_strikethrough(&mut Self, &DrawStrikethrough) -> DWResult<()>","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":86770,"byte_end":86784,"line_start":23,"line_end":23,"column_start":8,"column_end":22},"name":"draw_underline","qualname":"::text_renderer::TextRenderer::draw_underline","value":"pub fn draw_underline(&mut Self, &DrawUnderline) -> DWResult<()>","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":86852,"byte_end":86864,"line_start":26,"line_end":26,"column_start":12,"column_end":24},"name":"DrawGlyphRun","qualname":"::text_renderer::DrawGlyphRun","value":"DrawGlyphRun { context, baseline_origin_x, baseline_origin_y, measuring_mode, font_face, font_em_size, glyph_count, glyph_indices, glyph_advances, glyph_offsets, is_sideways, bidi_level, locale_name, string, cluster_map, text_position, client_effect }","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":86879,"byte_end":86886,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"name":"context","qualname":"::text_renderer::DrawGlyphRun::context","value":"text_renderer::Context","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":698},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":86905,"byte_end":86922,"line_start":28,"line_end":28,"column_start":9,"column_end":26},"name":"baseline_origin_x","qualname":"::text_renderer::DrawGlyphRun::baseline_origin_x","value":"f32","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":86937,"byte_end":86954,"line_start":29,"line_end":29,"column_start":9,"column_end":26},"name":"baseline_origin_y","qualname":"::text_renderer::DrawGlyphRun::baseline_origin_y","value":"f32","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":700},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":86969,"byte_end":86983,"line_start":30,"line_end":30,"column_start":9,"column_end":23},"name":"measuring_mode","qualname":"::text_renderer::DrawGlyphRun::measuring_mode","value":"enums::MeasuringMode","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":701},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87008,"byte_end":87017,"line_start":31,"line_end":31,"column_start":9,"column_end":18},"name":"font_face","qualname":"::text_renderer::DrawGlyphRun::font_face","value":"font_face::FontFace","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87037,"byte_end":87049,"line_start":32,"line_end":32,"column_start":9,"column_end":21},"name":"font_em_size","qualname":"::text_renderer::DrawGlyphRun::font_em_size","value":"f32","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87064,"byte_end":87075,"line_start":33,"line_end":33,"column_start":9,"column_end":20},"name":"glyph_count","qualname":"::text_renderer::DrawGlyphRun::glyph_count","value":"u32","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87090,"byte_end":87103,"line_start":34,"line_end":34,"column_start":9,"column_end":22},"name":"glyph_indices","qualname":"::text_renderer::DrawGlyphRun::glyph_indices","value":"&'a [u16]","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87124,"byte_end":87138,"line_start":35,"line_end":35,"column_start":9,"column_end":23},"name":"glyph_advances","qualname":"::text_renderer::DrawGlyphRun::glyph_advances","value":"&'a [f32]","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87159,"byte_end":87172,"line_start":36,"line_end":36,"column_start":9,"column_end":22},"name":"glyph_offsets","qualname":"::text_renderer::DrawGlyphRun::glyph_offsets","value":"&'a [text_renderer::GlyphOffset]","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87201,"byte_end":87212,"line_start":37,"line_end":37,"column_start":9,"column_end":20},"name":"is_sideways","qualname":"::text_renderer::DrawGlyphRun::is_sideways","value":"bool","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87228,"byte_end":87238,"line_start":38,"line_end":38,"column_start":9,"column_end":19},"name":"bidi_level","qualname":"::text_renderer::DrawGlyphRun::bidi_level","value":"u32","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87253,"byte_end":87264,"line_start":39,"line_end":39,"column_start":9,"column_end":20},"name":"locale_name","qualname":"::text_renderer::DrawGlyphRun::locale_name","value":"&'a [u16]","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87285,"byte_end":87291,"line_start":40,"line_end":40,"column_start":9,"column_end":15},"name":"string","qualname":"::text_renderer::DrawGlyphRun::string","value":"&'a [u16]","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87312,"byte_end":87323,"line_start":41,"line_end":41,"column_start":9,"column_end":20},"name":"cluster_map","qualname":"::text_renderer::DrawGlyphRun::cluster_map","value":"&'a [u16]","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87344,"byte_end":87357,"line_start":42,"line_end":42,"column_start":9,"column_end":22},"name":"text_position","qualname":"::text_renderer::DrawGlyphRun::text_position","value":"u32","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87372,"byte_end":87385,"line_start":43,"line_end":43,"column_start":9,"column_end":22},"name":"client_effect","qualname":"::text_renderer::DrawGlyphRun::client_effect","value":"std::option::Option<&'a winapi::um::unknwnbase::IUnknown>","parent":{"krate":0,"index":695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87423,"byte_end":87439,"line_start":46,"line_end":46,"column_start":12,"column_end":28},"name":"DrawInlineObject","qualname":"::text_renderer::DrawInlineObject","value":"DrawInlineObject { context, origin_x, origin_y, inline_object, is_sideways, is_right_to_left, client_effect }","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87454,"byte_end":87461,"line_start":47,"line_end":47,"column_start":9,"column_end":16},"name":"context","qualname":"::text_renderer::DrawInlineObject::context","value":"text_renderer::Context","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87480,"byte_end":87488,"line_start":48,"line_end":48,"column_start":9,"column_end":17},"name":"origin_x","qualname":"::text_renderer::DrawInlineObject::origin_x","value":"f32","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87503,"byte_end":87511,"line_start":49,"line_end":49,"column_start":9,"column_end":17},"name":"origin_y","qualname":"::text_renderer::DrawInlineObject::origin_y","value":"f32","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87526,"byte_end":87539,"line_start":50,"line_end":50,"column_start":9,"column_end":22},"name":"inline_object","qualname":"::text_renderer::DrawInlineObject::inline_object","value":"&'a winapi::um::dwrite::IDWriteInlineObject","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87574,"byte_end":87585,"line_start":51,"line_end":51,"column_start":9,"column_end":20},"name":"is_sideways","qualname":"::text_renderer::DrawInlineObject::is_sideways","value":"bool","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87601,"byte_end":87617,"line_start":52,"line_end":52,"column_start":9,"column_end":25},"name":"is_right_to_left","qualname":"::text_renderer::DrawInlineObject::is_right_to_left","value":"bool","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87633,"byte_end":87646,"line_start":53,"line_end":53,"column_start":9,"column_end":22},"name":"client_effect","qualname":"::text_renderer::DrawInlineObject::client_effect","value":"std::option::Option<&'a winapi::um::unknwnbase::IUnknown>","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":723},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87684,"byte_end":87701,"line_start":56,"line_end":56,"column_start":12,"column_end":29},"name":"DrawStrikethrough","qualname":"::text_renderer::DrawStrikethrough","value":"DrawStrikethrough { context, baseline_origin_x, baseline_origin_y, width, thickness, offset, reading_direction, flow_direction, locale_name, measuring_mode, client_effect }","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87716,"byte_end":87723,"line_start":57,"line_end":57,"column_start":9,"column_end":16},"name":"context","qualname":"::text_renderer::DrawStrikethrough::context","value":"text_renderer::Context","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":726},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87742,"byte_end":87759,"line_start":58,"line_end":58,"column_start":9,"column_end":26},"name":"baseline_origin_x","qualname":"::text_renderer::DrawStrikethrough::baseline_origin_x","value":"f32","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87774,"byte_end":87791,"line_start":59,"line_end":59,"column_start":9,"column_end":26},"name":"baseline_origin_y","qualname":"::text_renderer::DrawStrikethrough::baseline_origin_y","value":"f32","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87806,"byte_end":87811,"line_start":60,"line_end":60,"column_start":9,"column_end":14},"name":"width","qualname":"::text_renderer::DrawStrikethrough::width","value":"f32","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":729},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87826,"byte_end":87835,"line_start":61,"line_end":61,"column_start":9,"column_end":18},"name":"thickness","qualname":"::text_renderer::DrawStrikethrough::thickness","value":"f32","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87850,"byte_end":87856,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"name":"offset","qualname":"::text_renderer::DrawStrikethrough::offset","value":"f32","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87871,"byte_end":87888,"line_start":63,"line_end":63,"column_start":9,"column_end":26},"name":"reading_direction","qualname":"::text_renderer::DrawStrikethrough::reading_direction","value":"enums::ReadingDirection","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87916,"byte_end":87930,"line_start":64,"line_end":64,"column_start":9,"column_end":23},"name":"flow_direction","qualname":"::text_renderer::DrawStrikethrough::flow_direction","value":"enums::FlowDirection","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":733},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87955,"byte_end":87966,"line_start":65,"line_end":65,"column_start":9,"column_end":20},"name":"locale_name","qualname":"::text_renderer::DrawStrikethrough::locale_name","value":"&'a [u16]","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":734},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":87987,"byte_end":88001,"line_start":66,"line_end":66,"column_start":9,"column_end":23},"name":"measuring_mode","qualname":"::text_renderer::DrawStrikethrough::measuring_mode","value":"enums::MeasuringMode","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88026,"byte_end":88039,"line_start":67,"line_end":67,"column_start":9,"column_end":22},"name":"client_effect","qualname":"::text_renderer::DrawStrikethrough::client_effect","value":"std::option::Option<&'a winapi::um::unknwnbase::IUnknown>","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":736},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88077,"byte_end":88090,"line_start":70,"line_end":70,"column_start":12,"column_end":25},"name":"DrawUnderline","qualname":"::text_renderer::DrawUnderline","value":"DrawUnderline { context, baseline_origin_x, baseline_origin_y, width, thickness, offset, reading_direction, flow_direction, locale_name, measuring_mode, client_effect }","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":738},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88105,"byte_end":88112,"line_start":71,"line_end":71,"column_start":9,"column_end":16},"name":"context","qualname":"::text_renderer::DrawUnderline::context","value":"text_renderer::Context","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":739},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88131,"byte_end":88148,"line_start":72,"line_end":72,"column_start":9,"column_end":26},"name":"baseline_origin_x","qualname":"::text_renderer::DrawUnderline::baseline_origin_x","value":"f32","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88163,"byte_end":88180,"line_start":73,"line_end":73,"column_start":9,"column_end":26},"name":"baseline_origin_y","qualname":"::text_renderer::DrawUnderline::baseline_origin_y","value":"f32","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88195,"byte_end":88200,"line_start":74,"line_end":74,"column_start":9,"column_end":14},"name":"width","qualname":"::text_renderer::DrawUnderline::width","value":"f32","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":742},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88215,"byte_end":88224,"line_start":75,"line_end":75,"column_start":9,"column_end":18},"name":"thickness","qualname":"::text_renderer::DrawUnderline::thickness","value":"f32","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":743},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88239,"byte_end":88245,"line_start":76,"line_end":76,"column_start":9,"column_end":15},"name":"offset","qualname":"::text_renderer::DrawUnderline::offset","value":"f32","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88260,"byte_end":88277,"line_start":77,"line_end":77,"column_start":9,"column_end":26},"name":"reading_direction","qualname":"::text_renderer::DrawUnderline::reading_direction","value":"enums::ReadingDirection","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88305,"byte_end":88319,"line_start":78,"line_end":78,"column_start":9,"column_end":23},"name":"flow_direction","qualname":"::text_renderer::DrawUnderline::flow_direction","value":"enums::FlowDirection","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88344,"byte_end":88355,"line_start":79,"line_end":79,"column_start":9,"column_end":20},"name":"locale_name","qualname":"::text_renderer::DrawUnderline::locale_name","value":"&'a [u16]","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88376,"byte_end":88390,"line_start":80,"line_end":80,"column_start":9,"column_end":23},"name":"measuring_mode","qualname":"::text_renderer::DrawUnderline::measuring_mode","value":"enums::MeasuringMode","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88415,"byte_end":88428,"line_start":81,"line_end":81,"column_start":9,"column_end":22},"name":"client_effect","qualname":"::text_renderer::DrawUnderline::client_effect","value":"std::option::Option<&'a winapi::um::unknwnbase::IUnknown>","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1442},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88507,"byte_end":88518,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"GlyphOffset","qualname":"::text_renderer::GlyphOffset","value":"GlyphOffset { advance_offset, ascender_offset }","parent":null,"children":[{"krate":0,"index":1443},{"krate":0,"index":1444}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88455,"byte_end":88465,"line_start":84,"line_end":84,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1443},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88529,"byte_end":88543,"line_start":87,"line_end":87,"column_start":9,"column_end":23},"name":"advance_offset","qualname":"::text_renderer::GlyphOffset::advance_offset","value":"f32","parent":{"krate":0,"index":1442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1444},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88558,"byte_end":88573,"line_start":88,"line_end":88,"column_start":9,"column_end":24},"name":"ascender_offset","qualname":"::text_renderer::GlyphOffset::ascender_offset","value":"f32","parent":{"krate":0,"index":1442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88605,"byte_end":88623,"line_start":92,"line_end":92,"column_start":12,"column_end":30},"name":"TextRendererComRef","qualname":"::text_renderer::TextRendererComRef","value":"TextRendererComRef {  }","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88583,"byte_end":88593,"line_start":91,"line_end":91,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88751,"byte_end":88754,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"new","qualname":"<TextRendererComRef>::new","value":"pub fn new(&'a mut TextRenderer) -> TextRendererComRef","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88958,"byte_end":88964,"line_start":105,"line_end":105,"column_start":19,"column_end":25},"name":"as_raw","qualname":"<TextRendererComRef>::as_raw","value":"pub unsafe fn as_raw(&mut Self) -> &mut IDWriteTextRenderer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":767},"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\helpers.rs","byte_start":99548,"byte_end":99557,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"Arguments","qualname":"::helpers::InternalConstructor::Arguments","value":"type Arguments;","parent":{"krate":0,"index":766},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3938,"byte_end":3951,"line_start":160,"line_end":160,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\error.rs","byte_start":4464,"byte_end":4475,"line_start":15,"line_end":15,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\error.rs","byte_start":4668,"byte_end":4679,"line_start":23,"line_end":23,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\error.rs","byte_start":4777,"byte_end":4788,"line_start":29,"line_end":29,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\error.rs","byte_start":4950,"byte_end":4961,"line_start":35,"line_end":35,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\error.rs","byte_start":5084,"byte_end":5095,"line_start":41,"line_end":41,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\factory.rs","byte_start":5489,"byte_end":5496,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\factory.rs","byte_start":6296,"byte_end":6303,"line_start":46,"line_end":46,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\factory.rs","byte_start":6328,"byte_end":6335,"line_start":47,"line_end":47,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font\\mod.rs","byte_start":6456,"byte_end":6460,"line_start":8,"line_end":8,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font\\mod.rs","byte_start":6706,"byte_end":6710,"line_start":20,"line_end":20,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font\\mod.rs","byte_start":6735,"byte_end":6739,"line_start":21,"line_end":21,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":7111,"byte_end":7125,"line_start":20,"line_end":20,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":9783,"byte_end":9797,"line_start":99,"line_end":99,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":9822,"byte_end":9836,"line_start":100,"line_end":100,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\builder.rs","byte_start":18439,"byte_end":18454,"line_start":20,"line_end":20,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":20970,"byte_end":20981,"line_start":11,"line_end":11,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":21142,"byte_end":21153,"line_start":19,"line_end":19,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":24793,"byte_end":24805,"line_start":104,"line_end":104,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":24969,"byte_end":24981,"line_start":112,"line_end":112,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":10442,"byte_end":10450,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":17870,"byte_end":17878,"line_start":240,"line_end":240,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":17903,"byte_end":17911,"line_start":241,"line_end":241,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_family\\mod.rs","byte_start":27901,"byte_end":27911,"line_start":20,"line_end":20,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_family\\mod.rs","byte_start":30860,"byte_end":30870,"line_start":110,"line_end":110,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_family\\mod.rs","byte_start":30895,"byte_end":30905,"line_start":111,"line_end":111,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\builder.rs","byte_start":31985,"byte_end":32000,"line_start":18,"line_end":18,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\mod.rs","byte_start":31146,"byte_end":31154,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\mod.rs","byte_start":31538,"byte_end":31546,"line_start":30,"line_end":30,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\mod.rs","byte_start":31571,"byte_end":31579,"line_start":31,"line_end":31,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_list\\mod.rs","byte_start":33293,"byte_end":33301,"line_start":10,"line_end":10,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_list\\mod.rs","byte_start":33559,"byte_end":33567,"line_start":22,"line_end":22,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_list\\mod.rs","byte_start":33592,"byte_end":33600,"line_start":23,"line_end":23,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":34015,"byte_end":34036,"line_start":20,"line_end":20,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35785,"byte_end":35800,"line_start":86,"line_end":86,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":36050,"byte_end":36065,"line_start":98,"line_end":98,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":36194,"byte_end":36197,"line_start":104,"line_end":104,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":36359,"byte_end":36380,"line_start":110,"line_end":110,"column_start":22,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":36405,"byte_end":36426,"line_start":111,"line_end":111,"column_start":22,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\builder.rs","byte_start":49265,"byte_end":49282,"line_start":24,"line_end":24,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":42053,"byte_end":42063,"line_start":24,"line_end":24,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":48635,"byte_end":48645,"line_start":242,"line_end":242,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":48670,"byte_end":48680,"line_start":243,"line_end":243,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\builder.rs","byte_start":74960,"byte_end":74977,"line_start":20,"line_end":20,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":77300,"byte_end":77307,"line_start":13,"line_end":13,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":77464,"byte_end":77471,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":79725,"byte_end":79739,"line_start":93,"line_end":93,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":79854,"byte_end":79868,"line_start":100,"line_end":100,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":80038,"byte_end":80052,"line_start":108,"line_end":108,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":81402,"byte_end":81413,"line_start":159,"line_end":159,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":81528,"byte_end":81539,"line_start":166,"line_end":166,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":81700,"byte_end":81711,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":83465,"byte_end":83480,"line_start":227,"line_end":227,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":83653,"byte_end":83668,"line_start":235,"line_end":235,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":84485,"byte_end":84499,"line_start":268,"line_end":268,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":84614,"byte_end":84628,"line_start":275,"line_end":275,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":84792,"byte_end":84806,"line_start":283,"line_end":283,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":52375,"byte_end":52385,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":71517,"byte_end":71526,"line_start":618,"line_end":618,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":71721,"byte_end":71730,"line_start":627,"line_end":627,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":72049,"byte_end":72058,"line_start":640,"line_end":640,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":72236,"byte_end":72245,"line_start":649,"line_end":649,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":72429,"byte_end":72438,"line_start":658,"line_end":658,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":74514,"byte_end":74524,"line_start":712,"line_end":712,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":74549,"byte_end":74559,"line_start":713,"line_end":713,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88715,"byte_end":88733,"line_start":97,"line_end":97,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","byte_start":159,"byte_end":173,"line_start":10,"line_end":10,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":8}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","byte_start":183,"byte_end":188,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":12}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","byte_start":198,"byte_end":203,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":22}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","byte_start":213,"byte_end":220,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":41}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","byte_start":230,"byte_end":234,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":60}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","byte_start":244,"byte_end":259,"line_start":15,"line_end":15,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":70}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","byte_start":269,"byte_end":278,"line_start":16,"line_end":16,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":91}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":10323,"byte_end":10330,"line_start":18,"line_end":18,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":115}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":10340,"byte_end":10347,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":146}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","byte_start":288,"byte_end":299,"line_start":17,"line_end":17,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":195}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","byte_start":309,"byte_end":318,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":217}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\mod.rs","byte_start":31044,"byte_end":31051,"line_start":6,"line_end":6,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":222}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","byte_start":328,"byte_end":337,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":249}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","byte_start":347,"byte_end":360,"line_start":20,"line_end":20,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":257}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","byte_start":370,"byte_end":381,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":356}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":41936,"byte_end":41943,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":370}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","byte_start":391,"byte_end":402,"line_start":22,"line_end":22,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":440}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":52137,"byte_end":52144,"line_start":20,"line_end":20,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":468}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":52154,"byte_end":52161,"line_start":21,"line_end":21,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":496}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\lib.rs","byte_start":412,"byte_end":425,"line_start":23,"line_end":23,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":622}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":86232,"byte_end":86236,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":633}},{"kind":"Mod","span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\vtbl\\mod.rs","byte_start":89114,"byte_end":89120,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":635}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":715,"byte_end":720,"line_start":3,"line_end":3,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":1976},"to":{"krate":0,"index":14}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":723,"byte_end":727,"line_start":3,"line_end":3,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":1981},"to":{"krate":0,"index":14}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\enums.rs","byte_start":3938,"byte_end":3951,"line_start":160,"line_end":160,"column_start":9,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\error.rs","byte_start":4464,"byte_end":4475,"line_start":15,"line_end":15,"column_start":6,"column_end":17},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\error.rs","byte_start":4668,"byte_end":4679,"line_start":23,"line_end":23,"column_start":24,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1332},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\error.rs","byte_start":4777,"byte_end":4788,"line_start":29,"line_end":29,"column_start":21,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1332},"to":{"krate":2,"index":6322}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\error.rs","byte_start":4950,"byte_end":4961,"line_start":35,"line_end":35,"column_start":23,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1332},"to":{"krate":2,"index":6327}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\error.rs","byte_start":5084,"byte_end":5095,"line_start":41,"line_end":41,"column_start":16,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1332},"to":{"krate":1,"index":1690}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\factory.rs","byte_start":5489,"byte_end":5496,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":52},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\factory.rs","byte_start":6296,"byte_end":6303,"line_start":46,"line_end":46,"column_start":22,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":52},"to":{"krate":2,"index":1971}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\factory.rs","byte_start":6328,"byte_end":6335,"line_start":47,"line_end":47,"column_start":22,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":52},"to":{"krate":2,"index":1983}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font\\mod.rs","byte_start":6456,"byte_end":6460,"line_start":8,"line_end":8,"column_start":6,"column_end":10},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":63},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font\\mod.rs","byte_start":6706,"byte_end":6710,"line_start":20,"line_end":20,"column_start":22,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":63},"to":{"krate":2,"index":1971}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font\\mod.rs","byte_start":6735,"byte_end":6739,"line_start":21,"line_end":21,"column_start":22,"column_end":26},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":63},"to":{"krate":2,"index":1983}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":7111,"byte_end":7125,"line_start":20,"line_end":20,"column_start":6,"column_end":20},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":9783,"byte_end":9797,"line_start":99,"line_end":99,"column_start":22,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1338},"to":{"krate":2,"index":1971}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_collection\\mod.rs","byte_start":9822,"byte_end":9836,"line_start":100,"line_end":100,"column_start":22,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1338},"to":{"krate":2,"index":1983}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\builder.rs","byte_start":18439,"byte_end":18454,"line_start":20,"line_end":20,"column_start":14,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":129},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":20970,"byte_end":20981,"line_start":11,"line_end":11,"column_start":30,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1342},"to":{"krate":0,"index":766}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":21142,"byte_end":21153,"line_start":19,"line_end":19,"column_start":6,"column_end":17},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":24793,"byte_end":24805,"line_start":104,"line_end":104,"column_start":30,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1347},"to":{"krate":0,"index":766}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\metrics.rs","byte_start":24969,"byte_end":24981,"line_start":112,"line_end":112,"column_start":6,"column_end":18},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":10442,"byte_end":10450,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":17870,"byte_end":17878,"line_start":240,"line_end":240,"column_start":22,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1352},"to":{"krate":2,"index":1971}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_face\\mod.rs","byte_start":17903,"byte_end":17911,"line_start":241,"line_end":241,"column_start":22,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1352},"to":{"krate":2,"index":1983}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_family\\mod.rs","byte_start":27901,"byte_end":27911,"line_start":20,"line_end":20,"column_start":6,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_family\\mod.rs","byte_start":30860,"byte_end":30870,"line_start":110,"line_end":110,"column_start":22,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1356},"to":{"krate":2,"index":1971}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_family\\mod.rs","byte_start":30895,"byte_end":30905,"line_start":111,"line_end":111,"column_start":22,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1356},"to":{"krate":2,"index":1983}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\builder.rs","byte_start":31985,"byte_end":32000,"line_start":18,"line_end":18,"column_start":10,"column_end":25},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\mod.rs","byte_start":31146,"byte_end":31154,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\mod.rs","byte_start":31538,"byte_end":31546,"line_start":30,"line_end":30,"column_start":22,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1360},"to":{"krate":2,"index":1971}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_file\\mod.rs","byte_start":31571,"byte_end":31579,"line_start":31,"line_end":31,"column_start":22,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1360},"to":{"krate":2,"index":1983}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_list\\mod.rs","byte_start":33293,"byte_end":33301,"line_start":10,"line_end":10,"column_start":6,"column_end":14},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_list\\mod.rs","byte_start":33559,"byte_end":33567,"line_start":22,"line_end":22,"column_start":22,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":1971}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\font_list\\mod.rs","byte_start":33592,"byte_end":33600,"line_start":23,"line_end":23,"column_start":22,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":1983}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":34015,"byte_end":34036,"line_start":20,"line_end":20,"column_start":6,"column_end":27},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":34775,"byte_end":34778,"line_start":48,"line_end":48,"column_start":25,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2463},"to":{"krate":0,"index":322}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":34781,"byte_end":34785,"line_start":48,"line_end":48,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1971},"to":{"krate":0,"index":322}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":34788,"byte_end":34792,"line_start":48,"line_end":48,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":1983},"to":{"krate":0,"index":322}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":35785,"byte_end":35800,"line_start":86,"line_end":86,"column_start":6,"column_end":21},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":36050,"byte_end":36065,"line_start":98,"line_end":98,"column_start":34,"column_end":49},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1368},"to":{"krate":0,"index":345}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":36194,"byte_end":36197,"line_start":104,"line_end":104,"column_start":34,"column_end":37},"kind":{"Impl":{"id":36}},"from":{"krate":5,"index":4030},"to":{"krate":0,"index":345}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":36359,"byte_end":36380,"line_start":110,"line_end":110,"column_start":22,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":314},"to":{"krate":2,"index":1971}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\inline_object\\mod.rs","byte_start":36405,"byte_end":36426,"line_start":111,"line_end":111,"column_start":22,"column_end":43},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":314},"to":{"krate":2,"index":1983}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\builder.rs","byte_start":49265,"byte_end":49282,"line_start":24,"line_end":24,"column_start":10,"column_end":27},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":42053,"byte_end":42063,"line_start":24,"line_end":24,"column_start":6,"column_end":16},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":48635,"byte_end":48645,"line_start":242,"line_end":242,"column_start":22,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1381},"to":{"krate":2,"index":1971}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_format\\mod.rs","byte_start":48670,"byte_end":48680,"line_start":243,"line_end":243,"column_start":22,"column_end":32},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1381},"to":{"krate":2,"index":1983}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\builder.rs","byte_start":74960,"byte_end":74977,"line_start":20,"line_end":20,"column_start":10,"column_end":27},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":77300,"byte_end":77307,"line_start":13,"line_end":13,"column_start":30,"column_end":37},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1389},"to":{"krate":0,"index":766}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":77464,"byte_end":77471,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":79725,"byte_end":79739,"line_start":93,"line_end":93,"column_start":18,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1394},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":79854,"byte_end":79868,"line_start":100,"line_end":100,"column_start":30,"column_end":44},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1394},"to":{"krate":0,"index":766}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":80038,"byte_end":80052,"line_start":108,"line_end":108,"column_start":6,"column_end":20},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":81402,"byte_end":81413,"line_start":159,"line_end":159,"column_start":18,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1399},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":81528,"byte_end":81539,"line_start":166,"line_end":166,"column_start":30,"column_end":41},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1399},"to":{"krate":0,"index":766}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":81700,"byte_end":81711,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":83465,"byte_end":83480,"line_start":227,"line_end":227,"column_start":30,"column_end":45},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1404},"to":{"krate":0,"index":766}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":83653,"byte_end":83668,"line_start":235,"line_end":235,"column_start":6,"column_end":21},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":84485,"byte_end":84499,"line_start":268,"line_end":268,"column_start":18,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":84614,"byte_end":84628,"line_start":275,"line_end":275,"column_start":30,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1409},"to":{"krate":0,"index":766}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\metrics.rs","byte_start":84792,"byte_end":84806,"line_start":283,"line_end":283,"column_start":6,"column_end":20},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":52375,"byte_end":52385,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":71517,"byte_end":71526,"line_start":618,"line_end":618,"column_start":34,"column_end":43},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":71721,"byte_end":71730,"line_start":627,"line_end":627,"column_start":32,"column_end":41},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":72049,"byte_end":72058,"line_start":640,"line_end":640,"column_start":34,"column_end":43},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":72236,"byte_end":72245,"line_start":649,"line_end":649,"column_start":36,"column_end":45},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":72429,"byte_end":72438,"line_start":658,"line_end":658,"column_start":31,"column_end":40},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":1889}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":74514,"byte_end":74524,"line_start":712,"line_end":712,"column_start":22,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1414},"to":{"krate":2,"index":1971}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_layout\\mod.rs","byte_start":74549,"byte_end":74559,"line_start":713,"line_end":713,"column_start":22,"column_end":32},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1414},"to":{"krate":2,"index":1983}},{"span":{"file_name":"C:\\Users\\falik\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directwrite-0.1.4\\src\\text_renderer\\mod.rs","byte_start":88715,"byte_end":88733,"line_start":97,"line_end":97,"column_start":10,"column_end":28},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":749},"to":{"krate":4294967295,"index":4294967295}}]}